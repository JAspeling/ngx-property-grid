{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./dist/ngx-property-grid/__ivy_ngcc__/fesm2015/ngx-property-grid.js","./src/app/showcase/app.component.ts","./src/app/showcase/app.component.html","./src/app/showcase/showcase.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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QAAQ,gEAAyB;AACjC,KAAK,EAAE,oBAAoB;AAC3B;AACA,KAAK,OAAO,sEAAwB;AACpC;AACA,wDAAU;AACV,IAAI,+DAAS,eAAe,OAAO,8DAAgB,EAAE;AACrD;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,4DAAM;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,yCAAyC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,+DAAwB,GAAG;AAClN,6BAA6B,+DAAwB,EAAE,oJAAoJ;AAC3M,QAAQ,4DAAqB,WAAW,wDAAW;AACnD,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,4DAA4D;AACnE,QAAQ,yDAAkB,CAAC,wDAAW;AACtC,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,WAAW,uMAAuM,ywCAAywC;AACl+C,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,wDAAiB,gFAAgF,oEAA6B;AACtI,QAAQ,wDAAiB;AACzB,KAAK;AACL,QAAQ,yDAAkB;AAC1B,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,eAAe,uDAAc,EAAE,uDAAc,EAAE,oDAAW,EAAE,gEAAuB;AAC1F,yBAAyB,wDAAkB,gDAAgD,iCAAiC,0DAA0D,4DAA4D,yDAAyD,oCAAoC,6CAA6C,yDAAyD,0CAA0C,oCAAoC,iCAAiC,mCAAmC,sCAAsC,eAAe,oGAAoG,0CAA0C,mCAAmC,eAAe,4DAA4D,mCAAmC,eAAe,gGAAgG,kCAAkC,eAAe,uGAAuG,qCAAqC,4CAA4C,sCAAsC,mCAAmC,oCAAoC,+FAA+F,uGAAuG,8BAA8B,eAAe,8GAA8G,mCAAmC,oCAAoC,+BAA+B,eAAe,sGAAsG,kCAAkC,iCAAiC,0CAA0C,yCAAyC,iIAAiI,gCAAgC,sCAAsC,+CAA+C,eAAe,8HAA8H,0CAA0C,oCAAoC,iCAAiC,mCAAmC,mDAAmD,eAAe,WAAW;AACppF,YAAY,mEAAO;AACnB,gBAAgB,iEAAK,WAAW,iEAAK;AACrC;AACA,iBAAiB;AACjB,gBAAgB,iEAAK,YAAY,iEAAK;AACtC;AACA,iBAAiB;AACjB,gBAAgB,sEAAU,uBAAuB,mEAAO;AACxD;AACA,YAAY,mEAAO;AACnB,gBAAgB,iEAAK,OAAO,iEAAK,EAAE,6BAA6B;AAChE,gBAAgB,sEAAU;AAC1B,oBAAoB,iEAAK,EAAE,iCAAiC;AAC5D,oBAAoB,mEAAO;AAC3B;AACA,gBAAgB,sEAAU;AAC1B,oBAAoB,mEAAO,MAAM,iEAAK,EAAE,gCAAgC;AACxE;AACA;AACA,WAAW,EAAE;AACb;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,+DAAiB;AAC7B;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,kEAAY,CAAC,wDAAW;AAC5B;AACA,wDAAU;AACV,IAAI,qEAAe,CAAC,wDAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,0BAA0B,8DAAuB,EAAE,2BAA2B;AAC9E,0BAA0B,8DAAuB,EAAE,kDAAkD,wCAAwC,EAAE;AAC/I,YAAY,4DAAY,EAAE,8DAAiB;AAC3C,YAAY;AACZ,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,sEAA+B,EAAE,EAAE,EAAE,GAAG;AAC9E,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,uDAAS;AAC3B,iCAAiC,OAAO,8DAAgB,EAAE;AAC1D,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oHAAoH,YAAY;AAChI;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,2EAA2E,WAAW,gBAAgB;AACtG;AACA;AACA;AACA;AACA,iFAAiF,WAAW,gBAAgB;AAC5G;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,WAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;;;AAGA;AACA;AACA,0FAA0F,WAAW,+BAA+B;AACpI;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAyB,SAAS;AAClC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mEAAO;AAC3B,wBAAwB,iEAAK,WAAW,iEAAK;AAC7C;AACA,yBAAyB;AACzB,wBAAwB,iEAAK,YAAY,iEAAK;AAC9C;AACA,yBAAyB;AACzB,wBAAwB,sEAAU,uBAAuB,mEAAO;AAChE;AACA,oBAAoB,mEAAO;AAC3B,wBAAwB,iEAAK,OAAO,iEAAK,EAAE,6BAA6B;AACxE,wBAAwB,sEAAU;AAClC,4BAA4B,iEAAK,EAAE,iCAAiC;AACpE,4BAA4B,mEAAO;AACnC;AACA,wBAAwB,sEAAU;AAClC,4BAA4B,mEAAO,MAAM,iEAAK,EAAE,gCAAgC;AAChF;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { __decorate } from 'tslib';\nimport { CommonModule } from '@angular/common';\nimport { EventEmitter, ComponentFactoryResolver, ViewChild, ViewContainerRef, Input, Output, Component, ElementRef, ChangeDetectorRef, ViewChildren, ContentChildren, NgModule } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { NgxTemplate, NgxTemplateModule } from 'ngx-template';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'ngx-template';\n\nconst _c0 = [\"container\"];\nfunction PropertyGridComponent_ng_container_4_tr_1_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"tr\");\n    ɵngcc0.ɵɵelementStart(1, \"td\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function PropertyGridComponent_ng_container_4_tr_1_Template_td_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r9); const group_r5 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.groupCollapse && group_r5.toggle(); });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const group_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(group_r5.name);\n} }\nfunction PropertyGridComponent_ng_container_4_ng_container_2_tr_1_span_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 10);\n    ɵngcc0.ɵɵtext(1, \"[?]\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r12 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵproperty(\"title\", item_r12.description);\n} }\nfunction PropertyGridComponent_ng_container_4_ng_container_2_tr_1_ng_container_4_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n} }\nconst _c1 = function (a0) { return { $implicit: a0 }; };\nfunction PropertyGridComponent_ng_container_4_ng_container_2_tr_1_ng_container_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, PropertyGridComponent_ng_container_4_ng_container_2_tr_1_ng_container_4_ng_container_1_Template, 1, 0, \"ng-container\", 11);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const item_r12 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵnextContext(2);\n    const _r2 = ɵngcc0.ɵɵreference(7);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r2)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c1, item_r12));\n} }\nfunction PropertyGridComponent_ng_container_4_ng_container_2_tr_1_Template(rf, ctx) { if (rf & 1) {\n    const _r22 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"tr\");\n    ɵngcc0.ɵɵelementStart(1, \"td\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function PropertyGridComponent_ng_container_4_ng_container_2_tr_1_Template_td_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r22); const item_r12 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r20 = ɵngcc0.ɵɵnextContext(2); return ctx_r20.openLink(item_r12.link); });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵtemplate(3, PropertyGridComponent_ng_container_4_ng_container_2_tr_1_span_3_Template, 2, 1, \"span\", 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, PropertyGridComponent_ng_container_4_ng_container_2_tr_1_ng_container_4_Template, 2, 4, \"ng-container\", 6);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r12 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"cursor\", item_r12.link ? \"pointer\" : null);\n    ɵngcc0.ɵɵattribute(\"colspan\", item_r12.colSpan2 == true ? 2 : 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", item_r12.name, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r13.showHelp && item_r12.showHelp && item_r12.description);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !item_r12.colSpan2);\n} }\nfunction PropertyGridComponent_ng_container_4_ng_container_2_tr_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n} }\nfunction PropertyGridComponent_ng_container_4_ng_container_2_tr_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\");\n    ɵngcc0.ɵɵtemplate(1, PropertyGridComponent_ng_container_4_ng_container_2_tr_2_ng_container_1_Template, 1, 0, \"ng-container\", 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r12 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵnextContext(2);\n    const _r2 = ɵngcc0.ɵɵreference(7);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r2)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c1, item_r12));\n} }\nfunction PropertyGridComponent_ng_container_4_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, PropertyGridComponent_ng_container_4_ng_container_2_tr_1_Template, 5, 6, \"tr\", 6);\n    ɵngcc0.ɵɵtemplate(2, PropertyGridComponent_ng_container_4_ng_container_2_tr_2_Template, 2, 4, \"tr\", 6);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const item_r12 = ctx.$implicit;\n    const group_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", group_r5.state);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", group_r5.state && item_r12.colSpan2);\n} }\nfunction PropertyGridComponent_ng_container_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, PropertyGridComponent_ng_container_4_tr_1_Template, 3, 1, \"tr\", 6);\n    ɵngcc0.ɵɵtemplate(2, PropertyGridComponent_ng_container_4_ng_container_2_Template, 3, 2, \"ng-container\", 3);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const group_r5 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", group_r5.name);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", group_r5.items);\n} }\nfunction PropertyGridComponent_div_5_Template(rf, ctx) { if (rf & 1) {\n    const _r30 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13);\n    ɵngcc0.ɵɵlistener(\"click\", function PropertyGridComponent_div_5_Template_div_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r30); const _r28 = ɵngcc0.ɵɵreference(5); return _r28.toggle(); });\n    ɵngcc0.ɵɵelementStart(2, \"b\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(4, \"ngx-property-grid\", 14, 15);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r27 = ctx.$implicit;\n    const _r28 = ɵngcc0.ɵɵreference(5);\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r1.cardStyle ? \"card\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r1.cardStyle ? null : \"property-grid-header-margin\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(item_r27.name);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"showHelp\", ctx_r1.showHelp)(\"state\", item_r27.initState)(\"@collapseAnimation\", _r28.state)(\"options\", ctx_r1.options[item_r27.key])(\"width\", ctx_r1.width)(\"labelWidth\", ctx_r1.labelWidth)(\"templateMap\", ctx_r1.templateMap);\n} }\nfunction PropertyGridComponent_ng_template_6_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n} }\nfunction PropertyGridComponent_ng_template_6_custom_component_2_Template(rf, ctx) { if (rf & 1) {\n    const _r36 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"custom-component\", 18);\n    ɵngcc0.ɵɵlistener(\"valueChange\", function PropertyGridComponent_ng_template_6_custom_component_2_Template_custom_component_valueChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r36); const item_r31 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r34 = ɵngcc0.ɵɵnextContext(); return ctx_r34.convertValue(item_r31, $event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r31 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r33 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"componentType\", item_r31.type)(\"componentOptions\", item_r31.options)(\"value\", ctx_r33.options[item_r31.key]);\n} }\nfunction PropertyGridComponent_ng_template_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 16);\n    ɵngcc0.ɵɵtemplate(1, PropertyGridComponent_ng_template_6_ng_container_1_Template, 1, 0, \"ng-container\", 11);\n    ɵngcc0.ɵɵtemplate(2, PropertyGridComponent_ng_template_6_custom_component_2_Template, 1, 3, \"custom-component\", 17);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r31 = ctx.$implicit;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵattribute(\"colspan\", item_r31.colSpan2 == true ? 2 : 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.templateLoaded && ctx_r3.getTemplate(item_r31.type))(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(4, _c1, ctx_r3.propertyValue(item_r31)));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.templateLoaded && !ctx_r3.getTemplate(item_r31.type));\n} }\nfunction PropertyGridComponent_ng_container_8_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    const _r46 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 25);\n    ɵngcc0.ɵɵlistener(\"change\", function PropertyGridComponent_ng_container_8_ng_template_1_Template_input_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r46); const p_r44 = ctx.$implicit; return p_r44.value = $event.target.checked; });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const p_r44 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"checked\", p_r44.value);\n} }\nfunction PropertyGridComponent_ng_container_8_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    const _r49 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 26);\n    ɵngcc0.ɵɵlistener(\"change\", function PropertyGridComponent_ng_container_8_ng_template_2_Template_input_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r49); const p_r47 = ctx.$implicit; return p_r47.value = $event.target.value; });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const p_r47 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", p_r47.value);\n} }\nfunction PropertyGridComponent_ng_container_8_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    const _r52 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 27);\n    ɵngcc0.ɵɵlistener(\"change\", function PropertyGridComponent_ng_container_8_ng_template_3_Template_input_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r52); const p_r50 = ctx.$implicit; return p_r50.value = $event.target.value; });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const p_r50 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", p_r50.value);\n} }\nfunction PropertyGridComponent_ng_container_8_ng_template_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"label\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const p_r53 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(p_r53.value);\n} }\nfunction PropertyGridComponent_ng_container_8_ng_template_5_Template(rf, ctx) { if (rf & 1) {\n    const _r56 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 28);\n    ɵngcc0.ɵɵlistener(\"change\", function PropertyGridComponent_ng_container_8_ng_template_5_Template_input_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r56); const p_r54 = ctx.$implicit; return p_r54.value = $event.target.value; });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const p_r54 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", p_r54.value);\n} }\nfunction PropertyGridComponent_ng_container_8_ng_template_6_option_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const option_r59 = ctx.$implicit;\n    const ctx_r58 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r58.optionValue(option_r59));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r58.optionLabel(option_r59), \" \");\n} }\nfunction PropertyGridComponent_ng_container_8_ng_template_6_Template(rf, ctx) { if (rf & 1) {\n    const _r61 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"select\", 29);\n    ɵngcc0.ɵɵlistener(\"change\", function PropertyGridComponent_ng_container_8_ng_template_6_Template_select_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r61); const p_r57 = ctx.$implicit; return p_r57.value = $event.target.value; });\n    ɵngcc0.ɵɵtemplate(1, PropertyGridComponent_ng_container_8_ng_template_6_option_1_Template, 2, 2, \"option\", 30);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const p_r57 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", p_r57.meta.options);\n} }\nfunction PropertyGridComponent_ng_container_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, PropertyGridComponent_ng_container_8_ng_template_1_Template, 1, 1, \"ng-template\", 19);\n    ɵngcc0.ɵɵtemplate(2, PropertyGridComponent_ng_container_8_ng_template_2_Template, 1, 1, \"ng-template\", 20);\n    ɵngcc0.ɵɵtemplate(3, PropertyGridComponent_ng_container_8_ng_template_3_Template, 1, 1, \"ng-template\", 21);\n    ɵngcc0.ɵɵtemplate(4, PropertyGridComponent_ng_container_8_ng_template_4_Template, 2, 1, \"ng-template\", 22);\n    ɵngcc0.ɵɵtemplate(5, PropertyGridComponent_ng_container_8_ng_template_5_Template, 1, 1, \"ng-template\", 23);\n    ɵngcc0.ɵɵtemplate(6, PropertyGridComponent_ng_container_8_ng_template_6_Template, 2, 1, \"ng-template\", 24);\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nlet CustomComponent = class CustomComponent {\n    constructor(componentFactoryResolver) {\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.valueChange = new EventEmitter();\n        this._controlValueChangeFn = (value) => this.onValueChange(value);\n    }\n    set value(v) {\n        this._value = v;\n        if (this.component) {\n            this.component.instance.value = v;\n        }\n    }\n    get value() {\n        return this._value;\n    }\n    ngOnInit() {\n        this.buildComponent();\n    }\n    onValueChange(e) {\n        this._value = e;\n        this.valueChange.emit(e);\n    }\n    buildComponent() {\n        if (!this.componentType) {\n            return;\n        }\n        try {\n            this.destroyComponent();\n            // this.entry.clear();\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\n            const component = this.entry.createComponent(componentFactory, 0);\n            this.initComponent(component);\n            this.component = component;\n        }\n        catch (e) {\n            console.error('load component error.');\n            console.error(e);\n        }\n    }\n    initComponent(component) {\n        component.instance.value = this._value;\n        if (component.instance.registerOnChange) {\n            component.instance.registerOnChange(this._controlValueChangeFn);\n        }\n        if (component.instance.valueChange) {\n            component.instance.valueChange.subscribe(this._controlValueChangeFn);\n        }\n        if (this.componentOptions) {\n            Object.assign(component.instance, this.componentOptions);\n        }\n    }\n    destroyComponent() {\n        if (this.component) {\n            this.component.destroy();\n        }\n    }\n};\nCustomComponent.ɵfac = function CustomComponent_Factory(t) { return new (t || CustomComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver)); };\nCustomComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CustomComponent, selectors: [[\"custom-component\"]], viewQuery: function CustomComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true, ViewContainerRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.entry = _t.first);\n    } }, inputs: { value: \"value\", componentType: \"componentType\", componentOptions: \"componentOptions\" }, outputs: { valueChange: \"valueChange\" }, decls: 2, vars: 0, consts: [[\"container\", \"\"]], template: function CustomComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, null, 0);\n    } }, encapsulation: 2 });\nCustomComponent.ctorParameters = () => [\n    { type: ComponentFactoryResolver }\n];\n__decorate([\n    ViewChild('container', { read: ViewContainerRef })\n], CustomComponent.prototype, \"entry\", void 0);\n__decorate([\n    Input()\n], CustomComponent.prototype, \"componentType\", void 0);\n__decorate([\n    Input()\n], CustomComponent.prototype, \"componentOptions\", void 0);\n__decorate([\n    Input()\n], CustomComponent.prototype, \"value\", null);\n__decorate([\n    Output()\n], CustomComponent.prototype, \"valueChange\", void 0);\n\nlet PropertyGridComponent = class PropertyGridComponent {\n    constructor(el, cdr) {\n        this.cdr = cdr;\n        this._templateLoaded = false;\n        this.isInternal = false;\n        this.state = 'visible';\n        this.labelWidth = '120px';\n        this.cardStyle = true;\n        this.groupCollapse = false;\n        this.showHelp = true;\n        this.isInternal = el.nativeElement.parentElement && el.nativeElement.parentElement.classList &&\n            el.nativeElement.parentElement.classList.contains('internal-property-grid');\n    }\n    get templateLoaded() {\n        return this._templateLoaded;\n    }\n    set meta(v) {\n        this._meta = v;\n        this.initMeta();\n    }\n    get meta() {\n        return this._meta;\n    }\n    set options(v) {\n        this._options = v;\n        if (v.__meta__) {\n            this.meta = v.__meta__;\n        }\n    }\n    get options() {\n        return this._options;\n    }\n    ngAfterViewInit() {\n        if (this.isInternal) {\n            this._templateLoaded = true;\n        }\n        else {\n            if (this.defaultTemplates) {\n                this.defaultTemplates.forEach((item) => {\n                    if (!this.templateMap.hasOwnProperty(item.name)) {\n                        this.templateMap[item.name] = item.template;\n                    }\n                });\n                this._templateLoaded = true;\n                this.cdr.detectChanges();\n            }\n        }\n    }\n    ngAfterContentInit() {\n        if (!this.isInternal) {\n            if (!this.templateMap) {\n                this.templateMap = {};\n            }\n            this.templates.forEach((item) => {\n                this.templateMap[item.name] = item.template;\n            });\n        }\n    }\n    openLink(link) {\n        if (link) {\n            window.open(link, '_blank');\n        }\n    }\n    getTemplate(type) {\n        if (typeof type === 'string' && this.templateMap) {\n            return type ? this.templateMap[type] : this.templateMap['default'];\n        }\n        else {\n            return undefined;\n        }\n    }\n    propertyValue(meta) {\n        return new PropertyValue(this.options, meta);\n    }\n    toggle() {\n        this.state = this.state === 'visible' ? 'hidden' : 'visible';\n    }\n    convertValue(meta, val) {\n        this.options[meta.key] = meta.valueConvert ? meta.valueConvert(val) : val;\n    }\n    initMeta() {\n        const meta = this.meta;\n        if (!meta) {\n            this.subItems = [];\n            return;\n        }\n        const groups = [new InternalGroup(undefined)];\n        const subItems = [];\n        for (const i in meta) {\n            if (!meta.hasOwnProperty(i)) {\n                continue;\n            }\n            const v = meta[i];\n            if (v.hidden) {\n                continue;\n            }\n            if (v.type === 'subItems') {\n                subItems.push(v);\n                continue;\n            }\n            let group = groups.find(o => o.name === v.group);\n            if (!group) {\n                group = new InternalGroup(v.group);\n                groups.push(group);\n            }\n            group.items.push(v);\n        }\n        groups.forEach(o => o.items.sort((a, b) => a.order - b.order));\n        this.groups = groups.filter(o => o.items.length > 0);\n        this.subItems = subItems;\n    }\n    optionLabel(v) {\n        if (typeof v === 'string') {\n            return v;\n        }\n        if (v.text) {\n            return v.text;\n        }\n        if (v.label) {\n            return v.label;\n        }\n        return v;\n    }\n    optionValue(v) {\n        return v && v.value ? v.value : v;\n    }\n};\nPropertyGridComponent.ɵfac = function PropertyGridComponent_Factory(t) { return new (t || PropertyGridComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nPropertyGridComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: PropertyGridComponent, selectors: [[\"ngx-property-grid\"]], contentQueries: function PropertyGridComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgxTemplate, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);\n    } }, viewQuery: function PropertyGridComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(NgxTemplate, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.defaultTemplates = _t);\n    } }, inputs: { state: \"state\", labelWidth: \"labelWidth\", cardStyle: \"cardStyle\", groupCollapse: \"groupCollapse\", showHelp: \"showHelp\", meta: \"meta\", options: \"options\", templateMap: \"templateMap\", width: \"width\" }, decls: 9, vars: 9, consts: [[1, \"property-grid\", 3, \"ngClass\"], [3, \"ngClass\"], [1, \"property-grid-table\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"internal-property-grid\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"controlTemplate\", \"\"], [4, \"ngIf\"], [\"colspan\", \"2\", 1, \"property-grid-group\", 3, \"click\"], [1, \"property-grid-label\", 3, \"click\"], [3, \"title\", 4, \"ngIf\"], [3, \"title\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"internal-property-grid\", 3, \"ngClass\"], [1, \"property-grid-header\", 3, \"ngClass\", \"click\"], [2, \"display\", \"block\", \"overflow\", \"hidden\", 3, \"showHelp\", \"state\", \"options\", \"width\", \"labelWidth\", \"templateMap\"], [\"pg\", \"\"], [1, \"property-grid-control\"], [3, \"componentType\", \"componentOptions\", \"value\", \"valueChange\", 4, \"ngIf\"], [3, \"componentType\", \"componentOptions\", \"value\", \"valueChange\"], [\"ngxTemplate\", \"checkbox\"], [\"ngxTemplate\", \"color\"], [\"ngxTemplate\", \"date\"], [\"ngxTemplate\", \"label\"], [\"ngxTemplate\", \"text\"], [\"ngxTemplate\", \"options\"], [\"type\", \"checkbox\", 3, \"checked\", \"change\"], [\"type\", \"color\", 3, \"value\", \"change\"], [\"type\", \"date\", 3, \"value\", \"change\"], [\"type\", \"text\", 3, \"value\", \"change\"], [3, \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function PropertyGridComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"table\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"tbody\");\n        ɵngcc0.ɵɵtemplate(4, PropertyGridComponent_ng_container_4_Template, 3, 2, \"ng-container\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(5, PropertyGridComponent_div_5_Template, 6, 10, \"div\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, PropertyGridComponent_ng_template_6_Template, 3, 6, \"ng-template\", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(8, PropertyGridComponent_ng_container_8_Template, 7, 0, \"ng-container\", 6);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.width);\n        ɵngcc0.ɵɵproperty(\"ngClass\", !ctx.isInternal && !ctx.cardStyle ? \"property-grid-border\" : null);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.cardStyle ? \"card\" : null);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.width);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.groups);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.subItems);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isInternal);\n    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, PropertyGridComponent,\n        CustomComponent, ɵngcc2.NgxTemplate], styles: [\".property-grid[_ngcontent-%COMP%] {\\n                \\n            }\\n\\n            .property-grid-border[_ngcontent-%COMP%] {\\n                border: 1px solid #d6d6d678\\n            }\\n\\n            .property-grid-table[_ngcontent-%COMP%] {\\n                border-spacing: 0;\\n                padding: 5px\\n            }\\n\\n            .property-grid-group[_ngcontent-%COMP%] {\\n                background-color: white;\\n                font-weight: bold;\\n                color: #616161;\\n                padding-top: 8px;\\n                padding-bottom: 5px;\\n            }\\n\\n            .property-grid-label[_ngcontent-%COMP%], .property-grid-control[_ngcontent-%COMP%] {\\n                border: dotted 1px #ccc;\\n                padding: 2px 5px;\\n            }\\n\\n            .internal-property-grid[_ngcontent-%COMP%] {\\n                margin-top: 12px;\\n            }\\n\\n            .internal-property-grid[_ngcontent-%COMP%]   .property-grid[_ngcontent-%COMP%] {\\n                border-width: 0;\\n            }\\n\\n            .internal-property-grid[_ngcontent-%COMP%]   .property-grid-header[_ngcontent-%COMP%] {\\n                margin-bottom: 5px;\\n                background-color: #f5f5f5;\\n                padding-bottom: 5px;\\n                padding-top: 5px;\\n                padding-left: 5px;\\n                box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\\n                -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\\n                width: 100%;\\n            }\\n\\n            .internal-property-grid[_ngcontent-%COMP%]   .property-grid-header-margin[_ngcontent-%COMP%] {\\n                margin-left: 5px;\\n                margin-right: 5px;\\n                width: unset;\\n            }\\n\\n            .internal-property-grid[_ngcontent-%COMP%]   .property-grid-table[_ngcontent-%COMP%] {\\n                border-width: 0;\\n                \\n            }\\n\\n            .card[_ngcontent-%COMP%] {\\n                background-color: #fff;\\n                box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\\n                display: flex;\\n                flex-flow: row wrap;\\n                \\n                padding: 0;\\n            }\\n\\n            .internal-property-grid[_ngcontent-%COMP%]   ngx-property-grid[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%] {\\n                background-color: unset;\\n                box-shadow: unset;\\n                display: unset;\\n                flex-flow: unset;\\n                \\n                padding: unset;\\n            }\"], data: { animation: [\n            trigger('collapseAnimation', [\n                state('hidden', style({\n                    height: '0'\n                })),\n                state('visible', style({\n                    height: '*'\n                })),\n                transition('visible <=> hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n            ]),\n            trigger('flyInOut', [\n                state('in', style({ transform: 'translateX(0)' })),\n                transition('void => *', [\n                    style({ transform: 'translateX(-100%)' }),\n                    animate(100)\n                ]),\n                transition('* => void', [\n                    animate(100, style({ transform: 'translateX(100%)' }))\n                ])\n            ])\n        ] } });\nPropertyGridComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\n__decorate([\n    Input()\n], PropertyGridComponent.prototype, \"templateMap\", void 0);\n__decorate([\n    Input()\n], PropertyGridComponent.prototype, \"state\", void 0);\n__decorate([\n    Input()\n], PropertyGridComponent.prototype, \"width\", void 0);\n__decorate([\n    Input()\n], PropertyGridComponent.prototype, \"labelWidth\", void 0);\n__decorate([\n    Input()\n], PropertyGridComponent.prototype, \"cardStyle\", void 0);\n__decorate([\n    Input()\n], PropertyGridComponent.prototype, \"groupCollapse\", void 0);\n__decorate([\n    Input()\n], PropertyGridComponent.prototype, \"showHelp\", void 0);\n__decorate([\n    Input()\n], PropertyGridComponent.prototype, \"meta\", null);\n__decorate([\n    Input()\n], PropertyGridComponent.prototype, \"options\", null);\n__decorate([\n    ViewChildren(NgxTemplate)\n], PropertyGridComponent.prototype, \"defaultTemplates\", void 0);\n__decorate([\n    ContentChildren(NgxTemplate)\n], PropertyGridComponent.prototype, \"templates\", void 0);\nclass PropertyValue {\n    constructor(o, meta) {\n        this.o = o;\n        this.meta = meta;\n    }\n    get value() {\n        return this.o[this.meta.key];\n    }\n    set value(val) {\n        this.o[this.meta.key] = this.meta.valueConvert ? this.meta.valueConvert(val) : val;\n    }\n}\nclass InternalGroup {\n    constructor(name) {\n        this.name = name;\n        this.items = [];\n        this.type = 'group';\n        this.state = true;\n    }\n    toggle() {\n        this.state = !this.state;\n    }\n}\n\nconst meta = (itemMeta) => (target, key) => {\n    // region [adjust]\n    itemMeta.key = key;\n    if (typeof itemMeta.type === 'string') {\n    }\n    else {\n    }\n    if (!itemMeta.type) {\n        itemMeta.type = 'text';\n    }\n    if (itemMeta.type === 'number' && !itemMeta.valueConvert) {\n        itemMeta.valueConvert = parseInt;\n    }\n    if (!itemMeta.initState) {\n        itemMeta.initState = 'hidden';\n    }\n    if (!itemMeta.order) {\n        itemMeta.order = Number.MAX_VALUE;\n    }\n    if (itemMeta.showHelp === undefined) {\n        itemMeta.showHelp = true;\n    }\n    // endregion\n    let __meta__ = target.__meta__;\n    if (!__meta__) {\n        __meta__ = {};\n        target.__meta__ = __meta__;\n    }\n    else if (target.__proto__.__meta__ === __meta__) {\n        const subMeta = Object.create(Object.getPrototypeOf(__meta__));\n        Object.getOwnPropertyNames(__meta__).forEach(name => {\n            Object.defineProperty(subMeta, name, Object.getOwnPropertyDescriptor(__meta__, name));\n        });\n        __meta__ = subMeta;\n        target.__meta__ = __meta__;\n    }\n    Object.defineProperty(__meta__, key, {\n        enumerable: true,\n        get: () => itemMeta,\n        set: (v) => itemMeta = v\n    });\n};\n\nlet PropertyGridModule = class PropertyGridModule {\n};\nPropertyGridModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PropertyGridModule });\nPropertyGridModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PropertyGridModule_Factory(t) { return new (t || PropertyGridModule)(); }, imports: [[\n            CommonModule, NgxTemplateModule\n        ]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CustomComponent, [{\n        type: Component,\n        args: [{\n                selector: 'custom-component',\n                template: '<ng-container #container></ng-container>'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }]; }, { valueChange: [{\n            type: Output\n        }], value: [{\n            type: Input\n        }], entry: [{\n            type: ViewChild,\n            args: ['container', { read: ViewContainerRef }]\n        }], componentType: [{\n            type: Input\n        }], componentOptions: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PropertyGridComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-property-grid',\n                template: `\n        <div class=\"property-grid\" [ngClass]=\"!isInternal && !cardStyle ? 'property-grid-border': null\" [style.width]=\"width\">\n            <div [ngClass]=\"cardStyle ? 'card' : null\">\n                <table class=\"property-grid-table\" [style.width]=\"width\">\n                    <tbody>\n                    <ng-container *ngFor=\"let group of groups\">\n                        <tr *ngIf=\"group.name\">\n                            <td colspan=\"2\" class=\"property-grid-group\" (click)=\"groupCollapse && group.toggle()\">{{group.name}}</td>\n                        </tr>\n\n                        <ng-container *ngFor=\"let item of group.items\">\n                            <tr *ngIf=\"group.state\">\n                                <td [attr.colspan]=\"item.colSpan2 == true ? 2 : 1\"\n                                    class=\"property-grid-label\"\n                                    [style.cursor]=\"item.link ? 'pointer' : null\"\n                                    (click)=\"openLink(item.link)\">\n                                    {{item.name}}\n                                    <span *ngIf=\"showHelp && item.showHelp && item.description\" [title]=\"item.description\">[?]</span>\n                                </td>\n                                <ng-container *ngIf=\"!item.colSpan2\">\n                                    <ng-container\n                                        *ngTemplateOutlet=\"controlTemplate; context: {$implicit: item}\">\n                                    </ng-container>\n                                </ng-container>\n                            </tr>\n                            <tr *ngIf=\"group.state && item.colSpan2\">\n                                <ng-container *ngTemplateOutlet=\"controlTemplate; context: {$implicit: item}\"></ng-container>\n                            </tr>\n                        </ng-container>\n                    </ng-container>\n                    </tbody>\n                </table>\n            </div>\n\n            <div *ngFor=\"let item of subItems\" class=\"internal-property-grid\" [ngClass]=\"cardStyle ? 'card' : null\">\n                <div (click)=\"pg.toggle()\" class=\"property-grid-header\"\n                     [ngClass]=\"cardStyle ? null : 'property-grid-header-margin'\">\n                    <b>{{item.name}}</b>\n                </div>\n                <ngx-property-grid\n                    [showHelp]=\"showHelp\"\n                    [state]=\"item.initState\"\n                    [@collapseAnimation]=\"pg.state\"\n                    [options]=\"options[item.key]\"\n                    [width]=\"width\"\n                    [labelWidth]=\"labelWidth\"\n                    [templateMap]=\"templateMap\"\n                    style=\"display: block;overflow: hidden\"\n                    #pg>\n                </ngx-property-grid>\n            </div>\n        </div>\n\n\n        <ng-template #controlTemplate let-item>\n            <td [attr.colspan]=\"item.colSpan2 == true ? 2 : 1\" class=\"property-grid-control\">\n                <ng-container *ngTemplateOutlet=\"templateLoaded && getTemplate(item.type); context: {$implicit: propertyValue(item)}\">\n                </ng-container>\n\n                <custom-component *ngIf=\"templateLoaded && !getTemplate(item.type)\"\n                                  [componentType]=\"item.type\"\n                                  [componentOptions]=\"item.options\"\n                                  [value]=\"options[item.key]\"\n                                  (valueChange)=\"convertValue(item, $event)\">\n                </custom-component>\n            </td>\n        </ng-template>\n\n\n        <ng-container *ngIf=\"!isInternal\">\n\n            <ng-template ngxTemplate=\"checkbox\" let-p>\n                <input type=\"checkbox\" [checked]=\"p.value\" (change)=\"p.value = $event.target.checked\"/>\n            </ng-template>\n\n            <ng-template ngxTemplate=\"color\" let-p>\n                <input type=\"color\" [value]=\"p.value\" (change)=\"p.value = $event.target.value\"/>\n            </ng-template>\n\n            <ng-template ngxTemplate=\"date\" let-p>\n                <input type=\"date\" [value]=\"p.value\" (change)=\"p.value = $event.target.value\"/>\n            </ng-template>\n\n            <ng-template ngxTemplate=\"label\" let-p>\n                <label>{{p.value}}</label>\n            </ng-template>\n\n            <ng-template ngxTemplate=\"text\" let-p>\n                <input type=\"text\" [value]=\"p.value\" (change)=\"p.value = $event.target.value\"/>\n            </ng-template>\n\n            <ng-template ngxTemplate=\"options\" let-p>\n                <select (change)=\"p.value = $event.target.value\">\n                    <option [value]=\"optionValue(option)\" *ngFor=\"let option of p.meta.options\">\n                        {{optionLabel(option)}}\n                    </option>\n                </select>\n            </ng-template>\n        </ng-container>\n    `,\n                animations: [\n                    trigger('collapseAnimation', [\n                        state('hidden', style({\n                            height: '0'\n                        })),\n                        state('visible', style({\n                            height: '*'\n                        })),\n                        transition('visible <=> hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n                    ]),\n                    trigger('flyInOut', [\n                        state('in', style({ transform: 'translateX(0)' })),\n                        transition('void => *', [\n                            style({ transform: 'translateX(-100%)' }),\n                            animate(100)\n                        ]),\n                        transition('* => void', [\n                            animate(100, style({ transform: 'translateX(100%)' }))\n                        ])\n                    ])\n                ],\n                styles: [`\n            .property-grid {\n                /*border: solid 1px #95B8E7;*/\n            }\n\n            .property-grid-border {\n                border: 1px solid #d6d6d678\n            }\n\n            .property-grid-table {\n                border-spacing: 0;\n                padding: 5px\n            }\n\n            .property-grid-group {\n                background-color: white;\n                font-weight: bold;\n                color: #616161;\n                padding-top: 8px;\n                padding-bottom: 5px;\n            }\n\n            .property-grid-label, .property-grid-control {\n                border: dotted 1px #ccc;\n                padding: 2px 5px;\n            }\n\n            .internal-property-grid {\n                margin-top: 12px;\n            }\n\n            .internal-property-grid .property-grid {\n                border-width: 0;\n            }\n\n            .internal-property-grid .property-grid-header {\n                margin-bottom: 5px;\n                background-color: #f5f5f5;\n                padding-bottom: 5px;\n                padding-top: 5px;\n                padding-left: 5px;\n                box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n                -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n                width: 100%;\n            }\n\n            .internal-property-grid .property-grid-header-margin {\n                margin-left: 5px;\n                margin-right: 5px;\n                width: unset;\n            }\n\n            .internal-property-grid .property-grid-table {\n                border-width: 0;\n                /*border-top: 1px solid #dbdbdb;*/\n            }\n\n            .card {\n                background-color: #fff;\n                box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n                display: flex;\n                flex-flow: row wrap;\n                /*margin: 5px 20px;*/\n                padding: 0;\n            }\n\n            .internal-property-grid ngx-property-grid .card {\n                background-color: unset;\n                box-shadow: unset;\n                display: unset;\n                flex-flow: unset;\n                /*margin: 5px 20px;*/\n                padding: unset;\n            }\n        `]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { state: [{\n            type: Input\n        }], labelWidth: [{\n            type: Input\n        }], cardStyle: [{\n            type: Input\n        }], groupCollapse: [{\n            type: Input\n        }], showHelp: [{\n            type: Input\n        }], meta: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }], templateMap: [{\n            type: Input\n        }], width: [{\n            type: Input\n        }], defaultTemplates: [{\n            type: ViewChildren,\n            args: [NgxTemplate]\n        }], templates: [{\n            type: ContentChildren,\n            args: [NgxTemplate]\n        }] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PropertyGridModule, { declarations: function () { return [PropertyGridComponent,\n        CustomComponent]; }, imports: function () { return [CommonModule, NgxTemplateModule]; }, exports: function () { return [PropertyGridComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PropertyGridModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule, NgxTemplateModule\n                ],\n                declarations: [\n                    PropertyGridComponent,\n                    CustomComponent\n                ],\n                exports: [\n                    PropertyGridComponent\n                ]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of ngx-property-grid\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CustomComponent, InternalGroup, PropertyGridComponent, PropertyGridModule, PropertyValue, meta };\n\n//# sourceMappingURL=ngx-property-grid.js.map","import {Component, EventEmitter} from '@angular/core';\nimport {MatCheckbox} from \"@angular/material/checkbox\";\nimport {MatSlideToggle} from \"@angular/material/slide-toggle\";\nimport {ICustomDynamicComponent, meta} from \"ngx-property-grid\";\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent {\n    public student: ExampleStudentOptions = new ExampleStudentOptions();\n\n    constructor() {\n    }\n\n    public get data(): string {\n        return JSON.parse(JSON.stringify(this.student));\n    }\n\n    text: string;\n}\n\n@Component({\n    selector: 'app-text-editor',\n    template: `<input type=\"text\" [value]=\"value\" (change)=\"valueChange.emit($event.target.value)\"/>`\n})\nexport class SimpleTextEditorComponent implements ICustomDynamicComponent<string> {\n    value: string;\n    valueChange: EventEmitter<string> = new EventEmitter<string>();\n}\n\nexport class ExampleEditorOptions {\n    @meta({\n        name: 'Font', description: 'The font editor to use', colSpan2: false,\n        type: SimpleTextEditorComponent, group: 'Editor', hidden: false\n    })\n    font = 'Source Code Pro';\n\n    @meta({name: 'Font size', group: 'Editor', valueConvert: parseInt, type: 'fontSize'})\n    fontSize = 14;\n\n    @meta({name: 'Font color', group: 'Editor', type: 'color'})\n    fontColor = '#51f41c';\n\n    @meta({name: 'jQuery', group: 'Plugins', type: MatCheckbox})\n    jQuery = true;\n\n    @meta({name: 'Card Style', group: 'Style', type: MatCheckbox})\n    cardStyle = true;\n\n    @meta({\n        name: 'modernizr',\n        description: 'Whether or not to include modernizr on the page',\n        group: 'Plugins',\n        type: MatSlideToggle\n    })\n    modernizr = false;\n\n    @meta({\n        name: 'Framework',\n        description: 'Whether to include any additional framework',\n        type: 'options',\n        options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]\n    })\n    framework = 'None';\n\n}\n\nexport class ExampleStudentOptions {\n\n    @meta({name: 'Birth', group: 'Basic Information', type: 'date', order: 4})\n    birth = '2018-05-08';\n\n    @meta({name: 'Name', group: 'Basic Information', type: 'text', order: 1, link: 'http://www.baidu.com'})\n    name = 'Lily';\n\n    @meta({name: 'Age', group: 'Basic Information1', valueConvert: parseInt, type: 'text', order: 2})\n    age = 19;\n\n    @meta({name: 'Telephone', type: 'telephone', group: 'Basic Information1', hidden: true})\n    telephone;\n\n    @meta({name: 'Gender', group: 'Basic Information', type: 'sex', order: 3})\n    gender = 'male';\n\n    @meta({name: 'Editor Preference', type: 'subItems', initState: 'visible'})\n    editor: ExampleEditorOptions = new ExampleEditorOptions();\n}\n","<div>\n    <h1 style=\"text-align: center\">Property Grid Example</h1>\n    <div style=\"display: flex; flex-direction: row\">\n\n        <ngx-property-grid [width]=\"'400px'\" [options]=\"student\" [showHelp]=\"true\" [groupCollapse]=\"true\" [cardStyle]=\"student.editor.cardStyle\">\n            <ng-template ngxTemplate=\"text\" let-p>\n                <input type=\"text\" [value]=\"p.value\" (change)=\"p.value = $event.target.value\">\n            </ng-template>\n            <ng-template ngxTemplate=\"fontSize\" let-pp>\n                <input matInput type=\"number\" placeholder=\"Value\" [(ngModel)]=\"pp.value\">\n                <!--<span>字体大小</span>-->\n            </ng-template>\n\n            <ng-template ngxTemplate=\"date\" let-p>\n                <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\" [(ngModel)]=\"p.value\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n            </ng-template>\n\n            <ng-template ngxTemplate=\"sex\" let-p>\n                <mat-radio-group  [(ngModel)]=\"p.value\">\n                    <mat-radio-button value=\"male\">male</mat-radio-button>\n                    <mat-radio-button value=\"female\">female</mat-radio-button>\n                </mat-radio-group>\n            </ng-template>\n        </ngx-property-grid>\n\n        <div style=\"margin-left: 50px; flex: 1\">\n            <div> <h3>The Object：</h3> </div>\n          <ngx-json-view [data]=\"data\" [levelOpen]=\"1\"></ngx-json-view>\n        </div>\n    </div>\n\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\n\nimport {AppComponent, SimpleTextEditorComponent} from './app.component';\nimport {BrowserAnimationsModule, NoopAnimationsModule} from '@angular/platform-browser/animations';\n\nimport {FormsModule} from '@angular/forms';\nimport {NgxTemplateModule} from 'ngx-template';\nimport {MatCheckbox, MatCheckboxModule} from \"@angular/material/checkbox\";\nimport {MatSlider, MatSliderModule} from \"@angular/material/slider\";\nimport {MatDatepicker, MatDatepickerModule} from \"@angular/material/datepicker\";\nimport {MatSlideToggle, MatSlideToggleModule} from \"@angular/material/slide-toggle\";\nimport {MatNativeDateModule} from \"@angular/material/core\";\nimport {MatRadioModule} from \"@angular/material/radio\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {NgxJsonViewModule} from \"ng-json-view\";\nimport {PropertyGridModule} from \"ngx-property-grid\";\n\n@NgModule({\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\n    imports: [\n        BrowserModule, FormsModule, NoopAnimationsModule, PropertyGridModule, NgxTemplateModule,\n        NgxJsonViewModule, BrowserAnimationsModule,\n        MatCheckboxModule, MatSliderModule, MatDatepickerModule, MatSlideToggleModule,\n        MatNativeDateModule, MatRadioModule, MatInputModule\n    ],\n    entryComponents: [SimpleTextEditorComponent, MatCheckbox, MatSlider, MatDatepicker, MatSlideToggle],\n    declarations: [\n        AppComponent, SimpleTextEditorComponent\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class ShowcaseModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { environment } from './environments/environment';\nimport {ShowcaseModule} from \"./app/showcase/showcase.module\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(ShowcaseModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}