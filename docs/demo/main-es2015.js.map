{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./projects/ngx-property-grid/src/lib/load-component.directive.ts","./projects/ngx-property-grid/src/lib/property-grid.component.ts","./projects/ngx-property-grid/src/lib/property-grid.module.ts","./projects/ngx-property-grid/src/lib/property-item-meta.ts","./projects/ngx-property-grid/src/public-api.ts","./src/app/showcase/app.component.ts","./src/app/showcase/app.component.html","./src/app/showcase/showcase.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {\n  ComponentFactoryResolver,\n  ComponentRef, Directive,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\n\n@Directive({\n    selector: '[loadComponent]',\n})\nexport class LoadComponentDirective implements OnInit, ICustomDynamicComponent<any> {\n    private readonly _controlValueChangeFn: (value: any) => void;\n    private _value: any;\n\n    private component: ComponentRef<ICustomDynamicComponent<any>>;\n\n    @Input() componentType: Type<PropertyValueAccess>;\n\n    @Input()\n    componentOptions: any;\n\n    @Input()\n    set value(v: any) {\n        this._value = v;\n        if (this.component) {\n            this.component.instance.value =  v;\n        }\n    }\n    get value(): any {\n        return this._value;\n    }\n\n    @Output()\n    readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n\n    constructor(private entry: ViewContainerRef, private componentFactoryResolver: ComponentFactoryResolver) {\n        this._controlValueChangeFn = (value: any) => this.onValueChange(value);\n    }\n\n    ngOnInit() {\n        this.buildComponent();\n    }\n\n    private onValueChange(e: any): void {\n        this._value = e;\n        this.valueChange.emit(e);\n    }\n\n    private buildComponent(): void {\n        if (!this.componentType) {\n            return;\n        }\n        try {\n            this.destroyComponent();\n            // this.entry.clear();\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory<PropertyValueAccess>(this.componentType);\n            const component = this.entry.createComponent(componentFactory, 0);\n            this.initComponent(component);\n            this.component = component;\n        } catch (e) {\n            console.error('load component error.');\n            console.error(e);\n        }\n    }\n\n    private initComponent(component: ComponentRef<PropertyValueAccess>) {\n        component.instance.value = this._value;\n        if (component.instance.registerOnChange) {\n            component.instance.registerOnChange(this._controlValueChangeFn);\n        }\n        if (component.instance.valueChange) {\n            component.instance.valueChange.subscribe(this._controlValueChangeFn);\n        }\n\n        if (this.componentOptions) {\n            Object.assign(component.instance, this.componentOptions);\n        }\n    }\n\n    private destroyComponent(): void {\n        if (this.component) {\n            this.component.destroy();\n        }\n    }\n}\n\nexport interface PropertyValueAccess extends ControlValueAccessor, ICustomDynamicComponent<any> {\n}\n\nexport interface ICustomDynamicComponent<TValue> {\n    value: TValue;\n    valueChange: EventEmitter<TValue>;\n}\n","import {\n  AfterContentInit, AfterViewInit, ChangeDetectorRef,\n  Component,\n  ContentChildren, ElementRef,\n  Input,\n  QueryList,\n  TemplateRef, ViewChildren\n} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {NgxTemplate} from 'ngx-template';\nimport {PropertyItemMeta} from './property-item-meta';\n\n@Component({\n  selector: 'ngx-property-grid',\n  template: `\n    <div class=\"property-grid\" [ngClass]=\"!isInternal && !cardStyle ? 'property-grid-border': null\" [style.width]=\"width\">\n      <div [ngClass]=\"cardStyle ? 'card' : null\">\n        <table class=\"property-grid-table\" [style.width]=\"width\">\n          <tbody>\n          <ng-container *ngFor=\"let group of groups\">\n            <tr *ngIf=\"group.name\">\n              <td colspan=\"2\" class=\"property-grid-group\" (click)=\"groupCollapse && group.toggle()\">{{group.name}}</td>\n            </tr>\n\n            <ng-container *ngFor=\"let item of group.items\">\n              <tr *ngIf=\"group.state\">\n                <td [attr.colspan]=\"item.colSpan2 == true ? 2 : 1\"\n                    class=\"property-grid-label\"\n                    [style.cursor]=\"item.link ? 'pointer' : null\"\n                    (click)=\"openLink(item.link)\">\n                  {{item.name}}\n                  <span *ngIf=\"showHelp && item.showHelp && item.description\" [title]=\"item.description\">[?]</span>\n                </td>\n                <ng-container *ngIf=\"!item.colSpan2\">\n                  <ng-container\n                    *ngTemplateOutlet=\"controlTemplate; context: {$implicit: item}\">\n                  </ng-container>\n                </ng-container>\n              </tr>\n              <tr *ngIf=\"group.state && item.colSpan2\">\n                <ng-container *ngTemplateOutlet=\"controlTemplate; context: {$implicit: item}\"></ng-container>\n              </tr>\n            </ng-container>\n          </ng-container>\n          </tbody>\n        </table>\n      </div>\n\n      <div *ngFor=\"let item of subItems\" class=\"internal-property-grid\" [ngClass]=\"cardStyle ? 'card' : null\">\n        <div (click)=\"pg.toggle()\" class=\"property-grid-header\"\n             [ngClass]=\"cardStyle ? null : 'property-grid-header-margin'\">\n          <b>{{item.name}}</b>\n        </div>\n        <ngx-property-grid\n          [showHelp]=\"showHelp\"\n          [state]=\"item.initState\"\n          [@collapseAnimation]=\"pg.state\"\n          [options]=\"options[item.key]\"\n          [width]=\"width\"\n          [labelWidth]=\"labelWidth\"\n          [templateMap]=\"templateMap\"\n          style=\"display: block;overflow: hidden\"\n          #pg>\n        </ngx-property-grid>\n      </div>\n    </div>\n\n\n    <ng-template #controlTemplate let-item>\n      <td [attr.colspan]=\"item.colSpan2 == true ? 2 : 1\" class=\"property-grid-control\">\n        <ng-container *ngTemplateOutlet=\"templateLoaded && getTemplate(item.type); context: {$implicit: propertyValue(item)}\">\n        </ng-container>\n        <ng-container\n          *ngIf=\"templateLoaded && !getTemplate(item.type)\"\n          loadComponent\n          [componentType]=\"item.type\"\n          [componentOptions]=\"item.options\"\n          [value]=\"options[item.key]\"\n          (valueChange)=\"convertValue(item, $event)\">\n        </ng-container>\n      </td>\n    </ng-template>\n\n\n    <ng-container *ngIf=\"!isInternal\">\n\n      <ng-template ngxTemplate=\"checkbox\" let-p>\n        <input type=\"checkbox\" [(ngModel)]=\"p.value\"/>\n      </ng-template>\n\n      <ng-template ngxTemplate=\"color\" let-p>\n        <input type=\"color\" [(ngModel)]=\"p.value\"/>\n      </ng-template>\n\n      <ng-template ngxTemplate=\"date\" let-p>\n        <input type=\"date\" [(ngModel)]=\"p.value\"/>\n      </ng-template>\n\n      <ng-template ngxTemplate=\"label\" let-p>\n        <label>{{p.value}}</label>\n      </ng-template>\n\n      <ng-template ngxTemplate=\"text\" let-p>\n        <input type=\"text\" [(ngModel)]=\"p.value\"/>\n      </ng-template>\n\n      <ng-template ngxTemplate=\"options\" let-p>\n        <select [(ngModel)]=\"p.value\">\n          <option [value]=\"optionValue(option)\" *ngFor=\"let option of p.meta.options\">\n            {{optionLabel(option)}}\n          </option>\n        </select>\n      </ng-template>\n    </ng-container>\n  `,\n  styles: [\n      `\n      .property-grid {\n        /*border: solid 1px #95B8E7;*/\n      }\n\n      .property-grid-border {\n        border: 1px solid #d6d6d678\n      }\n\n      .property-grid-table {\n        border-spacing: 0;\n        padding: 5px\n      }\n\n      .property-grid-group {\n        background-color: white;\n        font-weight: bold;\n        color: #616161;\n        padding-top: 8px;\n        padding-bottom: 5px;\n      }\n\n      .property-grid-label, .property-grid-control {\n        border: dotted 1px #ccc;\n        padding: 2px 5px;\n      }\n\n      .internal-property-grid {\n        margin-top: 12px;\n      }\n\n      .internal-property-grid .property-grid {\n        border-width: 0;\n      }\n\n      .internal-property-grid .property-grid-header {\n        margin-bottom: 5px;\n        background-color: #f5f5f5;\n        padding-bottom: 5px;\n        padding-top: 5px;\n        padding-left: 5px;\n        box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n        -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n        width: 100%;\n      }\n\n      .internal-property-grid .property-grid-header-margin {\n        margin-left: 5px;\n        margin-right: 5px;\n        width: unset;\n      }\n\n      .internal-property-grid .property-grid-table {\n        border-width: 0;\n        /*border-top: 1px solid #dbdbdb;*/\n      }\n\n      .card {\n        background-color: #fff;\n        box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n        display: flex;\n        flex-flow: row wrap;\n        /*margin: 5px 20px;*/\n        padding: 0;\n      }\n\n      .internal-property-grid ngx-property-grid .card {\n        background-color: unset;\n        box-shadow: unset;\n        display: unset;\n        flex-flow: unset;\n        /*margin: 5px 20px;*/\n        padding: unset;\n      }\n    `\n  ],\n  animations: [\n    trigger('collapseAnimation', [\n      state('hidden', style({\n        height: '0',\n        // overflow: 'hidden',\n      })),\n      state('visible', style({\n        height: '*'\n      })),\n      transition('visible <=> hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n    ]),\n    trigger('flyInOut', [\n      state('in', style({transform: 'translateX(0)'})),\n      transition('void => *', [\n        style({transform: 'translateX(-100%)'}),\n        animate(100)\n      ]),\n      transition('* => void', [\n        animate(100, style({transform: 'translateX(100%)'}))\n      ])\n    ])\n  ]\n})\nexport class PropertyGridComponent implements AfterContentInit, AfterViewInit {\n  private _options: any;\n  private _meta: any;\n  private _templateLoaded = false;\n  public get templateLoaded(): boolean {\n    return this._templateLoaded;\n  }\n\n  public readonly isInternal: boolean = false;\n\n  @Input()\n  public templateMap: { [key: string]: TemplateRef<any> };\n\n  @Input()\n  public state: 'hidden' | 'visible' = 'visible';\n\n  @Input()\n  width: string | number;\n\n\n  @Input()\n  labelWidth: string | number = '120px';\n\n  @Input()\n  cardStyle = true;\n\n  @Input()\n  groupCollapse = false;\n\n  @Input()\n  showHelp = true;\n\n  @Input()\n  public set meta(v: any) {\n    this._meta = v;\n    this.initMeta();\n  }\n\n  public get meta(): any {\n    return this._meta;\n  }\n\n  @Input()\n  public set options(v: any) {\n    this._options = v;\n    if (v.__meta__) {\n      this.meta = v.__meta__;\n    }\n  }\n\n  public get options(): any {\n    return this._options;\n  }\n\n  @ViewChildren(NgxTemplate) defaultTemplates: QueryList<NgxTemplate>;\n  @ContentChildren(NgxTemplate) templates: QueryList<NgxTemplate>;\n\n  public groups: InternalGroup[];\n  public subItems: PropertyItemMeta[];\n\n  constructor(el: ElementRef<HTMLElement>, private cdr: ChangeDetectorRef) {\n    this.isInternal = el.nativeElement.parentElement && el.nativeElement.parentElement.classList &&\n      el.nativeElement.parentElement.classList.contains('internal-property-grid');\n  }\n\n  ngAfterViewInit(): void {\n    if (this.isInternal) {\n      this._templateLoaded = true;\n    } else {\n      if (this.defaultTemplates) {\n        this.defaultTemplates.forEach((item) => {\n          if (!this.templateMap.hasOwnProperty(item.name)) {\n            this.templateMap[item.name] = item.template;\n          }\n        });\n        this._templateLoaded = true;\n        this.cdr.detectChanges();\n      }\n    }\n  }\n\n  ngAfterContentInit(): void {\n    if (!this.isInternal) {\n      if (!this.templateMap) {\n        this.templateMap = {};\n      }\n      this.templates.forEach((item) => {\n        this.templateMap[item.name] = item.template;\n      });\n    }\n  }\n\n  public openLink(link: string) {\n    if (link) {\n      window.open(link, '_blank');\n    }\n  }\n\n  public getTemplate(type: string | any): TemplateRef<any> {\n    if (typeof type === 'string' && this.templateMap) {\n      return type ? this.templateMap[type] : this.templateMap.default;\n    } else {\n      return undefined;\n    }\n  }\n\n  public propertyValue(meta: PropertyItemMeta): PropertyValue {\n    return new PropertyValue(this.options, meta);\n  }\n\n  public toggle(): void {\n    this.state = this.state === 'visible' ? 'hidden' : 'visible';\n  }\n\n  public convertValue(meta: PropertyItemMeta, val: any): void {\n    this.options[meta.key] = meta.valueConvert ? meta.valueConvert(val) : val;\n  }\n\n  private initMeta(): void {\n    const meta: object = this.meta;\n    if (!meta) {\n      this.subItems = [];\n      return;\n    }\n\n    const groups: InternalGroup[] = [new InternalGroup(undefined)];\n    const subItems: PropertyItemMeta[] = [];\n    for (const i in meta) {\n      if (!meta.hasOwnProperty(i)) {\n        continue;\n      }\n      const v: PropertyItemMeta = meta[i];\n      if (v.hidden) {\n        continue;\n      }\n      if (v.type === 'subItems') {\n        subItems.push(v);\n        continue;\n      }\n\n      let group = groups.find(o => o.name === v.group);\n      if (!group) {\n        group = new InternalGroup(v.group);\n        groups.push(group);\n      }\n      group.items.push(v);\n    }\n    groups.forEach(o => o.items.sort((a, b) => a.order - b.order));\n\n    this.groups = groups.filter(o => o.items.length > 0);\n    this.subItems = subItems;\n  }\n\n  optionLabel(v: any): string {\n    if (typeof v === 'string') {\n      return v;\n    }\n    if (v.text) {\n      return v.text;\n    }\n    if (v.label) {\n      return v.label;\n    }\n    return v;\n  }\n\n  optionValue(v: any): any {\n    return v && v.value ? v.value : v;\n  }\n}\n\nexport class PropertyValue {\n  public get value(): any {\n    return this.o[this.meta.key];\n  }\n\n  public set value(val: any) {\n    this.o[this.meta.key] = this.meta.valueConvert ? this.meta.valueConvert(val) : val;\n  }\n\n  constructor(private o: any, public meta: PropertyItemMeta) {\n  }\n}\n\nexport class InternalGroup {\n  public readonly items: PropertyItemMeta[] = [];\n  public type = 'group';\n\n  public state = true;\n\n  public toggle(): void {\n    this.state = !this.state;\n  }\n\n  constructor(public name: string) {\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {LoadComponentDirective} from './load-component.directive';\nimport {PropertyGridComponent} from './property-grid.component';\nimport {NgxTemplateModule} from 'ngx-template';\nimport {FormsModule} from '@angular/forms';\n\nexport {PropertyGridComponent, PropertyValue} from './property-grid.component';\nexport {meta, PropertyItemMeta} from './property-item-meta';\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, NgxTemplateModule\n  ],\n  declarations: [\n    PropertyGridComponent,\n    LoadComponentDirective\n  ],\n  exports: [\n    PropertyGridComponent\n  ]\n})\nexport class PropertyGridModule {\n}\n","import {Type} from '@angular/core';\nimport {ICustomDynamicComponent} from './load-component.directive';\nimport {ControlValueAccessor} from '@angular/forms';\n\nexport { ICustomDynamicComponent };\n\nexport interface PropertyItemMeta {\n    readonly key?: PropertyKey; // auto generate.\n    name: string; // The display name of the property in the grid\n    description?: string; // A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\n    order?: number; // The display order.\n    group?: string; //  The group this property belongs to\n    hidden?: boolean; // Whether this property should be hidden in the grid, default is false (can be omitted).\n    initState?: 'hidden' | 'visible'; // - hidden/visible. If hidden then subItems should init by hidden state. default is hidden\n    type?: 'color' | 'date' | 'checkbox' | 'text' | 'options' | string | Type<ControlValueAccessor | ICustomDynamicComponent<any>>;\n    // options: boolean number options label color,\n    // or an custom component should be implement ControlValueAccessor or ICustomDynamicComponent<any>\n    options?: any; // options for type\n    colSpan2?: boolean; //  - true/false. If true then property input will span both columns and will have no name/label\n    // (useful for textArea custom type)\n    valueConvert?: (value: any) => any; // convert the value, eg. parseInt\n    showHelp?: boolean; // default True.\n    link?: string; // help link\n}\n\n\nexport const meta = (itemMeta: PropertyItemMeta) =>\n    (target: any, key: PropertyKey) => {\n\n        // region [adjust]\n        (itemMeta as any).key = key;\n        if (typeof itemMeta.type === 'string') {\n\n        } else {\n\n        }\n        if (!itemMeta.type) {\n            itemMeta.type = 'text';\n        }\n\n        if (itemMeta.type === 'number' && !itemMeta.valueConvert) {\n            itemMeta.valueConvert = parseInt;\n        }\n\n        if (!itemMeta.initState) {\n            itemMeta.initState = 'hidden';\n        }\n        if (!itemMeta.order) {\n            itemMeta.order = Number.MAX_VALUE;\n        }\n        if (itemMeta.showHelp === undefined) {\n            itemMeta.showHelp = true;\n        }\n        // endregion\n\n        let __meta__ = target.__meta__;\n        if (!__meta__) {\n            __meta__ = {};\n            target.__meta__ = __meta__;\n        } else if (target.__proto__.__meta__ === __meta__) {\n            const subMeta = Object.create(Object.getPrototypeOf(__meta__));\n            Object.getOwnPropertyNames(__meta__).forEach(name => {\n                Object.defineProperty(subMeta, name, Object.getOwnPropertyDescriptor(__meta__, name));\n            });\n            __meta__ = subMeta;\n            target.__meta__ = __meta__;\n        }\n\n        Object.defineProperty(__meta__, key, {\n            enumerable: true,\n            get: () => itemMeta,\n            set: (v) => itemMeta = v\n        });\n    };\n","/*\n * Public API Surface of ngx-property-grid\n */\n\nexport * from './lib/property-grid.module';\nexport * from './lib/property-grid.component';\nexport * from './lib/property-item-meta';\n","import {Component, EventEmitter} from '@angular/core';\nimport {MatCheckbox} from '@angular/material/checkbox';\nimport {MatSlideToggle} from '@angular/material/slide-toggle';\nimport {ICustomDynamicComponent, meta} from 'ngx-property-grid';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent {\n    public student: ExampleStudentOptions = new ExampleStudentOptions();\n\n    constructor() {\n    }\n\n    public get data(): string {\n        return JSON.parse(JSON.stringify(this.student));\n    }\n\n    text: string;\n}\n\n@Component({\n    selector: 'app-text-editor',\n    template: `<input type=\"text\" [value]=\"value\" (change)=\"valueChange.emit($event.target.value)\"/>`\n})\nexport class SimpleTextEditorComponent implements ICustomDynamicComponent<string> {\n    value: string;\n    valueChange: EventEmitter<string> = new EventEmitter<string>();\n}\n\nexport class ExampleEditorOptions {\n    @meta({\n        name: 'Font', description: 'The font editor to use', colSpan2: false,\n        type: SimpleTextEditorComponent, group: 'Editor', hidden: false\n    })\n    font = 'Source Code Pro';\n\n    @meta({name: 'Font size', group: 'Editor', valueConvert: parseInt, type: 'fontSize'})\n    fontSize = 14;\n\n    @meta({name: 'Font color', group: 'Editor', type: 'color'})\n    fontColor = '#51f41c';\n\n    @meta({name: 'jQuery', group: 'Plugins', type: MatCheckbox})\n    jQuery = true;\n\n    @meta({name: 'Card Style', group: 'Style', type: MatCheckbox})\n    cardStyle = true;\n\n    @meta({\n        name: 'modernizr',\n        description: 'Whether or not to include modernizr on the page',\n        group: 'Plugins',\n        type: MatSlideToggle\n    })\n    modernizr = false;\n\n    @meta({\n        name: 'Framework',\n        description: 'Whether to include any additional framework',\n        type: 'options',\n        options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]\n    })\n    framework = 'None';\n\n}\n\nexport class ExampleStudentOptions {\n\n    @meta({name: 'Birth', group: 'Basic Information', type: 'date', order: 4})\n    birth = '2018-05-08';\n\n    @meta({name: 'Name', group: 'Basic Information', type: 'text', order: 1, link: 'http://www.baidu.com'})\n    name = 'Lily';\n\n    @meta({name: 'Age', group: 'Basic Information1', valueConvert: parseInt, type: 'text', order: 2})\n    age = 19;\n\n    @meta({name: 'Telephone', type: 'telephone', group: 'Basic Information1', hidden: true})\n    telephone;\n\n    @meta({name: 'Gender', group: 'Basic Information', type: 'sex', order: 3})\n    gender = 'male';\n\n    @meta({name: 'Editor Preference', type: 'subItems', initState: 'visible'})\n    editor: ExampleEditorOptions = new ExampleEditorOptions();\n}\n","<div>\n    <h1 style=\"text-align: center\">Property Grid Example</h1>\n    <div style=\"display: flex; flex-direction: row\">\n\n        <ngx-property-grid [width]=\"'400px'\" [options]=\"student\" [showHelp]=\"true\" [groupCollapse]=\"true\" [cardStyle]=\"student.editor.cardStyle\">\n            <ng-template ngxTemplate=\"text\" let-p>\n                <input type=\"text\" [value]=\"p.value\" (change)=\"p.value = $event.target.value\">\n            </ng-template>\n            <ng-template ngxTemplate=\"fontSize\" let-pp>\n                <input matInput type=\"number\" placeholder=\"Value\" [(ngModel)]=\"pp.value\">\n                <!--<span>字体大小</span>-->\n            </ng-template>\n\n            <ng-template ngxTemplate=\"date\" let-p>\n                <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\" [(ngModel)]=\"p.value\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n            </ng-template>\n\n            <ng-template ngxTemplate=\"sex\" let-p>\n                <mat-radio-group  [(ngModel)]=\"p.value\">\n                    <mat-radio-button value=\"male\">male</mat-radio-button>\n                    <mat-radio-button value=\"female\">female</mat-radio-button>\n                </mat-radio-group>\n            </ng-template>\n        </ngx-property-grid>\n\n        <div style=\"margin-left: 50px; flex: 1\">\n            <div> <h3>The Object：</h3> </div>\n          <ngx-json-view [data]=\"data\" [levelOpen]=\"1\"></ngx-json-view>\n        </div>\n    </div>\n\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\n\nimport {AppComponent, SimpleTextEditorComponent} from './app.component';\nimport {BrowserAnimationsModule, NoopAnimationsModule} from '@angular/platform-browser/animations';\n\nimport {FormsModule} from '@angular/forms';\nimport {NgxTemplateModule} from 'ngx-template';\nimport {MatCheckbox, MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSlider, MatSliderModule} from '@angular/material/slider';\nimport {MatDatepicker, MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatSlideToggle, MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatInputModule} from '@angular/material/input';\nimport {NgxJsonViewModule} from 'ng-json-view';\nimport {PropertyGridModule} from 'ngx-property-grid';\n\n@NgModule({\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\n    imports: [\n        BrowserModule, FormsModule, NoopAnimationsModule, PropertyGridModule, NgxTemplateModule,\n        NgxJsonViewModule, BrowserAnimationsModule,\n        MatCheckboxModule, MatSliderModule, MatDatepickerModule, MatSlideToggleModule,\n        MatNativeDateModule, MatRadioModule, MatInputModule\n    ],\n    entryComponents: [SimpleTextEditorComponent, MatCheckbox, MatSlider, MatDatepicker, MatSlideToggle],\n    declarations: [\n        AppComponent, SimpleTextEditorComponent\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class ShowcaseModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { environment } from './environments/environment';\nimport {ShowcaseModule} from './app/showcase/showcase.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(ShowcaseModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}