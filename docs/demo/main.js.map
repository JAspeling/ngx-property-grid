{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/components/property-grid/custom.component.ts","webpack:///./src/app/components/property-grid/index.ts","webpack:///./src/app/components/property-grid/property-grid-control-provider.ts","webpack:///./src/app/components/property-grid/property-grid.component.ts","webpack:///./src/app/components/property-grid/property-item-meta.ts","webpack:///./src/app/showcase/app.component.html","webpack:///./src/app/showcase/app.component.scss","webpack:///./src/app/showcase/app.component.ts","webpack:///./src/app/showcase/showcase.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    Type,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\n\n@Component({\n    selector: 'custom-component',\n    template: '<ng-container #container></ng-container>',\n})\nexport class CustomComponent implements OnInit, ICustomDynamicComponent<any> {\n    private readonly _controlValueChangeFn: (value: any) => void;\n    private _value: any;\n\n    @ViewChild('container', { read: ViewContainerRef }) entry;\n    private component: ComponentRef<ICustomDynamicComponent<any>>;\n\n    @Input() componentType: Type<PropertyValueAccess>;\n\n    @Input()\n    componentOptions: any;\n\n    @Input()\n    set value(v: any) {\n        this._value = v;\n        if (this.component) {\n            this.component.instance.value =  v;\n        }\n    }\n    get value(): any {\n        return this._value;\n    }\n\n    @Output()\n    readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n        this._controlValueChangeFn = (value: any) => this.onValueChange(value);\n    }\n\n    ngOnInit() {\n        this.buildComponent();\n    }\n\n    private onValueChange(e: any): void {\n        this._value = e;\n        this.valueChange.emit(e);\n    }\n\n    private buildComponent(): void {\n        if (!this.componentType) {\n            return;\n        }\n        try {\n            this.destroyComponent();\n            // this.entry.clear();\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory<PropertyValueAccess>(this.componentType);\n            const component = this.entry.createComponent(componentFactory, 0);\n            this.initComponent(component);\n            this.component = component;\n        } catch (e) {\n            console.error('load component error.');\n            console.error(e);\n        }\n    }\n\n    private initComponent(component: ComponentRef<PropertyValueAccess>) {\n        component.instance.value = this._value;\n        if (component.instance.registerOnChange) {\n            component.instance.registerOnChange(this._controlValueChangeFn);\n        }\n        if (component.instance.valueChange) {\n            component.instance.valueChange.subscribe(this._controlValueChangeFn);\n        }\n\n        if (this.componentOptions) {\n            Object.assign(component.instance, this.componentOptions);\n        }\n    }\n\n    private destroyComponent(): void {\n        if (this.component) {\n            this.component.destroy();\n        }\n    }\n}\n\nexport interface PropertyValueAccess extends ControlValueAccessor, ICustomDynamicComponent<any> {\n}\n\nexport interface ICustomDynamicComponent<TValue> {\n    value: TValue;\n    valueChange: EventEmitter<TValue>;\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {CustomComponent, ICustomDynamicComponent} from './custom.component';\nimport {PropertyGridComponent} from './property-grid.component';\nimport {defaultProvider, PropertyGridControlProvider} from './property-grid-control-provider';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {NgxTemplateModule} from 'ngx-template';\n\nexport {ICustomDynamicComponent} from './custom.component';\nexport {PropertyGridComponent, PropertyValue} from './property-grid.component';\nexport {meta, PropertyItemMeta} from './property-item-meta';\n\n@NgModule({\n    imports: [\n        CommonModule, BrowserAnimationsModule, NgxTemplateModule\n    ],\n    entryComponents: defaultProvider.components,\n    declarations: [\n        PropertyGridComponent,\n        CustomComponent,\n    ],\n    providers: [{provide: PropertyGridControlProvider, useValue: defaultProvider}],\n    exports: [\n        PropertyGridComponent\n    ]\n})\nexport class PropertyGridModule {\n}\n","import {Injectable, Type} from '@angular/core';\n\n\n@Injectable()\nexport class PropertyGridControlProvider {\n    private readonly _map: Map<string, Type<any>> = new Map<string, Type<any>>();\n    public components: Array<Type<any>> = [];\n    public register(type: string, componentType: Type<any>) {\n        this._map.set(type, componentType);\n        this.components.push(componentType);\n    }\n    public getComponentType(type: string) {\n        return this._map.get(type);\n    }\n}\n\nexport const defaultProvider = new PropertyGridControlProvider();\n","import {\n    AfterContentInit, AfterViewInit, ChangeDetectorRef,\n    Component,\n    ContentChildren, ElementRef,\n    Input,\n    QueryList,\n    TemplateRef, ViewChildren\n} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {NgxTemplate} from 'ngx-template';\nimport {PropertyItemMeta} from './property-item-meta';\n\n@Component({\n    selector: 'ngx-property-grid',\n    template: `\n        <div class=\"property-grid\" [ngClass]=\"!isInternal && !cardStyle ? 'property-grid-border': null\" [style.width]=\"width\">\n            <div [ngClass]=\"cardStyle ? 'card' : null\">\n                <table class=\"property-grid-table\" [style.width]=\"width\">\n                    <tbody>\n                    <tr *ngFor=\"let row of rows\" [ngClass]=\"row.type == 'group'? 'property-grid-group-row':'property-grid-row'\">\n\n                        <!--<td [attr.colspan]=\"row.colspan\"></td>-->\n                        <td *ngIf=\"row.type == 'group'\" colspan=\"2\" class=\"property-grid-group\">{{row.name}}</td>\n                        <td *ngIf=\"row.type != 'group' && row.colSpan2 != true\" [width]=\"labelWidth\" colspan=\"1\"\n                            class=\"property-grid-label\">\n                            {{row.name}}\n                            <span *ngIf=\"row.description\" [title]=\"row.description\">[?]</span>\n                        </td>\n                        <td *ngIf=\"row.type != 'group'\" [attr.colspan]=\"row.colSpan2 == true ? 2 : 1\" class=\"property-grid-control\">\n                            <custom-component\n                                *ngIf=\"!getTemplate(row.type)\"\n                                [componentType]=\"row.type\"\n                                [componentOptions]=\"row.options\"\n                                [value]=\"options[row.key]\"\n                                (valueChange)=\"convertValue(row, $event)\">\n                            </custom-component>\n                            <ng-container *ngTemplateOutlet=\"getTemplate(row.type); context: {$implicit: propertyValue(row)}\">\n                            </ng-container>\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n\n            <div *ngFor=\"let item of subItems\" class=\"internal-property-grid\" [ngClass]=\"cardStyle ? 'card' : null\">\n                <div (click)=\"pg.toggle()\" class=\"property-grid-header\"\n                     [ngClass]=\"cardStyle ? null : 'property-grid-header-margin'\">\n                    <b>{{item.name}}</b>\n                </div>\n                <ngx-property-grid\n                    [state]=\"item.initState\"\n                    [@internalPropertyGrid]=\"pg.state\"\n                    [options]=\"options[item.key]\"\n                    [width]=\"width\"\n                    [labelWidth]=\"labelWidth\"\n                    [templateMap]=\"templateMap\"\n                    style=\"display: block;overflow: hidden\"\n                    #pg>\n                </ngx-property-grid>\n            </div>\n        </div>\n        <div *ngIf=\"!isInternal\">\n            <ng-template ngxTemplate=\"checkbox\" let-p>\n                <input type=\"checkbox\" [checked]=\"p.value\" (change)=\"p.value = $event.target.checked\" />\n            </ng-template>\n\n            <ng-template ngxTemplate=\"color\" let-p>\n                <input type=\"color\" [value]=\"p.value\" (change)=\"p.value = $event.target.value\"/>\n            </ng-template>\n\n            <ng-template ngxTemplate=\"date\" let-p>\n                <input type=\"date\" [value]=\"p.value\" (change)=\"p.value = $event.target.value\"/>\n            </ng-template>\n\n            <ng-template ngxTemplate=\"label\" let-p>\n                <label>{{p.value}}</label>\n            </ng-template>\n\n            <ng-template ngxTemplate=\"text\" let-p>\n                <input type=\"text\" [value]=\"p.value\" (change)=\"p.value = $event.target.value\"/>\n            </ng-template>\n\n            <ng-template ngxTemplate=\"options\" let-p>\n                <select (change)=\"p.value = $event.target.value\" >\n                    <option [value]=\"optionValue(option)\" *ngFor=\"let option of p.meta.options\">\n                        {{optionLabel(option)}}\n                    </option>\n                </select>\n            </ng-template>\n        </div>\n    `,\n    styles: [\n            `\n            .property-grid {\n                /*border: solid 1px #95B8E7;*/\n            }\n            .property-grid-border {\n                border: 1px solid #d6d6d678\n            }\n\n            .property-grid-table {\n                border-spacing: 0;\n                padding: 5px\n            }\n\n            .property-grid-group {\n                background-color: white;\n                font-weight: bold;\n                color: #616161;\n                padding-top: 8px;\n                padding-bottom: 5px;\n            }\n\n            .property-grid-label, .property-grid-control {\n                border: dotted 1px #ccc;\n                padding: 2px 5px;\n            }\n\n            .internal-property-grid {\n                margin-top: 12px;\n            }\n\n            .internal-property-grid .property-grid {\n                border-width: 0;\n            }\n\n            .internal-property-grid .property-grid-header {\n                margin-bottom: 5px;\n                background-color: #f5f5f5;\n                padding-bottom: 5px;\n                padding-top: 5px;\n                padding-left: 5px;\n                box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n                -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n                width: 100%;\n            }\n            .internal-property-grid .property-grid-header-margin {\n                margin-left: 5px;\n                margin-right: 5px;\n                width: unset;\n            }\n\n            .internal-property-grid .property-grid-table {\n                border-width: 0;\n                /*border-top: 1px solid #dbdbdb;*/\n            }\n\n            .card {\n                background-color: #fff;\n                box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n                display: flex;\n                flex-flow: row wrap;\n                /*margin: 5px 20px;*/\n                padding: 0;\n            }\n            .internal-property-grid ngx-property-grid .card {\n                background-color: unset;\n                box-shadow: unset;\n                display: unset;\n                flex-flow: unset;\n                /*margin: 5px 20px;*/\n                padding: unset;\n            }\n        `\n    ],\n    animations: [\n        trigger('internalPropertyGrid', [\n            state('hidden', style({\n                height: '0',\n                // overflow: 'hidden'\n            })),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible <=> hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n        ])\n    ]\n})\nexport class PropertyGridComponent implements AfterContentInit, AfterViewInit {\n    private _options: any;\n    private _meta: any;\n    public readonly isInternal: boolean;\n\n    @Input()\n    public templateMap: any = {};\n\n    @Input()\n    public state = 'visible';\n\n    @Input()\n    width: string | number;\n\n\n    @Input()\n    labelWidth: string | number = '120px';\n\n    @Input()\n    cardStyle = true;\n\n    @Input()\n    public set meta(v: any) {\n        this._meta = v;\n        this.initMeta();\n    }\n\n    public get meta(): any {\n        return this._meta;\n    }\n\n    @Input()\n    public set options(v: any) {\n        this._options = v;\n        if (v.__meta__) {\n            this.meta = v.__meta__;\n        }\n    }\n\n    public get options(): any {\n        return this._options;\n    }\n\n    @ViewChildren(NgxTemplate) defaultTemplates: QueryList<NgxTemplate>;\n    @ContentChildren(NgxTemplate) templates: QueryList<NgxTemplate>;\n\n    public rows: Array<InternalGroup | PropertyItemMeta | any>;\n    public subItems: PropertyItemMeta[];\n\n    constructor(el: ElementRef<HTMLElement>, private cdr: ChangeDetectorRef) {\n        this.isInternal = el.nativeElement.parentElement && el.nativeElement.parentElement.classList &&\n            el.nativeElement.parentElement.classList.contains('internal-property-grid');\n    }\n\n    ngAfterViewInit(): void {\n        if (this.defaultTemplates) {\n            this.defaultTemplates.forEach((item) => {\n                if (!this.templateMap.hasOwnProperty(item.name)) {\n                    this.templateMap[item.name] = item.template;\n                }\n            });\n            this.cdr.detectChanges();\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this.templates.forEach((item) => {\n            this.templateMap[item.name] = item.template;\n        });\n    }\n\n    public getTemplate(type: string): TemplateRef<any> {\n        if (this.templateMap) {\n            return type ? this.templateMap[type] : this.templateMap['default'];\n        } else {\n            return null;\n        }\n    }\n\n    public propertyValue(meta: PropertyItemMeta): PropertyValue {\n        return new PropertyValue(this.options, meta);\n    }\n\n    public toggle(): void {\n        this.state = this.state === 'visible' ? 'hidden' : 'visible';\n    }\n\n    public convertValue(meta: PropertyItemMeta, val: any): void {\n        this.options[meta.key] = meta.valueConvert ? meta.valueConvert(val) : val;\n    }\n\n    private initMeta(): void {\n        const meta: object = this.meta;\n        if (!meta) {\n            this.rows = [];\n            this.subItems = [];\n            return;\n        }\n\n        const groups: InternalGroup[] = [new InternalGroup(undefined)];\n        const subItems: PropertyItemMeta[] = [];\n        for (const i in meta) {\n            if (!meta.hasOwnProperty(i)) {\n                continue;\n            }\n            const v: PropertyItemMeta = meta[i];\n            if (v.hidden) {\n                continue;\n            }\n            if (v.type === 'subItems') {\n                subItems.push(v);\n                continue;\n            }\n\n            let group = groups.find(o => o.name === v.group);\n            if (!group) {\n                group = new InternalGroup(v.group);\n                groups.push(group);\n            }\n            group.items.push(v);\n        }\n        groups.forEach(o => o.items.sort((a, b) => a.order - b.order));\n        const rows: Array<InternalGroup | PropertyItemMeta> = [];\n        for (const g of groups) {\n            if (g.name) {\n                rows.push(g);\n            }\n            g.items.forEach(o => rows.push(o));\n        }\n        this.rows = rows;\n        this.subItems = subItems;\n    }\n\n    optionLabel(v: any): string {\n        if (typeof v === 'string') {\n            return v;\n        }\n        if (v.text) {\n            return v.text;\n        }\n        if (v.label) {\n            return v.label;\n        }\n        return v;\n    }\n\n    optionValue(v: any): any {\n        return v && v.value ? v.value : v;\n    }\n}\n\nexport class PropertyValue {\n    public get value(): any {\n        return this.o[this.meta.key];\n    }\n\n    public set value(val: any) {\n        this.o[this.meta.key] = this.meta.valueConvert ? this.meta.valueConvert(val) : val;\n    }\n\n    constructor(private o: any, public meta: PropertyItemMeta) {\n    }\n}\n\nexport class InternalGroup {\n    public readonly items: PropertyItemMeta[] = [];\n    public type = 'group';\n\n    constructor(public name: string) {\n    }\n}\n","import {Type} from '@angular/core';\nimport {ICustomDynamicComponent} from './custom.component';\nimport {ControlValueAccessor} from '@angular/forms';\n\nexport interface PropertyItemMeta {\n    readonly key?: PropertyKey; // auto generate.\n    name: string; // The display name of the property in the grid\n    description?: string; // A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\n    order?: number; // The display order.\n    group?: string; //  The group this property belongs to\n    hidden?: boolean; // Whether this property should be hidden in the grid, default is false (can be omitted).\n    initState?: string; // - hidden/visible. If hidden then subItems should init by hidden state. default is hidden\n    type?: 'color' | 'date' | 'checkbox' | 'text' | 'options' | string | Type<ControlValueAccessor | ICustomDynamicComponent<any>>;\n    // options: boolean number options label color,\n    // or an custom component should be implement ControlValueAccessor or ICustomDynamicComponent<any>\n    options?: any; // options for type\n    colSpan2?: boolean; //  - true/false. If true then property input will span both columns and will have no name/label\n    // (useful for textarea custom type)\n    valueConvert?: (value: any) => any; // convert the value, eg. parseInt\n}\n\n\nexport const meta = (itemMeta: PropertyItemMeta) =>\n    (target: any, key: PropertyKey) => {\n\n        // region [adjust]\n        (itemMeta as any).key = key;\n        if (typeof itemMeta.type === 'string') {\n\n        } else {\n\n        }\n        if (!itemMeta.type) {\n            itemMeta.type = 'text';\n        }\n\n        if (itemMeta.type === 'number' && !itemMeta.valueConvert) {\n            itemMeta.valueConvert = parseInt;\n        }\n\n        if (!itemMeta.initState) {\n            itemMeta.initState = 'hidden';\n        }\n        if (!itemMeta.order) {\n            itemMeta.order = Number.MAX_VALUE;\n        }\n        // endregion\n\n        let __meta__ = target.__meta__;\n        if (!__meta__) {\n            __meta__ = {};\n            target.__meta__ = __meta__;\n        } else if (target.__proto__.__meta__ === __meta__) {\n            const subMeta = Object.create(Object.getPrototypeOf(__meta__));\n            Object.getOwnPropertyNames(__meta__).forEach(name => {\n                Object.defineProperty(subMeta, name, Object.getOwnPropertyDescriptor(__meta__, name));\n            });\n            __meta__ = subMeta;\n            target.__meta__ = __meta__;\n        }\n\n        Object.defineProperty(__meta__, key, {\n            enumerable: true,\n            get: () => itemMeta,\n            set: (v) => itemMeta = v\n        });\n    };\n","module.exports = \"<div>\\n    <h1 style=\\\"text-align: center\\\">Property Grid Example</h1>\\n    <div style=\\\"display: flex; flex-direction: row\\\">\\n\\n        <ngx-property-grid [width]=\\\"'400px'\\\" [options]=\\\"student\\\" [cardStyle]=\\\"student.editor.cardStyle\\\">\\n            <ng-template ngxTemplate=\\\"text\\\" let-p>\\n                <input type=\\\"text\\\" [value]=\\\"p.value\\\" (change)=\\\"p.value = $event.target.value\\\">\\n            </ng-template>\\n            <ng-template ngxTemplate=\\\"fontSize\\\" let-pp>\\n                <input matInput type=\\\"number\\\" placeholder=\\\"Value\\\" [(ngModel)]=\\\"pp.value\\\">\\n                <!--<span>字体大小</span>-->\\n            </ng-template>\\n\\n            <ng-template ngxTemplate=\\\"date\\\" let-p>\\n                <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" [(ngModel)]=\\\"p.value\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker></mat-datepicker>\\n            </ng-template>\\n\\n            <ng-template ngxTemplate=\\\"sex\\\" let-p>\\n                <mat-radio-group  [(ngModel)]=\\\"p.value\\\">\\n                    <mat-radio-button value=\\\"male\\\">male</mat-radio-button>\\n                    <mat-radio-button value=\\\"female\\\">female</mat-radio-button>\\n                </mat-radio-group>\\n            </ng-template>\\n        </ngx-property-grid>\\n\\n        <div style=\\\"margin-left: 50px; flex: 1\\\">\\n            <div> <h3>The Object：</h3> </div>\\n\\n            <ngx-json-viewer [json]=\\\"data\\\"></ngx-json-viewer>\\n        </div>\\n    </div>\\n\\n</div>\\n\"","module.exports = \"\"","import {Component, EventEmitter} from '@angular/core';\nimport {meta, ICustomDynamicComponent} from '../components/property-grid';\nimport {MatCheckbox, MatSlideToggle} from '@angular/material';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    public student: ExampleStudentOptions = new ExampleStudentOptions();\n\n    constructor() {\n    }\n\n    public get data(): string {\n        return JSON.parse(JSON.stringify(this.student));\n    }\n\n    text: string;\n}\n\n@Component({\n    selector: 'app-text-editor',\n    template: `<input type=\"text\" [value]=\"value\" (change)=\"valueChange.emit($event.target.value)\"/>`\n})\nexport class SimpleTextEditorComponent implements ICustomDynamicComponent<string> {\n    value: string;\n    valueChange: EventEmitter<string> = new EventEmitter<string>();\n}\n\nexport class ExampleEditorOptions {\n    @meta({\n        name: 'Font', description: 'The font editor to use', colSpan2: false,\n        type: SimpleTextEditorComponent, group: 'Editor', hidden: false\n    })\n    font = 'Source Code Pro';\n\n    @meta({name: 'Font size', group: 'Editor', valueConvert: parseInt, type: 'fontSize'})\n    fontSize = 14;\n\n    @meta({name: 'Font color', group: 'Editor', type: 'color'})\n    fontColor = '#51f41c';\n\n    @meta({name: 'jQuery', group: 'Plugins', type: MatCheckbox})\n    jQuery = true;\n\n    @meta({name: 'Card Style', group: 'Style', type: MatCheckbox})\n    cardStyle = true;\n\n    @meta({\n        name: 'modernizr',\n        description: 'Whether or not to include modernizr on the page',\n        group: 'Plugins',\n        type: MatSlideToggle\n    })\n    modernizr = false;\n\n    @meta({\n        name: 'Framework',\n        description: 'Whether to include any additional framework',\n        type: 'options',\n        options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]\n    })\n    framework = 'None';\n\n}\n\nexport class ExampleStudentOptions {\n\n    @meta({name: 'Birth', group: 'Basic Information', type: 'date', order: 4})\n    birth = '2018-05-08';\n\n    @meta({name: 'Name', group: 'Basic Information', type: 'text', order: 1})\n    name = 'Lily';\n\n    @meta({name: 'Age', group: 'Basic Information', valueConvert: parseInt, type: 'text', order: 2})\n    age = 19;\n\n    @meta({name: 'Telephone', type: 'telephone', group: 'Basic Information', hidden: true})\n    telephone;\n\n    @meta({name: 'Gender', group: 'Basic Information', type: 'sex', order: 3})\n    gender = 'male';\n\n    @meta({name: 'Editor Preference', type: 'subItems', initState: 'visible'})\n    editor: ExampleEditorOptions = new ExampleEditorOptions();\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\n\nimport {AppComponent, SimpleTextEditorComponent} from './app.component';\nimport {PropertyGridModule} from '../components/property-grid';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {\n    MatCheckboxModule,\n    MatSlider,\n    MatSliderModule,\n    MatDatepickerModule,\n    MatDatepicker,\n    MatSlideToggleModule,\n    MatSlideToggle, MatNativeDateModule, MatRadioModule, MatInputModule\n} from '@angular/material';\nimport {MatCheckbox} from '@angular/material';\nimport {FormsModule} from '@angular/forms';\nimport {NgxJsonViewerModule} from 'ngx-json-viewer';\nimport {NgxTemplateModule} from 'ngx-template';\n\n@NgModule({\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\n    imports: [\n        BrowserModule, FormsModule, NoopAnimationsModule, PropertyGridModule, NgxTemplateModule,\n        NgxJsonViewerModule,\n        MatCheckboxModule, MatSliderModule, MatDatepickerModule, MatSlideToggleModule,\n        MatNativeDateModule, MatRadioModule, MatInputModule\n    ],\n    entryComponents: [SimpleTextEditorComponent, MatCheckbox, MatSlider, MatDatepicker, MatSlideToggle],\n    declarations: [\n        AppComponent, SimpleTextEditorComponent\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class ShowcaseModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\n\nimport { ShowcaseModule } from './app/showcase/showcase.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(ShowcaseModule)\n    .catch(err => console.log(err));\n"],"sourceRoot":""}