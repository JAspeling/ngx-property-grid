{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///projects/ngx-property-grid/src/lib/load-component.directive.ts","webpack:///projects/ngx-property-grid/src/lib/property-grid.component.ts","webpack:///projects/ngx-property-grid/src/lib/property-grid.module.ts","webpack:///projects/ngx-property-grid/src/lib/property-item-meta.ts","webpack:///projects/ngx-property-grid/src/public-api.ts","webpack:///src/app/showcase/app.component.html","webpack:///src/app/showcase/app.component.ts","webpack:///src/app/showcase/showcase.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","LoadComponentDirective","entry","componentFactoryResolver","valueChange","_controlValueChangeFn","value","onValueChange","buildComponent","_value","emit","componentType","destroyComponent","componentFactory","resolveComponentFactory","component","createComponent","initComponent","console","error","instance","registerOnChange","subscribe","componentOptions","Object","assign","destroy","v","selector","PropertyGridComponent","el","cdr","_templateLoaded","isInternal","state","labelWidth","cardStyle","groupCollapse","showHelp","nativeElement","parentElement","classList","contains","defaultTemplates","forEach","item","templateMap","hasOwnProperty","name","template","detectChanges","templates","link","window","open","type","undefined","meta","PropertyValue","options","val","key","valueConvert","subItems","groups","InternalGroup","i","hidden","push","group","find","o","items","sort","a","b","order","filter","length","text","label","_meta","initMeta","_options","__meta__","height","transform","styles","animations","PropertyGridModule","imports","declarations","itemMeta","target","parseInt","initState","Number","MAX_VALUE","__proto__","subMeta","create","getPrototypeOf","getOwnPropertyNames","defineProperty","getOwnPropertyDescriptor","enumerable","get","set","AppComponent","student","ExampleStudentOptions","JSON","parse","stringify","templateUrl","SimpleTextEditorComponent","ExampleEditorOptions","font","fontSize","fontColor","jQuery","modernizr","framework","description","colSpan2","birth","age","gender","editor","ShowcaseModule","schemas","entryComponents","providers","bootstrap","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {\n  ComponentFactoryResolver,\n  ComponentRef, Directive,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\n\n@Directive({\n    selector: '[loadComponent]',\n})\nexport class LoadComponentDirective implements OnInit, ICustomDynamicComponent<any> {\n    private readonly _controlValueChangeFn: (value: any) => void;\n    private _value: any;\n\n    private component: ComponentRef<ICustomDynamicComponent<any>>;\n\n    @Input() componentType: Type<PropertyValueAccess>;\n\n    @Input()\n    componentOptions: any;\n\n    @Input()\n    set value(v: any) {\n        this._value = v;\n        if (this.component) {\n            this.component.instance.value =  v;\n        }\n    }\n    get value(): any {\n        return this._value;\n    }\n\n    @Output()\n    readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n\n    constructor(private entry: ViewContainerRef, private componentFactoryResolver: ComponentFactoryResolver) {\n        this._controlValueChangeFn = (value: any) => this.onValueChange(value);\n    }\n\n    ngOnInit() {\n        this.buildComponent();\n    }\n\n    private onValueChange(e: any): void {\n        this._value = e;\n        this.valueChange.emit(e);\n    }\n\n    private buildComponent(): void {\n        if (!this.componentType) {\n            return;\n        }\n        try {\n            this.destroyComponent();\n            // this.entry.clear();\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory<PropertyValueAccess>(this.componentType);\n            const component = this.entry.createComponent(componentFactory, 0);\n            this.initComponent(component);\n            this.component = component;\n        } catch (e) {\n            console.error('load component error.');\n            console.error(e);\n        }\n    }\n\n    private initComponent(component: ComponentRef<PropertyValueAccess>) {\n        component.instance.value = this._value;\n        if (component.instance.registerOnChange) {\n            component.instance.registerOnChange(this._controlValueChangeFn);\n        }\n        if (component.instance.valueChange) {\n            component.instance.valueChange.subscribe(this._controlValueChangeFn);\n        }\n\n        if (this.componentOptions) {\n            Object.assign(component.instance, this.componentOptions);\n        }\n    }\n\n    private destroyComponent(): void {\n        if (this.component) {\n            this.component.destroy();\n        }\n    }\n}\n\nexport interface PropertyValueAccess extends ControlValueAccessor, ICustomDynamicComponent<any> {\n}\n\nexport interface ICustomDynamicComponent<TValue> {\n    value: TValue;\n    valueChange: EventEmitter<TValue>;\n}\n","import {\n  AfterContentInit, AfterViewInit, ChangeDetectorRef,\n  Component,\n  ContentChildren, ElementRef,\n  Input,\n  QueryList,\n  TemplateRef, ViewChildren\n} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {NgxTemplate} from 'ngx-template';\nimport {PropertyItemMeta} from './property-item-meta';\n\n@Component({\n  selector: 'ngx-property-grid',\n  template: `\n    <div class=\"property-grid\" [ngClass]=\"!isInternal && !cardStyle ? 'property-grid-border': null\" [style.width]=\"width\">\n      <div [ngClass]=\"cardStyle ? 'card' : null\">\n        <table class=\"property-grid-table\" [style.width]=\"width\">\n          <tbody>\n          <ng-container *ngFor=\"let group of groups\">\n            <tr *ngIf=\"group.name\">\n              <td colspan=\"2\" class=\"property-grid-group\" (click)=\"groupCollapse && group.toggle()\">{{group.name}}</td>\n            </tr>\n\n            <ng-container *ngFor=\"let item of group.items\">\n              <tr *ngIf=\"group.state\">\n                <td [attr.colspan]=\"item.colSpan2 == true ? 2 : 1\"\n                    class=\"property-grid-label\"\n                    [style.cursor]=\"item.link ? 'pointer' : null\"\n                    (click)=\"openLink(item.link)\">\n                  {{item.name}}\n                  <span *ngIf=\"showHelp && item.showHelp && item.description\" [title]=\"item.description\">[?]</span>\n                </td>\n                <ng-container *ngIf=\"!item.colSpan2\">\n                  <ng-container\n                    *ngTemplateOutlet=\"controlTemplate; context: {$implicit: item}\">\n                  </ng-container>\n                </ng-container>\n              </tr>\n              <tr *ngIf=\"group.state && item.colSpan2\">\n                <ng-container *ngTemplateOutlet=\"controlTemplate; context: {$implicit: item}\"></ng-container>\n              </tr>\n            </ng-container>\n          </ng-container>\n          </tbody>\n        </table>\n      </div>\n\n      <div *ngFor=\"let item of subItems\" class=\"internal-property-grid\" [ngClass]=\"cardStyle ? 'card' : null\">\n        <div (click)=\"pg.toggle()\" class=\"property-grid-header\"\n             [ngClass]=\"cardStyle ? null : 'property-grid-header-margin'\">\n          <b>{{item.name}}</b>\n        </div>\n        <ngx-property-grid\n          [showHelp]=\"showHelp\"\n          [state]=\"item.initState\"\n          [@collapseAnimation]=\"pg.state\"\n          [options]=\"options[item.key]\"\n          [width]=\"width\"\n          [labelWidth]=\"labelWidth\"\n          [templateMap]=\"templateMap\"\n          style=\"display: block;overflow: hidden\"\n          #pg>\n        </ngx-property-grid>\n      </div>\n    </div>\n\n\n    <ng-template #controlTemplate let-item>\n      <td [attr.colspan]=\"item.colSpan2 == true ? 2 : 1\" class=\"property-grid-control\">\n        <ng-container *ngTemplateOutlet=\"templateLoaded && getTemplate(item.type); context: {$implicit: propertyValue(item)}\">\n        </ng-container>\n        <ng-container\n          *ngIf=\"templateLoaded && !getTemplate(item.type)\"\n          loadComponent\n          [componentType]=\"item.type\"\n          [componentOptions]=\"item.options\"\n          [value]=\"options[item.key]\"\n          (valueChange)=\"convertValue(item, $event)\">\n        </ng-container>\n      </td>\n    </ng-template>\n\n\n    <ng-container *ngIf=\"!isInternal\">\n\n      <ng-template ngxTemplate=\"checkbox\" let-p>\n        <input type=\"checkbox\" [(ngModel)]=\"p.value\"/>\n      </ng-template>\n\n      <ng-template ngxTemplate=\"color\" let-p>\n        <input type=\"color\" [(ngModel)]=\"p.value\"/>\n      </ng-template>\n\n      <ng-template ngxTemplate=\"date\" let-p>\n        <input type=\"date\" [(ngModel)]=\"p.value\"/>\n      </ng-template>\n\n      <ng-template ngxTemplate=\"label\" let-p>\n        <label>{{p.value}}</label>\n      </ng-template>\n\n      <ng-template ngxTemplate=\"text\" let-p>\n        <input type=\"text\" [(ngModel)]=\"p.value\"/>\n      </ng-template>\n\n      <ng-template ngxTemplate=\"options\" let-p>\n        <select [(ngModel)]=\"p.value\">\n          <option [value]=\"optionValue(option)\" *ngFor=\"let option of p.meta.options\">\n            {{optionLabel(option)}}\n          </option>\n        </select>\n      </ng-template>\n    </ng-container>\n  `,\n  styles: [\n      `\n      .property-grid {\n        /*border: solid 1px #95B8E7;*/\n      }\n\n      .property-grid-border {\n        border: 1px solid #d6d6d678\n      }\n\n      .property-grid-table {\n        border-spacing: 0;\n        padding: 5px\n      }\n\n      .property-grid-group {\n        background-color: white;\n        font-weight: bold;\n        color: #616161;\n        padding-top: 8px;\n        padding-bottom: 5px;\n      }\n\n      .property-grid-label, .property-grid-control {\n        border: dotted 1px #ccc;\n        padding: 2px 5px;\n      }\n\n      .internal-property-grid {\n        margin-top: 12px;\n      }\n\n      .internal-property-grid .property-grid {\n        border-width: 0;\n      }\n\n      .internal-property-grid .property-grid-header {\n        margin-bottom: 5px;\n        background-color: #f5f5f5;\n        padding-bottom: 5px;\n        padding-top: 5px;\n        padding-left: 5px;\n        box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n        -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n        width: 100%;\n      }\n\n      .internal-property-grid .property-grid-header-margin {\n        margin-left: 5px;\n        margin-right: 5px;\n        width: unset;\n      }\n\n      .internal-property-grid .property-grid-table {\n        border-width: 0;\n        /*border-top: 1px solid #dbdbdb;*/\n      }\n\n      .card {\n        background-color: #fff;\n        box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n        display: flex;\n        flex-flow: row wrap;\n        /*margin: 5px 20px;*/\n        padding: 0;\n      }\n\n      .internal-property-grid ngx-property-grid .card {\n        background-color: unset;\n        box-shadow: unset;\n        display: unset;\n        flex-flow: unset;\n        /*margin: 5px 20px;*/\n        padding: unset;\n      }\n    `\n  ],\n  animations: [\n    trigger('collapseAnimation', [\n      state('hidden', style({\n        height: '0',\n        // overflow: 'hidden',\n      })),\n      state('visible', style({\n        height: '*'\n      })),\n      transition('visible <=> hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n    ]),\n    trigger('flyInOut', [\n      state('in', style({transform: 'translateX(0)'})),\n      transition('void => *', [\n        style({transform: 'translateX(-100%)'}),\n        animate(100)\n      ]),\n      transition('* => void', [\n        animate(100, style({transform: 'translateX(100%)'}))\n      ])\n    ])\n  ]\n})\nexport class PropertyGridComponent implements AfterContentInit, AfterViewInit {\n  private _options: any;\n  private _meta: any;\n  private _templateLoaded = false;\n  public get templateLoaded(): boolean {\n    return this._templateLoaded;\n  }\n\n  public readonly isInternal: boolean = false;\n\n  @Input()\n  public templateMap: { [key: string]: TemplateRef<any> };\n\n  @Input()\n  public state: 'hidden' | 'visible' = 'visible';\n\n  @Input()\n  width: string | number;\n\n\n  @Input()\n  labelWidth: string | number = '120px';\n\n  @Input()\n  cardStyle = true;\n\n  @Input()\n  groupCollapse = false;\n\n  @Input()\n  showHelp = true;\n\n  @Input()\n  public set meta(v: any) {\n    this._meta = v;\n    this.initMeta();\n  }\n\n  public get meta(): any {\n    return this._meta;\n  }\n\n  @Input()\n  public set options(v: any) {\n    this._options = v;\n    if (v.__meta__) {\n      this.meta = v.__meta__;\n    }\n  }\n\n  public get options(): any {\n    return this._options;\n  }\n\n  @ViewChildren(NgxTemplate) defaultTemplates: QueryList<NgxTemplate>;\n  @ContentChildren(NgxTemplate) templates: QueryList<NgxTemplate>;\n\n  public groups: InternalGroup[];\n  public subItems: PropertyItemMeta[];\n\n  constructor(el: ElementRef<HTMLElement>, private cdr: ChangeDetectorRef) {\n    this.isInternal = el.nativeElement.parentElement && el.nativeElement.parentElement.classList &&\n      el.nativeElement.parentElement.classList.contains('internal-property-grid');\n  }\n\n  ngAfterViewInit(): void {\n    if (this.isInternal) {\n      this._templateLoaded = true;\n    } else {\n      if (this.defaultTemplates) {\n        this.defaultTemplates.forEach((item) => {\n          if (!this.templateMap.hasOwnProperty(item.name)) {\n            this.templateMap[item.name] = item.template;\n          }\n        });\n        this._templateLoaded = true;\n        this.cdr.detectChanges();\n      }\n    }\n  }\n\n  ngAfterContentInit(): void {\n    if (!this.isInternal) {\n      if (!this.templateMap) {\n        this.templateMap = {};\n      }\n      this.templates.forEach((item) => {\n        this.templateMap[item.name] = item.template;\n      });\n    }\n  }\n\n  public openLink(link: string) {\n    if (link) {\n      window.open(link, '_blank');\n    }\n  }\n\n  public getTemplate(type: string | any): TemplateRef<any> {\n    if (typeof type === 'string' && this.templateMap) {\n      return type ? this.templateMap[type] : this.templateMap.default;\n    } else {\n      return undefined;\n    }\n  }\n\n  public propertyValue(meta: PropertyItemMeta): PropertyValue {\n    return new PropertyValue(this.options, meta);\n  }\n\n  public toggle(): void {\n    this.state = this.state === 'visible' ? 'hidden' : 'visible';\n  }\n\n  public convertValue(meta: PropertyItemMeta, val: any): void {\n    this.options[meta.key] = meta.valueConvert ? meta.valueConvert(val) : val;\n  }\n\n  private initMeta(): void {\n    const meta: object = this.meta;\n    if (!meta) {\n      this.subItems = [];\n      return;\n    }\n\n    const groups: InternalGroup[] = [new InternalGroup(undefined)];\n    const subItems: PropertyItemMeta[] = [];\n    for (const i in meta) {\n      if (!meta.hasOwnProperty(i)) {\n        continue;\n      }\n      const v: PropertyItemMeta = meta[i];\n      if (v.hidden) {\n        continue;\n      }\n      if (v.type === 'subItems') {\n        subItems.push(v);\n        continue;\n      }\n\n      let group = groups.find(o => o.name === v.group);\n      if (!group) {\n        group = new InternalGroup(v.group);\n        groups.push(group);\n      }\n      group.items.push(v);\n    }\n    groups.forEach(o => o.items.sort((a, b) => a.order - b.order));\n\n    this.groups = groups.filter(o => o.items.length > 0);\n    this.subItems = subItems;\n  }\n\n  optionLabel(v: any): string {\n    if (typeof v === 'string') {\n      return v;\n    }\n    if (v.text) {\n      return v.text;\n    }\n    if (v.label) {\n      return v.label;\n    }\n    return v;\n  }\n\n  optionValue(v: any): any {\n    return v && v.value ? v.value : v;\n  }\n}\n\nexport class PropertyValue {\n  public get value(): any {\n    return this.o[this.meta.key];\n  }\n\n  public set value(val: any) {\n    this.o[this.meta.key] = this.meta.valueConvert ? this.meta.valueConvert(val) : val;\n  }\n\n  constructor(private o: any, public meta: PropertyItemMeta) {\n  }\n}\n\nexport class InternalGroup {\n  public readonly items: PropertyItemMeta[] = [];\n  public type = 'group';\n\n  public state = true;\n\n  public toggle(): void {\n    this.state = !this.state;\n  }\n\n  constructor(public name: string) {\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {LoadComponentDirective} from './load-component.directive';\nimport {PropertyGridComponent} from './property-grid.component';\nimport {NgxTemplateModule} from 'ngx-template';\nimport {FormsModule} from '@angular/forms';\n\nexport {PropertyGridComponent, PropertyValue} from './property-grid.component';\nexport {meta, PropertyItemMeta} from './property-item-meta';\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, NgxTemplateModule\n  ],\n  declarations: [\n    PropertyGridComponent,\n    LoadComponentDirective\n  ],\n  exports: [\n    PropertyGridComponent\n  ]\n})\nexport class PropertyGridModule {\n}\n","import {Type} from '@angular/core';\nimport {ICustomDynamicComponent} from './load-component.directive';\nimport {ControlValueAccessor} from '@angular/forms';\n\nexport { ICustomDynamicComponent };\n\nexport interface PropertyItemMeta {\n    readonly key?: PropertyKey; // auto generate.\n    name: string; // The display name of the property in the grid\n    description?: string; // A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\n    order?: number; // The display order.\n    group?: string; //  The group this property belongs to\n    hidden?: boolean; // Whether this property should be hidden in the grid, default is false (can be omitted).\n    initState?: 'hidden' | 'visible'; // - hidden/visible. If hidden then subItems should init by hidden state. default is hidden\n    type?: 'color' | 'date' | 'checkbox' | 'text' | 'options' | string | Type<ControlValueAccessor | ICustomDynamicComponent<any>>;\n    // options: boolean number options label color,\n    // or an custom component should be implement ControlValueAccessor or ICustomDynamicComponent<any>\n    options?: any; // options for type\n    colSpan2?: boolean; //  - true/false. If true then property input will span both columns and will have no name/label\n    // (useful for textArea custom type)\n    valueConvert?: (value: any) => any; // convert the value, eg. parseInt\n    showHelp?: boolean; // default True.\n    link?: string; // help link\n}\n\n\nexport const meta = (itemMeta: PropertyItemMeta) =>\n    (target: any, key: PropertyKey) => {\n\n        // region [adjust]\n        (itemMeta as any).key = key;\n        if (typeof itemMeta.type === 'string') {\n\n        } else {\n\n        }\n        if (!itemMeta.type) {\n            itemMeta.type = 'text';\n        }\n\n        if (itemMeta.type === 'number' && !itemMeta.valueConvert) {\n            itemMeta.valueConvert = parseInt;\n        }\n\n        if (!itemMeta.initState) {\n            itemMeta.initState = 'hidden';\n        }\n        if (!itemMeta.order) {\n            itemMeta.order = Number.MAX_VALUE;\n        }\n        if (itemMeta.showHelp === undefined) {\n            itemMeta.showHelp = true;\n        }\n        // endregion\n\n        let __meta__ = target.__meta__;\n        if (!__meta__) {\n            __meta__ = {};\n            target.__meta__ = __meta__;\n        } else if (target.__proto__.__meta__ === __meta__) {\n            const subMeta = Object.create(Object.getPrototypeOf(__meta__));\n            Object.getOwnPropertyNames(__meta__).forEach(name => {\n                Object.defineProperty(subMeta, name, Object.getOwnPropertyDescriptor(__meta__, name));\n            });\n            __meta__ = subMeta;\n            target.__meta__ = __meta__;\n        }\n\n        Object.defineProperty(__meta__, key, {\n            enumerable: true,\n            get: () => itemMeta,\n            set: (v) => itemMeta = v\n        });\n    };\n","/*\n * Public API Surface of ngx-property-grid\n */\n\nexport * from './lib/property-grid.module';\nexport * from './lib/property-grid.component';\nexport * from './lib/property-item-meta';\n","<div>\n    <h1 style=\"text-align: center\">Property Grid Example</h1>\n    <div style=\"display: flex; flex-direction: row\">\n\n        <ngx-property-grid [width]=\"'400px'\" [options]=\"student\" [showHelp]=\"true\" [groupCollapse]=\"true\" [cardStyle]=\"student.editor.cardStyle\">\n            <ng-template ngxTemplate=\"text\" let-p>\n                <input type=\"text\" [value]=\"p.value\" (change)=\"p.value = $event.target.value\">\n            </ng-template>\n            <ng-template ngxTemplate=\"fontSize\" let-pp>\n                <input matInput type=\"number\" placeholder=\"Value\" [(ngModel)]=\"pp.value\">\n                <!--<span>字体大小</span>-->\n            </ng-template>\n\n            <ng-template ngxTemplate=\"date\" let-p>\n                <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\" [(ngModel)]=\"p.value\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n            </ng-template>\n\n            <ng-template ngxTemplate=\"sex\" let-p>\n                <mat-radio-group  [(ngModel)]=\"p.value\">\n                    <mat-radio-button value=\"male\">male</mat-radio-button>\n                    <mat-radio-button value=\"female\">female</mat-radio-button>\n                </mat-radio-group>\n            </ng-template>\n        </ngx-property-grid>\n\n        <div style=\"margin-left: 50px; flex: 1\">\n            <div> <h3>The Object：</h3> </div>\n          <ngx-json-view [data]=\"data\" [levelOpen]=\"1\"></ngx-json-view>\n        </div>\n    </div>\n\n</div>\n","import {Component, EventEmitter} from '@angular/core';\nimport {MatCheckbox} from '@angular/material/checkbox';\nimport {MatSlideToggle} from '@angular/material/slide-toggle';\nimport {ICustomDynamicComponent, meta} from 'ngx-property-grid';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent {\n    public student: ExampleStudentOptions = new ExampleStudentOptions();\n\n    constructor() {\n    }\n\n    public get data(): string {\n        return JSON.parse(JSON.stringify(this.student));\n    }\n\n    text: string;\n}\n\n@Component({\n    selector: 'app-text-editor',\n    template: `<input type=\"text\" [value]=\"value\" (change)=\"valueChange.emit($event.target.value)\"/>`\n})\nexport class SimpleTextEditorComponent implements ICustomDynamicComponent<string> {\n    value: string;\n    valueChange: EventEmitter<string> = new EventEmitter<string>();\n}\n\nexport class ExampleEditorOptions {\n    @meta({\n        name: 'Font', description: 'The font editor to use', colSpan2: false,\n        type: SimpleTextEditorComponent, group: 'Editor', hidden: false\n    })\n    font = 'Source Code Pro';\n\n    @meta({name: 'Font size', group: 'Editor', valueConvert: parseInt, type: 'fontSize'})\n    fontSize = 14;\n\n    @meta({name: 'Font color', group: 'Editor', type: 'color'})\n    fontColor = '#51f41c';\n\n    @meta({name: 'jQuery', group: 'Plugins', type: MatCheckbox})\n    jQuery = true;\n\n    @meta({name: 'Card Style', group: 'Style', type: MatCheckbox})\n    cardStyle = true;\n\n    @meta({\n        name: 'modernizr',\n        description: 'Whether or not to include modernizr on the page',\n        group: 'Plugins',\n        type: MatSlideToggle\n    })\n    modernizr = false;\n\n    @meta({\n        name: 'Framework',\n        description: 'Whether to include any additional framework',\n        type: 'options',\n        options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]\n    })\n    framework = 'None';\n\n}\n\nexport class ExampleStudentOptions {\n\n    @meta({name: 'Birth', group: 'Basic Information', type: 'date', order: 4})\n    birth = '2018-05-08';\n\n    @meta({name: 'Name', group: 'Basic Information', type: 'text', order: 1, link: 'http://www.baidu.com'})\n    name = 'Lily';\n\n    @meta({name: 'Age', group: 'Basic Information1', valueConvert: parseInt, type: 'text', order: 2})\n    age = 19;\n\n    @meta({name: 'Telephone', type: 'telephone', group: 'Basic Information1', hidden: true})\n    telephone;\n\n    @meta({name: 'Gender', group: 'Basic Information', type: 'sex', order: 3})\n    gender = 'male';\n\n    @meta({name: 'Editor Preference', type: 'subItems', initState: 'visible'})\n    editor: ExampleEditorOptions = new ExampleEditorOptions();\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\n\nimport {AppComponent, SimpleTextEditorComponent} from './app.component';\nimport {BrowserAnimationsModule, NoopAnimationsModule} from '@angular/platform-browser/animations';\n\nimport {FormsModule} from '@angular/forms';\nimport {NgxTemplateModule} from 'ngx-template';\nimport {MatCheckbox, MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSlider, MatSliderModule} from '@angular/material/slider';\nimport {MatDatepicker, MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatSlideToggle, MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatInputModule} from '@angular/material/input';\nimport {NgxJsonViewModule} from 'ng-json-view';\nimport {PropertyGridModule} from 'ngx-property-grid';\n\n@NgModule({\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\n    imports: [\n        BrowserModule, FormsModule, NoopAnimationsModule, PropertyGridModule, NgxTemplateModule,\n        NgxJsonViewModule, BrowserAnimationsModule,\n        MatCheckboxModule, MatSliderModule, MatDatepickerModule, MatSlideToggleModule,\n        MatNativeDateModule, MatRadioModule, MatInputModule\n    ],\n    entryComponents: [SimpleTextEditorComponent, MatCheckbox, MatSlider, MatDatepicker, MatSlideToggle],\n    declarations: [\n        AppComponent, SimpleTextEditorComponent\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class ShowcaseModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { environment } from './environments/environment';\nimport {ShowcaseModule} from './app/showcase/showcase.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(ShowcaseModule)\n  .catch(err => console.error(err));\n"]}