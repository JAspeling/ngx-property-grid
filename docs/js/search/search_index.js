var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/directives/DynamicComponentLoadDirective.html",[0,1.057,1,0.881]],["body/directives/DynamicComponentLoadDirective.html",[0,1.105,1,0.921,2,1.69,3,0.509,4,0.417,5,0.417,6,0.879,7,0.698,8,2.318,9,1.146,10,1.068,11,1.602,12,2.367,13,2.367,14,2.367,15,1.315,16,1.602,17,2.629,18,0.509,19,0.921,20,2.924,21,1.59,22,2.367,23,1.38,24,1.973,25,2.629,26,2.629,27,2.535,28,2.535,29,2.629,30,2.629,31,2.535,32,1.105,33,1.973,34,2.367,35,1.068,36,1.69,37,2.629,38,3.067,39,2.775,40,2.535,41,1.922,42,0.072,43,1.105,44,1.058,45,1.325,46,1.973,47,0.603,48,1.69,49,1.69,50,2.402,51,1.557,52,1.69,53,1.973,54,2.958,55,1.69,56,1.973,57,2.629,58,1.69,59,1.69,60,1.69,61,1.69,62,1.068,63,1.69,64,1.69,65,1.69,66,1.69,67,1.69,68,0.893,69,1.105,70,0.509,71,1.325,72,0.884,73,0.509,74,0.625,75,0.833,76,0.921,77,0.884,78,0.417,79,0.335,80,1.325,81,1.315,82,1.315,83,0.884,84,1.068,85,1.315,86,1.973,87,1.315,88,1.315,89,0.884,90,1.315,91,1.068,92,1.315,93,1.973,94,1.315,95,1.315,96,1.315,97,0.921,98,1.315,99,1.315,100,1.315,101,0.884,102,1.315,103,1.973,104,1.315,105,1.315,106,1.315,107,1.315,108,1.315,109,1.315,110,1.315,111,1.315,112,1.315,113,1.315,114,1.602,115,1.315,116,1.315,117,0.335,118,0.884,119,1.315,120,0.025,121,0.037,122,0.025]],["title/interfaces/IDynamicComponent.html",[76,0.881,117,0.481]],["body/interfaces/IDynamicComponent.html",[3,1.025,4,0.84,5,0.84,6,0.675,7,0.527,8,1.78,18,1.025,19,1.479,42,0.069,44,1.004,68,0.84,70,1.025,75,1.114,76,1.479,78,0.84,117,0.675,120,0.05,121,0.06,122,0.05,123,1.78,124,2.649,125,4.515,126,4.357,127,4.515]],["title/classes/InternalGroup.html",[79,0.481,128,1.534]],["body/classes/InternalGroup.html",[3,0.301,4,0.246,5,0.246,6,0.635,7,0.685,9,0.411,11,0.631,16,0.631,18,0.301,19,0.606,20,1.764,21,1.312,23,0.606,24,1.298,32,0.363,35,0.631,39,1.907,41,0.631,42,0.073,43,1.014,44,0.912,45,0.435,47,0.692,50,0.631,51,1.163,62,0.631,68,0.689,69,1.568,70,0.301,73,0.301,74,0.744,75,0.619,78,0.411,79,0.331,80,2.16,83,2.332,89,1.123,91,1.054,97,1.014,101,2.29,120,0.015,121,0.025,122,0.015,128,1.586,129,0.631,130,1.163,131,0.777,132,2.148,133,1.953,134,2.791,135,0.998,136,2.017,137,0.998,138,1.123,139,0.998,140,0.998,141,1.674,142,0.998,143,1.907,144,0.998,145,0.998,146,1.668,147,1.668,148,1.668,149,0.998,150,1.668,151,2.148,152,2.148,153,0.998,154,0.998,155,2.148,156,1.668,157,0.998,158,0.998,159,0.998,160,1.123,161,1.46,162,2.636,163,0.998,164,1.668,165,0.998,166,0.998,167,0.998,168,0.998,169,0.998,170,3.356,171,2.148,172,3.356,173,0.998,174,0.998,175,1.298,176,0.998,177,3.487,178,3.782,179,2.51,180,1.764,181,0.998,182,0.777,183,0.998,184,0.998,185,0.998,186,2.51,187,0.998,188,2.148,189,0.631,190,0.998,191,0.998,192,0.998,193,2.148,194,3.017,195,3.202,196,0.998,197,2.791,198,1.668,199,0.998,200,1.668,201,2.51,202,2.51,203,2.148,204,2.51,205,3.356,206,2.51,207,0.998,208,1.668,209,0.998,210,3.017,211,0.998,212,1.668,213,0.998,214,0.998,215,0.998,216,2.148,217,0.777,218,0.998,219,0.998,220,0.777,221,1.054,222,2.148,223,1.668,224,0.998,225,0.998,226,1.668,227,0.998,228,0.998,229,0.998,230,1.668,231,0.998,232,1.054,233,0.998,234,0.998,235,0.998,236,0.998,237,0.998,238,0.998,239,0.777,240,0.998,241,0.998,242,2.148,243,0.998,244,0.998,245,0.998,246,1.668,247,0.998,248,0.522,249,0.998,250,0.998,251,0.998,252,1.586,253,0.998,254,1.586,255,2.148,256,0.998,257,0.998,258,0.631,259,0.777,260,0.872,261,0.998,262,0.998,263,0.998,264,0.998,265,0.777,266,0.872,267,0.998,268,1.668,269,2.121,270,0.998,271,0.998,272,1.668,273,1.668,274,0.998,275,0.998,276,0.998,277,0.998,278,1.668,279,1.586,280,0.998,281,0.998,282,2.148,283,0.998,284,0.998,285,0.998,286,0.998,287,0.998,288,0.998,289,0.998,290,1.668,291,1.668,292,0.998,293,0.998,294,2.148,295,0.998,296,0.998,297,0.777,298,0.998,299,0.998,300,0.998,301,1.586,302,0.998,303,0.998,304,0.631,305,0.998,306,1.668,307,1.668,308,0.998,309,0.998,310,0.998,311,0.998,312,2.148,313,0.998,314,0.998,315,0.998,316,1.668,317,0.998,318,0.777,319,1.668,320,0.998,321,0.998,322,1.668,323,0.998,324,0.998,325,0.998,326,0.998,327,0.998,328,0.998,329,0.998,330,0.998,331,0.998,332,0.998,333,0.998,334,0.998,335,0.998,336,0.998,337,0.998,338,0.998,339,0.998,340,0.998,341,1.668,342,1.668,343,0.998,344,1.668,345,1.668,346,0.998]],["title/modules/PropertyGridModule.html",[347,1.534,348,1.057]],["body/modules/PropertyGridModule.html",[1,1.643,3,0.887,4,0.727,5,0.727,6,0.585,7,0.577,9,0.727,42,0.071,68,1.116,70,0.887,72,1.541,77,1.541,78,0.727,79,0.585,120,0.043,121,0.055,122,0.043,130,1.07,160,1.541,161,1.541,248,2.499,347,1.863,348,2.044,349,1.863,350,1.284,351,2.293,352,3.18,353,2.293,354,2.293,355,3.18,356,2.293,357,2.293,358,2.293,359,2.9,360,2.293,361,1.863,362,2.947,363,3.726,364,2.293,365,3.726,366,2.947,367,2.947,368,2.9,369,3.726,370,2.947]],["title/interfaces/PropertyItemMeta.html",[47,0.481,117,0.481]],["body/interfaces/PropertyItemMeta.html",[3,0.487,4,0.399,5,0.399,6,0.321,7,0.579,9,0.605,18,0.487,19,0.89,21,0.845,32,1.516,42,0.073,43,1.41,44,1.148,45,2.04,47,0.587,51,0.587,62,2.088,68,0.73,69,0.704,70,0.487,71,1.282,72,0.845,73,0.487,74,0.399,75,0.605,76,0.587,77,0.845,78,0.605,97,0.89,117,0.321,120,0.024,121,0.036,122,0.024,123,0.845,130,0.587,136,2.337,138,1.548,141,1.954,143,2.244,162,1.549,180,2.088,189,1.022,221,1.549,232,2.244,252,1.022,254,2.778,258,2.454,259,2.763,260,1.857,265,2.571,266,0.845,269,1.549,279,1.022,297,2.763,301,1.022,304,1.549,371,1.022,372,2.571,373,2.763,374,2.763,375,2.571,376,2.571,377,2.571,378,2.304,379,2.304,380,2.244,381,1.617,382,1.617,383,1.258,384,1.258,385,1.258,386,1.258,387,1.907,388,1.258,389,1.617,390,1.617,391,1.549,392,1.258,393,1.907,394,1.258,395,1.258,396,1.258,397,1.258,398,1.258,399,1.258,400,1.258,401,1.258,402,1.258,403,1.258,404,1.549,405,1.022,406,1.022,407,1.617,408,2.571,409,1.258,410,1.258,411,1.258,412,1.258,413,2.571,414,1.907,415,1.907,416,1.907,417,1.258,418,1.907,419,1.258,420,3.021,421,2.304,422,1.258,423,1.907,424,1.258,425,1.258,426,1.258,427,1.258,428,1.258,429,1.258]],["title/classes/PropertyValue.html",[23,0.881,79,0.481]],["body/classes/PropertyValue.html",[3,0.814,4,0.667,5,0.667,6,0.877,7,0.698,18,0.814,19,1.281,23,1.281,32,1.425,33,2.744,35,1.71,39,2.726,41,2.229,42,0.072,43,1.281,44,0.968,45,1.537,47,0.856,50,1.71,51,0.982,68,0.667,73,0.814,74,1.091,75,0.968,78,0.667,79,0.537,80,1.844,83,2.312,84,1.71,97,1.281,114,1.71,120,0.04,121,0.052,122,0.04,129,1.71,130,1.606,266,1.414,405,2.229,406,2.229,430,2.105,431,2.705,432,2.705,433,3.527,434,2.705,435,2.705,436,2.705,437,2.705,438,2.705,439,3.527,440,2.705,441,2.705,442,3.924,443,2.705,444,2.705,445,2.705,446,2.705,447,2.705]],["title/interfaces/PropertyValueAccess.html",[117,0.481,118,1.269]],["body/interfaces/PropertyValueAccess.html",[0,1.403,1,0.857,3,0.71,4,0.582,5,0.582,6,0.468,7,0.568,8,1.234,9,1.049,10,1.492,11,1.492,12,2.506,13,2.506,14,2.506,16,1.492,17,1.837,20,2.84,21,1.234,22,1.837,23,1.331,25,1.837,26,1.837,29,1.837,30,1.837,32,0.857,34,1.837,37,2.506,38,2.852,42,0.073,44,0.904,46,1.837,47,0.639,51,1.497,53,1.837,54,2.852,56,1.837,57,2.506,68,1.017,69,1.403,70,0.71,71,1.916,72,1.234,73,0.71,74,0.794,75,0.971,76,1.169,77,1.234,78,0.582,79,0.468,80,1.684,81,1.837,82,1.837,83,1.234,84,1.492,85,1.837,86,2.506,87,1.837,88,1.837,89,1.234,90,1.837,91,1.492,92,1.837,93,2.506,94,1.837,95,1.837,96,1.837,97,1.169,98,1.837,99,1.837,100,1.837,101,1.234,102,1.837,103,2.506,104,1.837,105,1.837,106,1.837,107,1.837,108,1.837,109,1.837,110,1.837,111,1.837,112,1.837,113,1.837,114,2.035,115,1.837,116,1.837,117,0.468,118,1.684,119,2.506,120,0.035,121,0.047,122,0.035,123,1.234]],["title/coverage.html",[448,2.553]],["body/coverage.html",[0,1.307,1,1.089,5,0.74,6,0.925,7,0.722,8,2.154,9,1.016,10,2.381,23,1.089,42,0.07,44,0.74,47,0.595,73,1.134,74,0.74,76,1.089,79,0.747,89,1.568,101,2.439,117,0.817,118,1.568,120,0.044,121,0.055,122,0.044,124,2.334,128,1.896,130,1.617,131,2.932,175,2.334,248,1.568,371,2.381,430,2.334,448,2.334,449,2.334,450,2.999,451,2.999,452,2.999,453,3.768,454,3.768,455,2.999,456,2.999,457,2.999,458,2.999,459,2.999]],["title/dependencies.html",[350,1.268,460,2.042]],["body/dependencies.html",[42,0.069,70,1.104,120,0.054,121,0.063,122,0.054,160,1.918,161,1.918,350,1.854,364,2.854,461,3.668,462,3.668,463,4.255]],["title/index.html",[18,0.615,464,1.29,465,1.29]],["body/index.html",[4,0.442,7,0.694,9,0.442,15,2.886,19,0.961,32,1.577,42,0.071,43,1.347,44,1.095,45,0.78,47,0.355,51,0.65,68,0.857,69,1.153,71,0.936,74,0.442,75,0.857,78,0.652,79,0.355,117,0.355,120,0.039,121,0.039,122,0.026,133,1.393,136,1.817,138,1.645,141,1.645,143,2.661,160,1.645,161,1.645,162,2.453,180,2.344,182,2.886,189,1.989,217,1.393,221,1.989,232,2.661,252,2.197,254,2.197,260,1.817,279,1.131,318,3.021,348,0.78,350,0.78,368,1.393,372,2.058,373,3.125,374,2.448,375,1.393,376,2.058,378,1.393,379,2.886,380,2.344,383,3.021,384,2.058,385,2.058,386,2.058,387,2.704,388,2.058,391,2.197,392,2.058,393,2.448,394,1.393,395,1.393,396,2.058,397,2.058,398,2.058,399,2.058,400,2.448,401,2.058,402,1.393,403,1.393,404,1.672,405,1.131,406,1.131,464,1.131,465,1.131,466,1.79,467,1.79,468,3.146,469,2.645,470,1.79,471,1.79,472,1.79,473,1.79,474,1.79,475,1.79,476,1.79,477,1.79,478,1.79,479,1.79,480,1.79,481,1.79,482,1.79,483,1.79,484,1.79,485,1.79,486,1.79,487,1.79,488,1.79,489,1.79,490,1.79,491,3.708,492,3.476,493,1.393,494,1.79,495,1.79,496,1.79,497,1.79,498,1.79,499,1.79,500,1.79,501,2.645,502,2.645,503,3.146,504,2.645,505,1.79,506,3.146,507,1.79,508,2.645,509,1.79,510,1.79,511,1.79,512,1.79,513,1.79,514,1.79,515,1.79,516,1.79,517,1.79,518,1.79,519,1.79,520,1.79,521,1.393,522,1.79,523,1.79,524,1.79,525,1.79,526,1.393,527,1.79,528,2.645,529,1.79,530,1.79,531,1.79,532,1.79,533,1.79,534,1.79,535,1.79]],["title/license.html",[464,1.29,465,1.29,536,1.589]],["body/license.html",[42,0.055,120,0.043,121,0.055,122,0.043,361,1.863,391,1.863,449,2.293,493,2.9,521,2.293,526,2.293,536,2.293,537,2.947,538,4.086,539,2.947,540,2.947,541,2.947,542,3.726,543,2.947,544,2.947,545,2.947,546,2.947,547,2.947,548,2.947,549,3.726,550,4.691,551,2.947,552,2.947,553,2.947,554,4.086,555,2.947,556,3.726,557,2.947,558,2.947,559,2.947,560,2.947,561,2.947,562,2.947,563,2.947,564,2.947,565,2.947,566,3.726,567,2.947,568,2.947,569,2.947,570,2.947,571,2.947,572,3.726,573,3.726,574,2.947,575,2.947,576,2.947,577,2.947,578,2.947,579,2.947,580,2.947,581,2.947,582,2.947,583,2.947,584,2.947,585,2.947,586,2.947,587,2.947,588,2.947,589,2.947,590,2.947,591,2.947,592,2.947,593,2.947,594,2.947,595,2.947,596,2.947,597,2.947,598,2.947,599,2.947,600,2.947,601,2.947,602,2.947]],["title/modules.html",[349,2.074]],["body/modules.html",[42,0.063,120,0.055,121,0.063,122,0.055,348,1.633,349,2.369,603,3.749,604,3.749,605,3.749,606,3.749]],["title/overview.html",[607,2.553]],["body/overview.html",[0,1.454,1,1.569,9,0.823,42,0.068,120,0.049,121,0.059,122,0.049,123,1.745,129,2.109,220,2.597,239,3.361,248,2.466,347,2.543,348,2.055,350,1.454,351,2.597,352,2.597,353,2.597,354,2.597,355,2.597,356,2.597,357,2.597,358,2.597,359,3.131,360,2.597,361,2.109,607,2.597,608,3.337]],["title/miscellaneous/variables.html",[609,1.589,610,2.265]],["body/miscellaneous/variables.html",[6,0.534,7,0.417,18,0.811,42,0.073,43,1.277,47,0.534,73,1.059,74,0.867,75,0.664,97,0.978,120,0.04,121,0.052,122,0.04,130,0.978,136,1.408,138,1.408,141,2.047,258,2.475,260,1.408,266,1.408,269,2.222,301,1.702,304,2.222,371,2.222,377,2.095,380,1.702,404,1.702,408,3.23,409,2.095,410,2.095,411,2.095,412,2.095,413,3.23,414,2.736,415,2.736,416,2.736,417,2.095,418,2.736,419,2.095,420,3.501,421,3.047,422,2.095,423,2.736,424,2.095,425,2.095,426,2.095,427,2.095,428,2.095,429,2.095,609,2.095,610,2.095,611,2.693]]],"invertedIndex":[["",{"_index":42,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":101,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["0.07",{"_index":238,"title":{},"body":{"classes/InternalGroup.html":{}}}],["0.1",{"_index":206,"title":{},"body":{"classes/InternalGroup.html":{}}}],["0/1",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":239,"title":{},"body":{"classes/InternalGroup.html":{},"overview.html":{}}}],["1.1.1",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":205,"title":{},"body":{"classes/InternalGroup.html":{}}}],["100",{"_index":208,"title":{},"body":{"classes/InternalGroup.html":{}}}],["10px",{"_index":215,"title":{},"body":{"classes/InternalGroup.html":{}}}],["12",{"_index":219,"title":{},"body":{"classes/InternalGroup.html":{}}}],["120px",{"_index":262,"title":{},"body":{"classes/InternalGroup.html":{}}}],["12px",{"_index":196,"title":{},"body":{"classes/InternalGroup.html":{}}}],["14",{"_index":217,"title":{},"body":{"classes/InternalGroup.html":{},"index.html":{}}}],["18px",{"_index":218,"title":{},"body":{"classes/InternalGroup.html":{}}}],["1px",{"_index":172,"title":{},"body":{"classes/InternalGroup.html":{}}}],["2",{"_index":220,"title":{},"body":{"classes/InternalGroup.html":{},"overview.html":{}}}],["2020",{"_index":540,"title":{},"body":{"license.html":{}}}],["20px",{"_index":226,"title":{},"body":{"classes/InternalGroup.html":{}}}],["2px",{"_index":193,"title":{},"body":{"classes/InternalGroup.html":{}}}],["3",{"_index":608,"title":{},"body":{"overview.html":{}}}],["3px",{"_index":203,"title":{},"body":{"classes/InternalGroup.html":{}}}],["51f41c",{"_index":500,"title":{},"body":{"index.html":{}}}],["5px",{"_index":178,"title":{},"body":{"classes/InternalGroup.html":{}}}],["616161",{"_index":185,"title":{},"body":{"classes/InternalGroup.html":{}}}],["6px",{"_index":214,"title":{},"body":{"classes/InternalGroup.html":{}}}],["8px",{"_index":187,"title":{},"body":{"classes/InternalGroup.html":{}}}],["9.1.4",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["95b8e7",{"_index":173,"title":{},"body":{"classes/InternalGroup.html":{}}}],["__meta__",{"_index":420,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["_blank",{"_index":299,"title":{},"body":{"classes/InternalGroup.html":{}}}],["_controlvaluechangefn",{"_index":22,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["_meta",{"_index":250,"title":{},"body":{"classes/InternalGroup.html":{}}}],["_options",{"_index":249,"title":{},"body":{"classes/InternalGroup.html":{}}}],["_templateloaded",{"_index":251,"title":{},"body":{"classes/InternalGroup.html":{}}}],["a.order",{"_index":335,"title":{},"body":{"classes/InternalGroup.html":{}}}],["above",{"_index":521,"title":{},"body":{"index.html":{},"license.html":{}}}],["accessors",{"_index":33,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/PropertyValue.html":{}}}],["action",{"_index":596,"title":{},"body":{"license.html":{}}}],["additional",{"_index":507,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":411,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["aftercontentinit",{"_index":146,"title":{},"body":{"classes/InternalGroup.html":{}}}],["afterviewinit",{"_index":147,"title":{},"body":{"classes/InternalGroup.html":{}}}],["and/or",{"_index":564,"title":{},"body":{"license.html":{}}}],["angular",{"_index":469,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":158,"title":{},"body":{"classes/InternalGroup.html":{}}}],["angular/common",{"_index":364,"title":{},"body":{"modules/PropertyGridModule.html":{},"dependencies.html":{}}}],["angular/core",{"_index":70,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":72,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{}}}],["angular9",{"_index":482,"title":{},"body":{"index.html":{}}}],["angularjs",{"_index":509,"title":{},"body":{"index.html":{}}}],["animate",{"_index":154,"title":{},"body":{"classes/InternalGroup.html":{}}}],["animate('400ms",{"_index":235,"title":{},"body":{"classes/InternalGroup.html":{}}}],["animate(100",{"_index":246,"title":{},"body":{"classes/InternalGroup.html":{}}}],["animation,you",{"_index":485,"title":{},"body":{"index.html":{}}}],["animations",{"_index":227,"title":{},"body":{"classes/InternalGroup.html":{}}}],["any(p).value",{"_index":167,"title":{},"body":{"classes/InternalGroup.html":{}}}],["any).key",{"_index":412,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["app.module.ts",{"_index":487,"title":{},"body":{"index.html":{}}}],["arising",{"_index":600,"title":{},"body":{"license.html":{}}}],["array",{"_index":533,"title":{},"body":{"index.html":{}}}],["associated",{"_index":551,"title":{},"body":{"license.html":{}}}],["authors",{"_index":590,"title":{},"body":{"license.html":{}}}],["auto",{"_index":381,"title":{},"body":{"interfaces/PropertyItemMeta.html":{}}}],["b",{"_index":334,"title":{},"body":{"classes/InternalGroup.html":{}}}],["b.order",{"_index":336,"title":{},"body":{"classes/InternalGroup.html":{}}}],["backbone",{"_index":511,"title":{},"body":{"index.html":{}}}],["backbone.js",{"_index":510,"title":{},"body":{"index.html":{}}}],["background",{"_index":179,"title":{},"body":{"classes/InternalGroup.html":{}}}],["basic",{"_index":489,"title":{},"body":{"index.html":{}}}],["belongs",{"_index":388,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["bezier(0.86",{"_index":237,"title":{},"body":{"classes/InternalGroup.html":{}}}],["bold",{"_index":184,"title":{},"body":{"classes/InternalGroup.html":{}}}],["boolean",{"_index":254,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["bootstrap",{"_index":353,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["border",{"_index":170,"title":{},"body":{"classes/InternalGroup.html":{}}}],["both",{"_index":397,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["bottom",{"_index":188,"title":{},"body":{"classes/InternalGroup.html":{}}}],["box",{"_index":201,"title":{},"body":{"classes/InternalGroup.html":{}}}],["browse",{"_index":606,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":603,"title":{},"body":{"modules.html":{}}}],["browseranimationsmodule",{"_index":486,"title":{},"body":{"index.html":{}}}],["buildcomponent",{"_index":25,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["c",{"_index":539,"title":{},"body":{"license.html":{}}}],["card",{"_index":212,"title":{},"body":{"classes/InternalGroup.html":{}}}],["cardstyle",{"_index":263,"title":{},"body":{"classes/InternalGroup.html":{}}}],["case",{"_index":531,"title":{},"body":{"index.html":{}}}],["catch",{"_index":104,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ccc",{"_index":192,"title":{},"body":{"classes/InternalGroup.html":{}}}],["cdr",{"_index":281,"title":{},"body":{"classes/InternalGroup.html":{}}}],["changedetectorref",{"_index":148,"title":{},"body":{"classes/InternalGroup.html":{}}}],["changes",{"_index":59,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["changes.options",{"_index":87,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["charge",{"_index":546,"title":{},"body":{"license.html":{}}}],["checkbox",{"_index":379,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["claim",{"_index":593,"title":{},"body":{"license.html":{}}}],["class",{"_index":79,"title":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":129,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"overview.html":{}}}],["cluster_propertygridmodule",{"_index":356,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["cluster_propertygridmodule_declarations",{"_index":357,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["cluster_propertygridmodule_exports",{"_index":358,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["code",{"_index":495,"title":{},"body":{"index.html":{}}}],["collapse",{"_index":259,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{}}}],["color",{"_index":180,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["colspan2",{"_index":372,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["columns",{"_index":398,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["commonmodule",{"_index":363,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["component",{"_index":9,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component.instance.registeronchange",{"_index":110,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.registeronchange(this._controlvaluechangefn",{"_index":111,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.value",{"_index":109,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.valuechange",{"_index":112,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.valuechange.subscribe(this._controlvaluechangefn",{"_index":113,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.ts",{"_index":124,"title":{},"body":{"interfaces/IDynamicComponent.html":{},"coverage.html":{}}}],["componentfactory",{"_index":98,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["componentfactoryresolver",{"_index":38,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["componentref",{"_index":54,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["componenttype",{"_index":34,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["conditions",{"_index":571,"title":{},"body":{"license.html":{}}}],["connection",{"_index":601,"title":{},"body":{"license.html":{}}}],["console.error('load",{"_index":106,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["console.error(e",{"_index":108,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["const",{"_index":97,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":35,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["constructor(el",{"_index":280,"title":{},"body":{"classes/InternalGroup.html":{}}}],["constructor(entry",{"_index":36,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["constructor(name",{"_index":135,"title":{},"body":{"classes/InternalGroup.html":{}}}],["constructor(o",{"_index":431,"title":{},"body":{"classes/PropertyValue.html":{}}}],["constructor(private",{"_index":84,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["constructor(public",{"_index":346,"title":{},"body":{"classes/InternalGroup.html":{}}}],["contains",{"_index":532,"title":{},"body":{"index.html":{}}}],["contentchildren",{"_index":149,"title":{},"body":{"classes/InternalGroup.html":{}}}],["contentchildren(ngxtemplate",{"_index":276,"title":{},"body":{"classes/InternalGroup.html":{}}}],["continue",{"_index":322,"title":{},"body":{"classes/InternalGroup.html":{}}}],["contract",{"_index":597,"title":{},"body":{"license.html":{}}}],["control",{"_index":190,"title":{},"body":{"classes/InternalGroup.html":{}}}],["controltype(meta",{"_index":305,"title":{},"body":{"classes/InternalGroup.html":{}}}],["controlvalueaccessor",{"_index":71,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["convert",{"_index":402,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["copies",{"_index":566,"title":{},"body":{"license.html":{}}}],["copy",{"_index":549,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":538,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":448,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":479,"title":{},"body":{"index.html":{}}}],["cubic",{"_index":236,"title":{},"body":{"classes/InternalGroup.html":{}}}],["custom",{"_index":393,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["d6d6d678",{"_index":174,"title":{},"body":{"classes/InternalGroup.html":{}}}],["damages",{"_index":594,"title":{},"body":{"license.html":{}}}],["date",{"_index":378,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["dbdbdb",{"_index":211,"title":{},"body":{"classes/InternalGroup.html":{}}}],["deal",{"_index":553,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":602,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":352,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["declare",{"_index":512,"title":{},"body":{"index.html":{}}}],["default",{"_index":138,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaulttemplates",{"_index":275,"title":{},"body":{"classes/InternalGroup.html":{}}}],["defined",{"_index":39,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["demo",{"_index":518,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":350,"title":{"dependencies.html":{}},"body":{"modules/PropertyGridModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["describe",{"_index":523,"title":{},"body":{"index.html":{}}}],["description",{"_index":373,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["destroycomponent",{"_index":26,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["directive",{"_index":0,"title":{"directives/DynamicComponentLoadDirective.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":2,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["display",{"_index":221,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["distribute",{"_index":562,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":449,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dotted",{"_index":191,"title":{},"body":{"classes/InternalGroup.html":{}}}],["dropdown",{"_index":529,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":77,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{}}}],["dynamiccomponent",{"_index":306,"title":{},"body":{"classes/InternalGroup.html":{}}}],["dynamiccomponentload",{"_index":17,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["dynamiccomponentloaddirective",{"_index":1,"title":{"directives/DynamicComponentLoadDirective.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"overview.html":{}}}],["e",{"_index":105,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["each",{"_index":524,"title":{},"body":{"index.html":{}}}],["edit",{"_index":477,"title":{},"body":{"index.html":{}}}],["editor",{"_index":492,"title":{},"body":{"index.html":{}}}],["eg",{"_index":403,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["el.nativeelement.parentelement",{"_index":283,"title":{},"body":{"classes/InternalGroup.html":{}}}],["el.nativeelement.parentelement.classlist",{"_index":284,"title":{},"body":{"classes/InternalGroup.html":{}}}],["el.nativeelement.parentelement.classlist.contains('internal",{"_index":285,"title":{},"body":{"classes/InternalGroup.html":{}}}],["element",{"_index":386,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["elementref",{"_index":150,"title":{},"body":{"classes/InternalGroup.html":{}}}],["endregion",{"_index":419,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["entry",{"_index":46,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["enumerable",{"_index":429,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":107,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["event",{"_index":589,"title":{},"body":{"license.html":{}}}],["eventemitter",{"_index":127,"title":{},"body":{"interfaces/IDynamicComponent.html":{}}}],["example",{"_index":520,"title":{},"body":{"index.html":{}}}],["exampleeditoroptions",{"_index":490,"title":{},"body":{"index.html":{}}}],["excellent",{"_index":472,"title":{},"body":{"index.html":{}}}],["export",{"_index":78,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["exports",{"_index":355,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["express",{"_index":580,"title":{},"body":{"license.html":{}}}],["extends",{"_index":119,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["f5f5f5",{"_index":199,"title":{},"body":{"classes/InternalGroup.html":{}}}],["false",{"_index":252,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["fff",{"_index":213,"title":{},"body":{"classes/InternalGroup.html":{}}}],["file",{"_index":5,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["files",{"_index":552,"title":{},"body":{"license.html":{}}}],["fitness",{"_index":585,"title":{},"body":{"license.html":{}}}],["flex",{"_index":222,"title":{},"body":{"classes/InternalGroup.html":{}}}],["flow",{"_index":223,"title":{},"body":{"classes/InternalGroup.html":{}}}],["following",{"_index":526,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":182,"title":{},"body":{"classes/InternalGroup.html":{},"index.html":{}}}],["fontcolor",{"_index":499,"title":{},"body":{"index.html":{}}}],["fontsize",{"_index":498,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":369,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["found",{"_index":166,"title":{},"body":{"classes/InternalGroup.html":{}}}],["framework",{"_index":506,"title":{},"body":{"index.html":{}}}],["free",{"_index":545,"title":{},"body":{"license.html":{}}}],["function",{"_index":62,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{}}}],["furnished",{"_index":569,"title":{},"body":{"license.html":{}}}],["generate",{"_index":382,"title":{},"body":{"interfaces/PropertyItemMeta.html":{}}}],["getcomponenttype",{"_index":66,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["getoptions",{"_index":440,"title":{},"body":{"classes/PropertyValue.html":{}}}],["gettemplate(type",{"_index":300,"title":{},"body":{"classes/InternalGroup.html":{}}}],["getting",{"_index":464,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getvalue",{"_index":435,"title":{},"body":{"classes/PropertyValue.html":{}}}],["give",{"_index":475,"title":{},"body":{"index.html":{}}}],["granted",{"_index":544,"title":{},"body":{"license.html":{}}}],["grid",{"_index":162,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["grid.component",{"_index":367,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["grid.component.ts",{"_index":131,"title":{},"body":{"classes/InternalGroup.html":{},"coverage.html":{}}}],["grid.component.ts:411",{"_index":139,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:412",{"_index":144,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:414",{"_index":142,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:416",{"_index":145,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:418",{"_index":137,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:420",{"_index":140,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.module.ts",{"_index":362,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["grid/src/lib/dynamic",{"_index":8,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["grid/src/lib/property",{"_index":130,"title":{},"body":{"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":143,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["group.items.push(v",{"_index":331,"title":{},"body":{"classes/InternalGroup.html":{}}}],["group.name",{"_index":163,"title":{},"body":{"classes/InternalGroup.html":{}}}],["groupcollapse",{"_index":264,"title":{},"body":{"classes/InternalGroup.html":{}}}],["groups",{"_index":278,"title":{},"body":{"classes/InternalGroup.html":{}}}],["groups.filter(o",{"_index":338,"title":{},"body":{"classes/InternalGroup.html":{}}}],["groups.find(o",{"_index":326,"title":{},"body":{"classes/InternalGroup.html":{}}}],["groups.foreach(o",{"_index":332,"title":{},"body":{"classes/InternalGroup.html":{}}}],["groups.push(group",{"_index":330,"title":{},"body":{"classes/InternalGroup.html":{}}}],["header",{"_index":198,"title":{},"body":{"classes/InternalGroup.html":{}}}],["height",{"_index":230,"title":{},"body":{"classes/InternalGroup.html":{}}}],["help",{"_index":407,"title":{},"body":{"interfaces/PropertyItemMeta.html":{}}}],["hereby",{"_index":543,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":232,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["hidden(meta",{"_index":311,"title":{},"body":{"classes/InternalGroup.html":{}}}],["hidden/visible",{"_index":515,"title":{},"body":{"index.html":{}}}],["hint",{"_index":385,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["holders",{"_index":591,"title":{},"body":{"license.html":{}}}],["html",{"_index":488,"title":{},"body":{"index.html":{}}}],["icustomdynamiccomponent",{"_index":395,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["identifier",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["idynamiccomponent",{"_index":76,"title":{"interfaces/IDynamicComponent.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["implement",{"_index":394,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["implements",{"_index":11,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyValueAccess.html":{}}}],["implied",{"_index":581,"title":{},"body":{"license.html":{}}}],["import",{"_index":68,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["imports",{"_index":370,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["include",{"_index":504,"title":{},"body":{"index.html":{}}}],["included",{"_index":574,"title":{},"body":{"license.html":{}}}],["including",{"_index":556,"title":{},"body":{"license.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["init",{"_index":516,"title":{},"body":{"index.html":{}}}],["initcomponent",{"_index":27,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["initcomponent(component",{"_index":53,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["initmeta",{"_index":317,"title":{},"body":{"classes/InternalGroup.html":{}}}],["initstate",{"_index":513,"title":{},"body":{"index.html":{}}}],["input",{"_index":69,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["input('dynamiccomponentload",{"_index":82,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["inputs",{"_index":31,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["instanceof",{"_index":309,"title":{},"body":{"classes/InternalGroup.html":{}}}],["interface",{"_index":117,"title":{"interfaces/IDynamicComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":123,"title":{},"body":{"interfaces/IDynamicComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"overview.html":{}}}],["internal",{"_index":194,"title":{},"body":{"classes/InternalGroup.html":{}}}],["internalgroup",{"_index":128,"title":{"classes/InternalGroup.html":{}},"body":{"classes/InternalGroup.html":{},"coverage.html":{}}}],["internalgroup(undefined",{"_index":320,"title":{},"body":{"classes/InternalGroup.html":{}}}],["internalgroup(v.group",{"_index":329,"title":{},"body":{"classes/InternalGroup.html":{}}}],["isinternal",{"_index":256,"title":{},"body":{"classes/InternalGroup.html":{}}}],["it's",{"_index":522,"title":{},"body":{"index.html":{}}}],["item",{"_index":73,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["item.name",{"_index":164,"title":{},"body":{"classes/InternalGroup.html":{}}}],["item.template",{"_index":291,"title":{},"body":{"classes/InternalGroup.html":{}}}],["item.type",{"_index":165,"title":{},"body":{"classes/InternalGroup.html":{}}}],["itemmeta",{"_index":408,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.collapse",{"_index":415,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.order",{"_index":416,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.showhelp",{"_index":418,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.type",{"_index":413,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.valueconvert",{"_index":414,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["items",{"_index":132,"title":{},"body":{"classes/InternalGroup.html":{}}}],["jquery",{"_index":501,"title":{},"body":{"index.html":{}}}],["key",{"_index":258,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":579,"title":{},"body":{"license.html":{}}}],["label",{"_index":189,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["labelwidth",{"_index":261,"title":{},"body":{"classes/InternalGroup.html":{}}}],["left",{"_index":200,"title":{},"body":{"classes/InternalGroup.html":{}}}],["legend",{"_index":351,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["liability",{"_index":595,"title":{},"body":{"license.html":{}}}],["liable",{"_index":592,"title":{},"body":{"license.html":{}}}],["license",{"_index":536,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":557,"title":{},"body":{"license.html":{}}}],["limited",{"_index":582,"title":{},"body":{"license.html":{}}}],["link",{"_index":297,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{}}}],["list",{"_index":530,"title":{},"body":{"index.html":{}}}],["live",{"_index":517,"title":{},"body":{"index.html":{}}}],["load.directive",{"_index":366,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["load.directive.ts",{"_index":10,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["load.directive.ts:18",{"_index":63,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:19",{"_index":64,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:20",{"_index":65,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:21",{"_index":67,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:25",{"_index":48,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:27",{"_index":40,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:33",{"_index":58,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:39",{"_index":61,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:43",{"_index":60,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:47",{"_index":49,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:64",{"_index":55,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:78",{"_index":52,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["margin",{"_index":195,"title":{},"body":{"classes/InternalGroup.html":{}}}],["matching",{"_index":121,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":584,"title":{},"body":{"license.html":{}}}],["merge",{"_index":560,"title":{},"body":{"license.html":{}}}],["meta",{"_index":74,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["meta(v",{"_index":267,"title":{},"body":{"classes/InternalGroup.html":{}}}],["meta({name",{"_index":491,"title":{},"body":{"index.html":{}}}],["meta.hasownproperty(i",{"_index":321,"title":{},"body":{"classes/InternalGroup.html":{}}}],["meta.hidden",{"_index":312,"title":{},"body":{"classes/InternalGroup.html":{}}}],["meta.hidden(this._options",{"_index":313,"title":{},"body":{"classes/InternalGroup.html":{}}}],["meta.ts",{"_index":371,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meta.type",{"_index":308,"title":{},"body":{"classes/InternalGroup.html":{}}}],["meta[i",{"_index":323,"title":{},"body":{"classes/InternalGroup.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"index.html":{}}}],["methods",{"_index":24,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{}}}],["miscellaneous",{"_index":609,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":537,"title":{},"body":{"license.html":{}}}],["modernizr",{"_index":503,"title":{},"body":{"index.html":{}}}],["modify",{"_index":559,"title":{},"body":{"license.html":{}}}],["module",{"_index":347,"title":{"modules/PropertyGridModule.html":{}},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["modules",{"_index":349,"title":{"modules.html":{}},"body":{"modules/PropertyGridModule.html":{},"modules.html":{}}}],["name",{"_index":43,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name/label",{"_index":399,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["need",{"_index":484,"title":{},"body":{"index.html":{}}}],["new",{"_index":89,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["newvalue",{"_index":405,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["ngaftercontentinit",{"_index":293,"title":{},"body":{"classes/InternalGroup.html":{}}}],["ngafterviewinit",{"_index":286,"title":{},"body":{"classes/InternalGroup.html":{}}}],["ngmodule",{"_index":365,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["ngonchanges",{"_index":28,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["ngonchanges(changes",{"_index":56,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ngondestroy",{"_index":29,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ngoninit",{"_index":30,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ngx",{"_index":160,"title":{},"body":{"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngxpropertygrid",{"_index":466,"title":{},"body":{"index.html":{}}}],["ngxtemplate",{"_index":159,"title":{},"body":{"classes/InternalGroup.html":{}}}],["ngxtemplatemodule",{"_index":368,"title":{},"body":{"modules/PropertyGridModule.html":{},"index.html":{}}}],["none",{"_index":508,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":588,"title":{},"body":{"license.html":{}}}],["notice",{"_index":572,"title":{},"body":{"license.html":{}}}],["number",{"_index":260,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["number.max_value",{"_index":417,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["o",{"_index":433,"title":{},"body":{"classes/PropertyValue.html":{}}}],["o.items.length",{"_index":339,"title":{},"body":{"classes/InternalGroup.html":{}}}],["o.items.sort((a",{"_index":333,"title":{},"body":{"classes/InternalGroup.html":{}}}],["o.name",{"_index":327,"title":{},"body":{"classes/InternalGroup.html":{}}}],["obj",{"_index":389,"title":{},"body":{"interfaces/PropertyItemMeta.html":{}}}],["object",{"_index":318,"title":{},"body":{"classes/InternalGroup.html":{},"index.html":{}}}],["object.assign(component.instance",{"_index":115,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["object.create(object.getprototypeof(__meta__",{"_index":424,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["object.defineproperty(__meta__",{"_index":428,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["object.defineproperty(submeta",{"_index":426,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["object.getownpropertydescriptor(__meta__",{"_index":427,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["object.getownpropertynames(__meta__).foreach(name",{"_index":425,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":548,"title":{},"body":{"license.html":{}}}],["oldvalue",{"_index":406,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["omitted",{"_index":392,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["onchanges",{"_index":14,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ondestroy",{"_index":13,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["online",{"_index":481,"title":{},"body":{"index.html":{}}}],["openlink(link",{"_index":296,"title":{},"body":{"classes/InternalGroup.html":{}}}],["optional",{"_index":45,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["optionlabel(option",{"_index":168,"title":{},"body":{"classes/InternalGroup.html":{}}}],["optionlabel(v",{"_index":340,"title":{},"body":{"classes/InternalGroup.html":{}}}],["options",{"_index":32,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["options(v",{"_index":271,"title":{},"body":{"classes/InternalGroup.html":{}}}],["optionvalue(v",{"_index":343,"title":{},"body":{"classes/InternalGroup.html":{}}}],["order",{"_index":374,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["otherwise",{"_index":599,"title":{},"body":{"license.html":{}}}],["out",{"_index":361,"title":{},"body":{"modules/PropertyGridModule.html":{},"license.html":{},"overview.html":{}}}],["overflow",{"_index":231,"title":{},"body":{"classes/InternalGroup.html":{}}}],["overview",{"_index":607,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":460,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":177,"title":{},"body":{"classes/InternalGroup.html":{}}}],["page",{"_index":505,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":41,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["parseint",{"_index":404,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["particular",{"_index":586,"title":{},"body":{"license.html":{}}}],["peer",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["permission",{"_index":542,"title":{},"body":{"license.html":{}}}],["permit",{"_index":567,"title":{},"body":{"license.html":{}}}],["person",{"_index":547,"title":{},"body":{"license.html":{}}}],["persons",{"_index":568,"title":{},"body":{"license.html":{}}}],["play",{"_index":480,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":502,"title":{},"body":{"index.html":{}}}],["pojos",{"_index":471,"title":{},"body":{"index.html":{}}}],["portions",{"_index":576,"title":{},"body":{"license.html":{}}}],["private",{"_index":20,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyValueAccess.html":{}}}],["pro",{"_index":496,"title":{},"body":{"index.html":{}}}],["projects/.../property",{"_index":611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/ngx",{"_index":6,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":19,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["property",{"_index":7,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propertygridcomponent",{"_index":248,"title":{},"body":{"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"coverage.html":{},"overview.html":{}}}],["propertygridmodule",{"_index":348,"title":{"modules/PropertyGridModule.html":{}},"body":{"modules/PropertyGridModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["propertyitemmeta",{"_index":47,"title":{"interfaces/PropertyItemMeta.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propertykey",{"_index":377,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["propertyvalue",{"_index":23,"title":{"classes/PropertyValue.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["propertyvalue(changes.options.currentvalue",{"_index":90,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["propertyvalue(meta",{"_index":314,"title":{},"body":{"classes/InternalGroup.html":{}}}],["propertyvalue(this.options",{"_index":315,"title":{},"body":{"classes/InternalGroup.html":{}}}],["propertyvalueaccess",{"_index":118,"title":{"interfaces/PropertyValueAccess.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["proprty",{"_index":525,"title":{},"body":{"index.html":{}}}],["provided",{"_index":577,"title":{},"body":{"license.html":{}}}],["providers",{"_index":354,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["public",{"_index":83,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["publish",{"_index":561,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":587,"title":{},"body":{"license.html":{}}}],["querylist",{"_index":151,"title":{},"body":{"classes/InternalGroup.html":{}}}],["read",{"_index":535,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":21,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{}}}],["region",{"_index":410,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":360,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["restriction",{"_index":555,"title":{},"body":{"license.html":{}}}],["result",{"_index":120,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":122,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":80,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["returns",{"_index":50,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["rgba(0",{"_index":216,"title":{},"body":{"classes/InternalGroup.html":{}}}],["rgba(10",{"_index":204,"title":{},"body":{"classes/InternalGroup.html":{}}}],["right",{"_index":209,"title":{},"body":{"classes/InternalGroup.html":{}}}],["rights",{"_index":558,"title":{},"body":{"license.html":{}}}],["row",{"_index":224,"title":{},"body":{"classes/InternalGroup.html":{}}}],["seen",{"_index":519,"title":{},"body":{"index.html":{}}}],["selector",{"_index":16,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyValueAccess.html":{}}}],["sell",{"_index":565,"title":{},"body":{"license.html":{}}}],["set",{"_index":266,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"miscellaneous/variables.html":{}}}],["settings",{"_index":473,"title":{},"body":{"index.html":{}}}],["setvalue(val",{"_index":437,"title":{},"body":{"classes/PropertyValue.html":{}}}],["shadow",{"_index":202,"title":{},"body":{"classes/InternalGroup.html":{}}}],["shall",{"_index":573,"title":{},"body":{"license.html":{}}}],["showhelp",{"_index":265,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{}}}],["simple",{"_index":468,"title":{},"body":{"index.html":{}}}],["simplechanges",{"_index":57,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["simpletexteditorcomponent",{"_index":494,"title":{},"body":{"index.html":{}}}],["size",{"_index":497,"title":{},"body":{"index.html":{}}}],["small",{"_index":467,"title":{},"body":{"index.html":{}}}],["software",{"_index":550,"title":{},"body":{"license.html":{}}}],["solid",{"_index":171,"title":{},"body":{"classes/InternalGroup.html":{}}}],["source",{"_index":4,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["spacing",{"_index":176,"title":{},"body":{"classes/InternalGroup.html":{}}}],["span",{"_index":387,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["started",{"_index":465,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":133,"title":{},"body":{"classes/InternalGroup.html":{},"index.html":{}}}],["state('hidden",{"_index":229,"title":{},"body":{"classes/InternalGroup.html":{}}}],["state('in",{"_index":241,"title":{},"body":{"classes/InternalGroup.html":{}}}],["state('visible",{"_index":233,"title":{},"body":{"classes/InternalGroup.html":{}}}],["statements",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":136,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":155,"title":{},"body":{"classes/InternalGroup.html":{}}}],["style({transform",{"_index":242,"title":{},"body":{"classes/InternalGroup.html":{}}}],["styles",{"_index":169,"title":{},"body":{"classes/InternalGroup.html":{}}}],["subitems",{"_index":279,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["subitems.push(v",{"_index":325,"title":{},"body":{"classes/InternalGroup.html":{}}}],["subject",{"_index":570,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":563,"title":{},"body":{"license.html":{}}}],["submeta",{"_index":423,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["substantial",{"_index":575,"title":{},"body":{"license.html":{}}}],["support",{"_index":604,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":527,"title":{},"body":{"index.html":{}}}],["svg",{"_index":605,"title":{},"body":{"modules.html":{}}}],["table",{"_index":175,"title":{},"body":{"classes/InternalGroup.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":409,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["target.__meta__",{"_index":421,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["target.__proto__.__meta__",{"_index":422,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":161,"title":{},"body":{"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"dependencies.html":{},"index.html":{}}}],["templateloaded",{"_index":253,"title":{},"body":{"classes/InternalGroup.html":{}}}],["templatemap",{"_index":257,"title":{},"body":{"classes/InternalGroup.html":{}}}],["templatenotfound",{"_index":307,"title":{},"body":{"classes/InternalGroup.html":{}}}],["templateref",{"_index":152,"title":{},"body":{"classes/InternalGroup.html":{}}}],["templates",{"_index":277,"title":{},"body":{"classes/InternalGroup.html":{}}}],["text",{"_index":380,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["textarea",{"_index":401,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["textbox",{"_index":528,"title":{},"body":{"index.html":{}}}],["that's",{"_index":478,"title":{},"body":{"index.html":{}}}],["this._controlvaluechangefn",{"_index":85,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this._meta",{"_index":268,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this._options",{"_index":272,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this._templateloaded",{"_index":255,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.buildcomponent",{"_index":92,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.cdr.detectchanges",{"_index":292,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.collapse",{"_index":316,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.component",{"_index":103,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.component.destroy",{"_index":116,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(this.componenttype",{"_index":99,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.componenttype",{"_index":94,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.defaulttemplates",{"_index":287,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.defaulttemplates.foreach((item",{"_index":288,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.destroycomponent",{"_index":93,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.entry.clear",{"_index":96,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.entry.createcomponent(componentfactory",{"_index":100,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.gettemplate(meta.type",{"_index":310,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.groups",{"_index":337,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.initcomponent(component",{"_index":102,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.initmeta",{"_index":270,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.isinternal",{"_index":282,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.meta",{"_index":91,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.meta.options",{"_index":114,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.meta.type",{"_index":81,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.meta.valuechanged",{"_index":446,"title":{},"body":{"classes/PropertyValue.html":{}}}],["this.meta.valuechanged(newvalue",{"_index":447,"title":{},"body":{"classes/PropertyValue.html":{}}}],["this.meta.valueconvert",{"_index":444,"title":{},"body":{"classes/PropertyValue.html":{}}}],["this.meta.valueconvert(val",{"_index":445,"title":{},"body":{"classes/PropertyValue.html":{}}}],["this.o[this.meta.key",{"_index":442,"title":{},"body":{"classes/PropertyValue.html":{}}}],["this.propertyvalue",{"_index":88,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.propertyvalue.value",{"_index":86,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.state",{"_index":345,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.subitems",{"_index":319,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.templatemap",{"_index":294,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.templatemap.default",{"_index":303,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.templatemap.hasownproperty(item.name",{"_index":289,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.templatemap[item.name",{"_index":290,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.templatemap[type",{"_index":302,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.templates.foreach((item",{"_index":295,"title":{},"body":{"classes/InternalGroup.html":{}}}],["toggle",{"_index":134,"title":{},"body":{"classes/InternalGroup.html":{}}}],["tooltip",{"_index":384,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["top",{"_index":186,"title":{},"body":{"classes/InternalGroup.html":{}}}],["tort",{"_index":598,"title":{},"body":{"license.html":{}}}],["transition",{"_index":156,"title":{},"body":{"classes/InternalGroup.html":{}}}],["transition('visible",{"_index":234,"title":{},"body":{"classes/InternalGroup.html":{}}}],["transition('void",{"_index":244,"title":{},"body":{"classes/InternalGroup.html":{}}}],["translatex",{"_index":245,"title":{},"body":{"classes/InternalGroup.html":{}}}],["translatex(0",{"_index":243,"title":{},"body":{"classes/InternalGroup.html":{}}}],["translatex(100",{"_index":247,"title":{},"body":{"classes/InternalGroup.html":{}}}],["trigger",{"_index":157,"title":{},"body":{"classes/InternalGroup.html":{}}}],["trigger('collapseanimation",{"_index":228,"title":{},"body":{"classes/InternalGroup.html":{}}}],["trigger('flyinout",{"_index":240,"title":{},"body":{"classes/InternalGroup.html":{}}}],["true",{"_index":141,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["true/false",{"_index":396,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["try",{"_index":95,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["tvalue",{"_index":126,"title":{},"body":{"interfaces/IDynamicComponent.html":{}}}],["type",{"_index":44,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{}}}],["typeof",{"_index":301,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":304,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["uneditable",{"_index":534,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":390,"title":{},"body":{"interfaces/PropertyItemMeta.html":{}}}],["unset",{"_index":210,"title":{},"body":{"classes/InternalGroup.html":{}}}],["usage",{"_index":483,"title":{},"body":{"index.html":{}}}],["use",{"_index":493,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":383,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["useful",{"_index":400,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["user",{"_index":476,"title":{},"body":{"index.html":{}}}],["v",{"_index":269,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["v.__meta__",{"_index":273,"title":{},"body":{"classes/InternalGroup.html":{}}}],["v.group",{"_index":328,"title":{},"body":{"classes/InternalGroup.html":{}}}],["v.label",{"_index":342,"title":{},"body":{"classes/InternalGroup.html":{}}}],["v.text",{"_index":341,"title":{},"body":{"classes/InternalGroup.html":{}}}],["v.type",{"_index":324,"title":{},"body":{"classes/InternalGroup.html":{}}}],["v.value",{"_index":344,"title":{},"body":{"classes/InternalGroup.html":{}}}],["val",{"_index":439,"title":{},"body":{"classes/PropertyValue.html":{}}}],["value",{"_index":75,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value(val",{"_index":443,"title":{},"body":{"classes/PropertyValue.html":{}}}],["value.ts",{"_index":430,"title":{},"body":{"classes/PropertyValue.html":{},"coverage.html":{}}}],["value.ts:18",{"_index":441,"title":{},"body":{"classes/PropertyValue.html":{}}}],["value.ts:20",{"_index":432,"title":{},"body":{"classes/PropertyValue.html":{}}}],["value.ts:22",{"_index":434,"title":{},"body":{"classes/PropertyValue.html":{}}}],["value.ts:4",{"_index":436,"title":{},"body":{"classes/PropertyValue.html":{}}}],["value.ts:8",{"_index":438,"title":{},"body":{"classes/PropertyValue.html":{}}}],["valuechange",{"_index":125,"title":{},"body":{"interfaces/IDynamicComponent.html":{}}}],["valuechanged",{"_index":375,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["valueconvert",{"_index":376,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["variable",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":610,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["view/edit",{"_index":470,"title":{},"body":{"index.html":{}}}],["viewchildren",{"_index":153,"title":{},"body":{"classes/InternalGroup.html":{}}}],["viewchildren(ngxtemplate",{"_index":274,"title":{},"body":{"classes/InternalGroup.html":{}}}],["viewcontainerref",{"_index":37,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["visible",{"_index":514,"title":{},"body":{"index.html":{}}}],["void",{"_index":51,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["want",{"_index":474,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":583,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":578,"title":{},"body":{"license.html":{}}}],["webkit",{"_index":207,"title":{},"body":{"classes/InternalGroup.html":{}}}],["weight",{"_index":183,"title":{},"body":{"classes/InternalGroup.html":{}}}],["whether",{"_index":391,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{},"license.html":{}}}],["white",{"_index":181,"title":{},"body":{"classes/InternalGroup.html":{}}}],["width",{"_index":197,"title":{},"body":{"classes/InternalGroup.html":{}}}],["window.open(link",{"_index":298,"title":{},"body":{"classes/InternalGroup.html":{}}}],["without",{"_index":554,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":225,"title":{},"body":{"classes/InternalGroup.html":{}}}],["yish",{"_index":541,"title":{},"body":{"license.html":{}}}],["zoom",{"_index":359,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"directives/DynamicComponentLoadDirective.html":{"url":"directives/DynamicComponentLoadDirective.html","title":"directive - DynamicComponentLoadDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DynamicComponentLoadDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [dynamicComponentLoad]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _controlValueChangeFn\n                            \n                            \n                                    Private\n                                component\n                            \n                            \n                                    Private\n                                propertyValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildComponent\n                            \n                            \n                                    Private\n                                destroyComponent\n                            \n                            \n                                    Private\n                                initComponent\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dynamicComponentLoad\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    componentType\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entry: ViewContainerRef, componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entry\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dynamicComponentLoad\n                    \n                \n                \n                    \n                        Type :         PropertyItemMeta\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:27\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildComponent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            destroyComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroyComponent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initComponent(component: ComponentRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                ComponentRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _controlValueChangeFn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ComponentRef>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            propertyValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PropertyValue\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        componentType\n                    \n                \n\n                \n                    \n                        getcomponentType()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:21\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef, Directive,\n  Input, OnChanges, OnDestroy,\n  OnInit, SimpleChanges,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\nimport {PropertyItemMeta} from './property-item-meta';\nimport {PropertyValue} from './property-value';\nimport {IDynamicComponent} from './dynamic-component';\n\n@Directive({\n  selector: '[dynamicComponentLoad]',\n})\nexport class DynamicComponentLoadDirective implements OnInit, OnDestroy, OnChanges {\n  private readonly _controlValueChangeFn: (value: any) => void;\n  private component: ComponentRef>;\n  private propertyValue: PropertyValue;\n  private get componentType(): Type {\n    return this.meta.type as Type;\n  }\n\n  @Input('dynamicComponentLoad') private meta: PropertyItemMeta;\n  @Input()\n  public options: any;\n\n  constructor(private entry: ViewContainerRef, private componentFactoryResolver: ComponentFactoryResolver) {\n    this._controlValueChangeFn = (value: any) => this.propertyValue.value = value;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options) {\n      this.propertyValue = new PropertyValue(changes.options.currentValue, this.meta);\n    }\n  }\n\n  ngOnInit() {\n    this.buildComponent();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyComponent();\n  }\n\n  private buildComponent(): void {\n    if (!this.componentType) {\n      return;\n    }\n    try {\n      this.destroyComponent();\n      // this.entry.clear();\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\n      const component = this.entry.createComponent(componentFactory, 0);\n      this.initComponent(component);\n      this.component = component;\n    } catch (e) {\n      console.error('load component error.');\n      console.error(e);\n    }\n  }\n\n  private initComponent(component: ComponentRef) {\n    component.instance.value = this.propertyValue.value;\n    if (component.instance.registerOnChange) {\n      component.instance.registerOnChange(this._controlValueChangeFn);\n    }\n    if (component.instance.valueChange) {\n      component.instance.valueChange.subscribe(this._controlValueChangeFn);\n    }\n\n    if (this.meta.options) {\n      Object.assign(component.instance, this.meta.options);\n    }\n  }\n\n  private destroyComponent(): void {\n    if (this.component) {\n      this.component.destroy();\n    }\n  }\n}\n\ninterface PropertyValueAccess extends ControlValueAccessor, IDynamicComponent {\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDynamicComponent.html":{"url":"interfaces/IDynamicComponent.html","title":"interface - IDynamicComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDynamicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/dynamic-component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        valueChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     TValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueChange\n                                    \n                                \n                                \n                                    \n                                        valueChange:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {EventEmitter} from '@angular/core';\n\n\nexport interface IDynamicComponent {\n  value: TValue;\n  valueChange: EventEmitter;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InternalGroup.html":{"url":"classes/InternalGroup.html","title":"class - InternalGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InternalGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/property-grid.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                items\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                state\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:418\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PropertyItemMeta[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:411\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:420\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:414\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'group'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:412\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:416\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AfterContentInit, AfterViewInit, ChangeDetectorRef,\n  Component,\n  ContentChildren, ElementRef,\n  Input,\n  QueryList,\n  TemplateRef, Type, ViewChildren\n} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {NgxTemplate} from 'ngx-template';\nimport {PropertyItemMeta} from './property-item-meta';\nimport {PropertyValue} from './property-value';\n\n@Component({\n  selector: 'ngx-property-grid',\n  template: `\n    \n      \n        \n          \n          \n            \n              {{group.name}}\n            \n\n            \n              \n                \n                  \n                    {{item.name}}\n                    [?]\n                  \n                  \n                    \n                    \n                  \n                \n                \n                  \n                \n              \n            \n          \n          \n        \n      \n\n      \n        \n\n          \n            {{item.name}}\n          \n          \n          \n        \n      \n    \n\n\n    \n      \n        \n          \n          \n        \n\n        \n        \n\n        \n          {{item.type}} template Not Found\n        \n      \n    \n\n\n    \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        {{$any(p).value}}\n      \n\n      \n        \n      \n\n      \n        \n          \n            {{optionLabel(option)}}\n          \n        \n      \n    \n  `,\n  styles: [\n      `\n      .property-grid {\n        /*border: solid 1px #95B8E7;*/\n      }\n\n      .property-grid-border {\n        border: 1px solid #d6d6d678\n      }\n\n      .property-grid-table {\n        border-spacing: 0;\n        padding: 5px\n      }\n\n      .property-grid-group {\n        background-color: white;\n        font-weight: bold;\n        color: #616161;\n        padding-top: 8px;\n        padding-bottom: 5px;\n      }\n\n      .property-grid-label, .property-grid-control {\n        border: dotted 1px #ccc;\n        padding: 2px 5px;\n      }\n\n      .internal-property-grid {\n        margin-top: 12px;\n      }\n\n      .internal-property-grid .property-grid {\n        border-width: 0;\n      }\n\n      .internal-property-grid .property-grid-header {\n        margin-bottom: 5px;\n        background-color: #f5f5f5;\n        padding-bottom: 5px;\n        padding-top: 5px;\n        padding-left: 5px;\n        box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n        -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n        width: 100%;\n      }\n\n      .internal-property-grid .property-grid-header-margin {\n        margin-left: 5px;\n        margin-right: 5px;\n        width: unset;\n      }\n\n      .internal-property-grid .property-grid-table {\n        border-width: 0;\n        /*border-top: 1px solid #dbdbdb;*/\n      }\n\n      .card {\n        background-color: #fff;\n        box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n        display: flex;\n        flex-flow: row wrap;\n        /*margin: 5px 20px;*/\n        padding: 0;\n      }\n\n      .internal-property-grid ngx-property-grid .card {\n        background-color: unset;\n        box-shadow: unset;\n        display: unset;\n        flex-flow: unset;\n        /*margin: 5px 20px;*/\n        padding: unset;\n      }\n    `\n  ],\n  animations: [\n    trigger('collapseAnimation', [\n      state('hidden', style({\n        height: '0',\n        // overflow: 'hidden',\n      })),\n      state('visible', style({\n        height: '*'\n      })),\n      transition('visible  hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n    ]),\n    trigger('flyInOut', [\n      state('in', style({transform: 'translateX(0)'})),\n      transition('void => *', [\n        style({transform: 'translateX(-100%)'}),\n        animate(100)\n      ]),\n      transition('* => void', [\n        animate(100, style({transform: 'translateX(100%)'}))\n      ])\n    ])\n  ]\n})\nexport class PropertyGridComponent implements AfterContentInit, AfterViewInit {\n  private _options: any;\n  private _meta: any;\n  private _templateLoaded = false;\n  public get templateLoaded(): boolean {\n    return this._templateLoaded;\n  }\n\n  public readonly isInternal: boolean = false;\n\n  @Input()\n  public templateMap: { [key: string]: TemplateRef };\n\n  @Input()\n  public collapse = true;\n\n  @Input()\n  width: string | number;\n\n\n  @Input()\n  labelWidth: string | number = '120px';\n\n  @Input()\n  cardStyle = true;\n\n  @Input()\n  groupCollapse = false;\n\n  @Input()\n  showHelp = true;\n\n  @Input()\n  public set meta(v: any) {\n    this._meta = v;\n    this.initMeta();\n  }\n\n  public get meta(): any {\n    return this._meta;\n  }\n\n  @Input()\n  public set options(v: any) {\n    this._options = v;\n    if (v.__meta__) {\n      this.meta = v.__meta__;\n    }\n  }\n\n  public get options(): any {\n    return this._options;\n  }\n\n  @ViewChildren(NgxTemplate) defaultTemplates: QueryList;\n  @ContentChildren(NgxTemplate) templates: QueryList;\n\n  public groups: InternalGroup[];\n  public subItems: PropertyItemMeta[];\n\n  constructor(el: ElementRef, private cdr: ChangeDetectorRef) {\n    this.isInternal = el.nativeElement.parentElement && el.nativeElement.parentElement.classList &&\n      el.nativeElement.parentElement.classList.contains('internal-property-grid');\n  }\n\n  ngAfterViewInit(): void {\n    if (this.isInternal) {\n      this._templateLoaded = true;\n    } else {\n      if (this.defaultTemplates) {\n        this.defaultTemplates.forEach((item) => {\n          if (!this.templateMap.hasOwnProperty(item.name)) {\n            this.templateMap[item.name] = item.template;\n          }\n        });\n        this._templateLoaded = true;\n        this.cdr.detectChanges();\n      }\n    }\n  }\n\n  ngAfterContentInit(): void {\n    if (!this.isInternal) {\n      if (!this.templateMap) {\n        this.templateMap = {};\n      }\n      this.templates.forEach((item) => {\n        this.templateMap[item.name] = item.template;\n      });\n    }\n  }\n\n  public openLink(link: string) {\n    if (link) {\n      window.open(link, '_blank');\n    }\n  }\n\n  public getTemplate(type: string): TemplateRef {\n    if (typeof type === 'string' && this.templateMap) {\n      return type ? this.templateMap[type] : this.templateMap.default;\n    } else {\n      return undefined;\n    }\n  }\n\n  public controlType(meta: PropertyItemMeta): 'template' | 'dynamicComponent' | 'templateNotFound' {\n    if (meta.type instanceof Type) {\n      return 'dynamicComponent';\n    }\n    if (this.getTemplate(meta.type)) {\n      return 'template';\n    }\n    return 'templateNotFound';\n  }\n\n  public hidden(meta: PropertyItemMeta): boolean {\n    if (typeof meta.hidden === 'boolean') {\n      return meta.hidden;\n    }\n    if (typeof meta.hidden === 'function') {\n      return meta.hidden(this._options);\n    }\n    return false;\n  }\n\n  public propertyValue(meta: PropertyItemMeta): PropertyValue {\n    return new PropertyValue(this.options, meta);\n  }\n\n  public toggle(): void {\n    this.collapse = !this.collapse;\n  }\n\n  private initMeta(): void {\n    const meta: object = this.meta;\n    if (!meta) {\n      this.subItems = [];\n      return;\n    }\n\n    const groups: InternalGroup[] = [new InternalGroup(undefined)];\n    const subItems: PropertyItemMeta[] = [];\n    for (const i in meta) {\n      if (!meta.hasOwnProperty(i)) {\n        continue;\n      }\n      const v: PropertyItemMeta = meta[i];\n      if (v.type === 'subItems') {\n        subItems.push(v);\n        continue;\n      }\n\n      let group = groups.find(o => o.name === v.group);\n      if (!group) {\n        group = new InternalGroup(v.group);\n        groups.push(group);\n      }\n      group.items.push(v);\n    }\n    groups.forEach(o => o.items.sort((a, b) => a.order - b.order));\n\n    this.groups = groups.filter(o => o.items.length > 0);\n    this.subItems = subItems;\n  }\n\n  optionLabel(v: any): string {\n    if (typeof v === 'string') {\n      return v;\n    }\n    if (v.text) {\n      return v.text;\n    }\n    if (v.label) {\n      return v.label;\n    }\n    return v;\n  }\n\n  optionValue(v: any): any {\n    return v && v.value ? v.value : v;\n  }\n}\n\nexport class InternalGroup {\n  public readonly items: PropertyItemMeta[] = [];\n  public type = 'group';\n\n  public state = true;\n\n  public toggle(): void {\n    this.state = !this.state;\n  }\n\n  constructor(public name: string) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PropertyGridModule.html":{"url":"modules/PropertyGridModule.html","title":"module - PropertyGridModule","body":"\n                   \n\n\n\n\n    Modules\n    PropertyGridModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyGridModule\n\n\n\ncluster_PropertyGridModule_declarations\n\n\n\ncluster_PropertyGridModule_exports\n\n\n\n\nDynamicComponentLoadDirective\n\nDynamicComponentLoadDirective\n\n\n\nPropertyGridModule\n\nPropertyGridModule\n\nPropertyGridModule -->\n\nDynamicComponentLoadDirective->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent\n\nPropertyGridComponent\n\nPropertyGridModule -->\n\nPropertyGridComponent->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent \n\nPropertyGridComponent \n\nPropertyGridComponent  -->\n\nPropertyGridModule->PropertyGridComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/property-grid.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DynamicComponentLoadDirective\n                        \n                        \n                            PropertyGridComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PropertyGridComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {DynamicComponentLoadDirective} from './dynamic-component-load.directive';\nimport {PropertyGridComponent} from './property-grid.component';\nimport {NgxTemplateModule} from 'ngx-template';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, NgxTemplateModule\n  ],\n  declarations: [\n    PropertyGridComponent,\n    DynamicComponentLoadDirective\n  ],\n  exports: [\n    PropertyGridComponent\n  ]\n})\nexport class PropertyGridModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PropertyItemMeta.html":{"url":"interfaces/PropertyItemMeta.html","title":"interface - PropertyItemMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PropertyItemMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/property-item-meta.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        collapse\n                                \n                                \n                                            Optional\n                                        colSpan2\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        group\n                                \n                                \n                                            Optional\n                                        hidden\n                                \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        link\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                            Optional\n                                        order\n                                \n                                \n                                            Optional\n                                        showHelp\n                                \n                                \n                                            Optional\n                                        type\n                                \n                                \n                                            Optional\n                                        valueChanged\n                                \n                                \n                                            Optional\n                                        valueConvert\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collapse\n                                    \n                                \n                                \n                                    \n                                        collapse:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colSpan2\n                                    \n                                \n                                \n                                    \n                                        colSpan2:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:     boolean | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     PropertyKey\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PropertyKey\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showHelp\n                                    \n                                \n                                \n                                    \n                                        showHelp:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         \"color\" | \"date\" | \"checkbox\" | \"text\" | \"options\" | string | Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         \"color\" | \"date\" | \"checkbox\" | \"text\" | \"options\" | string | Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueChanged\n                                    \n                                \n                                \n                                    \n                                        valueChanged:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueConvert\n                                    \n                                \n                                \n                                    \n                                        valueConvert:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Type} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\nimport {IDynamicComponent} from './dynamic-component';\n\nexport interface PropertyItemMeta {\n  readonly key?: PropertyKey; // auto generate.\n  name: string; // The display name of the property in the grid\n  description?: string; // A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\n  order?: number; // The display order.\n  group?: string; //  The group this property belongs to\n  hidden?: boolean | ((obj: unknown) => boolean); // Whether this property should be hidden in the grid, default is false (can be omitted).\n  collapse?: boolean; // Whether the subItems should collapse. default is true\n  type?: 'color' | 'date' | 'checkbox' | 'text' | 'options' | string | Type>;\n  // options: boolean number options label color,\n  // or an custom component should be implement ControlValueAccessor or ICustomDynamicComponent\n  options?: any; // options for type\n  colSpan2?: boolean; //  - true/false. If true then property input will span both columns and will have no name/label\n  // (useful for textArea custom type)\n  valueConvert?: (value: any) => any; // convert the value, eg. parseInt\n  valueChanged?: (newValue: any, oldValue: any) => void;\n  showHelp?: boolean; // default True.\n  link?: string; // help link\n}\n\n\nexport const meta = (itemMeta: PropertyItemMeta) =>\n  (target: any, key: PropertyKey) => {\n\n    // region [adjust]\n    (itemMeta as any).key = key;\n    if (typeof itemMeta.type === 'string') {\n\n    } else {\n\n    }\n    if (!itemMeta.type) {\n      itemMeta.type = 'text';\n    }\n\n    if (itemMeta.type === 'number' && !itemMeta.valueConvert) {\n      itemMeta.valueConvert = parseInt;\n    }\n\n    if (itemMeta.collapse === undefined) {\n      itemMeta.collapse = true;\n    }\n    if (!itemMeta.order) {\n      itemMeta.order = Number.MAX_VALUE;\n    }\n    if (itemMeta.showHelp === undefined) {\n      itemMeta.showHelp = true;\n    }\n    // endregion\n\n    let __meta__ = target.__meta__;\n    if (!__meta__) {\n      __meta__ = {};\n      target.__meta__ = __meta__;\n    } else if (target.__proto__.__meta__ === __meta__) {\n      const subMeta = Object.create(Object.getPrototypeOf(__meta__));\n      Object.getOwnPropertyNames(__meta__).forEach(name => {\n        Object.defineProperty(subMeta, name, Object.getOwnPropertyDescriptor(__meta__, name));\n      });\n      __meta__ = subMeta;\n      target.__meta__ = __meta__;\n    }\n\n    Object.defineProperty(__meta__, key, {\n      enumerable: true,\n      get: () => itemMeta,\n      set: (v) => itemMeta = v\n    });\n  };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PropertyValue.html":{"url":"classes/PropertyValue.html","title":"class - PropertyValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PropertyValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/property-value.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(o: any, meta: PropertyItemMeta)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-property-grid/src/lib/property-value.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        o\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        PropertyItemMeta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            meta\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PropertyItemMeta\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-value.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-property-grid/src/lib/property-value.ts:4\n                                \n                            \n\n                \n                    \n                        setvalue(val: any)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-property-grid/src/lib/property-value.ts:8\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-property-grid/src/lib/property-value.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {PropertyItemMeta} from './property-item-meta';\n\nexport class PropertyValue {\n  public get value(): any {\n    return this.o[this.meta.key];\n  }\n\n  public set value(val: any) {\n    const oldValue = this.o[this.meta.key];\n    const newValue = this.meta.valueConvert ? this.meta.valueConvert(val) : val;\n\n    this.o[this.meta.key] = newValue;\n    if (this.meta.valueChanged) {\n      this.meta.valueChanged(newValue, oldValue);\n    }\n  }\n\n  public get options(): any {\n    return this.meta.options;\n  }\n\n  constructor(private o: any, public meta: PropertyItemMeta) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PropertyValueAccess.html":{"url":"interfaces/PropertyValueAccess.html","title":"interface - PropertyValueAccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PropertyValueAccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ControlValueAccessor\n            \n\n\n\n\n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef, Directive,\n  Input, OnChanges, OnDestroy,\n  OnInit, SimpleChanges,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\nimport {PropertyItemMeta} from './property-item-meta';\nimport {PropertyValue} from './property-value';\nimport {IDynamicComponent} from './dynamic-component';\n\n@Directive({\n  selector: '[dynamicComponentLoad]',\n})\nexport class DynamicComponentLoadDirective implements OnInit, OnDestroy, OnChanges {\n  private readonly _controlValueChangeFn: (value: any) => void;\n  private component: ComponentRef>;\n  private propertyValue: PropertyValue;\n  private get componentType(): Type {\n    return this.meta.type as Type;\n  }\n\n  @Input('dynamicComponentLoad') private meta: PropertyItemMeta;\n  @Input()\n  public options: any;\n\n  constructor(private entry: ViewContainerRef, private componentFactoryResolver: ComponentFactoryResolver) {\n    this._controlValueChangeFn = (value: any) => this.propertyValue.value = value;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options) {\n      this.propertyValue = new PropertyValue(changes.options.currentValue, this.meta);\n    }\n  }\n\n  ngOnInit() {\n    this.buildComponent();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyComponent();\n  }\n\n  private buildComponent(): void {\n    if (!this.componentType) {\n      return;\n    }\n    try {\n      this.destroyComponent();\n      // this.entry.clear();\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\n      const component = this.entry.createComponent(componentFactory, 0);\n      this.initComponent(component);\n      this.component = component;\n    } catch (e) {\n      console.error('load component error.');\n      console.error(e);\n    }\n  }\n\n  private initComponent(component: ComponentRef) {\n    component.instance.value = this.propertyValue.value;\n    if (component.instance.registerOnChange) {\n      component.instance.registerOnChange(this._controlValueChangeFn);\n    }\n    if (component.instance.valueChange) {\n      component.instance.valueChange.subscribe(this._controlValueChangeFn);\n    }\n\n    if (this.meta.options) {\n      Object.assign(component.instance, this.meta.options);\n    }\n  }\n\n  private destroyComponent(): void {\n    if (this.component) {\n      this.component.destroy();\n    }\n  }\n}\n\ninterface PropertyValueAccess extends ControlValueAccessor, IDynamicComponent {\n}\n\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts\n            \n            directive\n            DynamicComponentLoadDirective\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts\n            \n            interface\n            PropertyValueAccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/dynamic-component.ts\n            \n            interface\n            IDynamicComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-grid.component.ts\n            \n            component\n            PropertyGridComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-grid.component.ts\n            \n            class\n            InternalGroup\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-item-meta.ts\n            \n            interface\n            PropertyItemMeta\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-item-meta.ts\n            \n            variable\n            meta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-value.ts\n            \n            class\n            PropertyValue\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            ngx-template : ^1.1.1\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^9.1.4\n        \n            @angular/core : ^9.1.4\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgxPropertyGrid\n\n\n\nA small and simple property grid in angular to view/edit POJOs, excellent if you have a \"settings\" object you want to give the user to edit (that's why I have created it). Play online.\nDependencies\n\nangular9+\nngx-template\n\nUsage\n\nImport\n import {PropertyGridModule} from 'ngx-property-grid';\n\n import {NgxTemplateModule} from 'ngx-template'; If you need animation,you should import BrowserAnimationsModule in your app.module.ts.\n\nGetting Started\n\nHtml\n\nBasic  \nTemplate  \n      \n          \n      \n      \n          \n      \n  \n\n\nObject options\n  export class ExampleEditorOptions {\n      @meta({name: 'Font', description: 'The font editor to use', type: SimpleTextEditorComponent, group: 'Editor', hidden: false})\n      font = 'Source Code Pro';\n\n      @meta({name: 'Font size', group: 'Editor', type: 'number', valueConvert: parseInt})\n      fontSize = 14;\n\n      @meta({name: 'Font color', group: 'Editor', type: 'color'})\n      fontColor = '#51f41c';\n\n      @meta({name: 'jQuery', group: 'Plugins', type: 'checkbox'})\n      jQuery = true;\n\n      @meta({name: 'modernizr', description: 'Whether or not to include modernizr on the page', group: 'Plugins', type: 'checkbox'})\n      modernizr = false;\n\n      @meta({\n          name: 'Framework',\n          description: 'Whether to include any additional framework',\n          type: 'options',\n          options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]\n      })\n      framework = 'None';\n  }\n\n\nThe metadata options declare\n\n\n export interface PropertyItemMeta {\n    name: string; // The display name of the property in the grid\n    description?: string; // A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\n    order?: number; // The display order.\n    group?: string; //  The group this property belongs to\n    hidden?: boolean; // Whether this property should be hidden in the grid, default is false (can be omitted).\n    initState?: 'hidden' | 'visible'; // - hidden/visible. If hidden then subItems should init by hidden state. default is hidden\n    type?: 'color' | 'date' | 'checkbox' | 'text' | 'options' | string | Type>;\n    // options: boolean number options label color,\n    // or an custom component should be implement ControlValueAccessor or ICustomDynamicComponent\n    options?: any; // options for type\n    colSpan2?: boolean; //  - true/false. If true then property input will span both columns and will have no name/label\n    // (useful for textarea custom type)\n    valueConvert?: (value: any) => any; // convert the value, eg. parseInt\n    valueChanged?: (newValue: any, oldValue: any) => void; \n}\nThe result would be (live demo):\n\n\nThe metadata object\nAs seen from the example above the metadata object can be used (it's optional) in order to describe the object properties.\nEach proprty in the metadata object could have the following:\n\nname - The display name of the property in the grid \ndescription - A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\nhidden - Whether this property should be hidden in the grid, default is false (can be omitted).\ngroup - The group this property belongs to\ntype - The type of the property, supported are:\nboolean or checkbox - A checkbox would be used\nnumber -  simple textbox\ncolor - simple textbox\noptions - A dropdown list would be used in case the metadata contains the options array property\nlabel - A label will be used, useful for uneditable / read-only properties\n\n\ncolspan2 - true/false. If true then property input will span both columns and will have no name/label (useful for textarea custom type)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 YISH\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        PropertyGridModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyGridModule\n\n\n\ncluster_PropertyGridModule_declarations\n\n\n\ncluster_PropertyGridModule_exports\n\n\n\n\nDynamicComponentLoadDirective\n\nDynamicComponentLoadDirective\n\n\n\nPropertyGridModule\n\nPropertyGridModule\n\nPropertyGridModule -->\n\nDynamicComponentLoadDirective->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent\n\nPropertyGridComponent\n\nPropertyGridModule -->\n\nPropertyGridComponent->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent \n\nPropertyGridComponent \n\nPropertyGridComponent  -->\n\nPropertyGridModule->PropertyGridComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            meta   (projects/.../property-item-meta.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-property-grid/src/lib/property-item-meta.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            meta\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (itemMeta: PropertyItemMeta) =>\n  (target: any, key: PropertyKey) => {\n\n    // region [adjust]\n    (itemMeta as any).key = key;\n    if (typeof itemMeta.type === 'string') {\n\n    } else {\n\n    }\n    if (!itemMeta.type) {\n      itemMeta.type = 'text';\n    }\n\n    if (itemMeta.type === 'number' && !itemMeta.valueConvert) {\n      itemMeta.valueConvert = parseInt;\n    }\n\n    if (itemMeta.collapse === undefined) {\n      itemMeta.collapse = true;\n    }\n    if (!itemMeta.order) {\n      itemMeta.order = Number.MAX_VALUE;\n    }\n    if (itemMeta.showHelp === undefined) {\n      itemMeta.showHelp = true;\n    }\n    // endregion\n\n    let __meta__ = target.__meta__;\n    if (!__meta__) {\n      __meta__ = {};\n      target.__meta__ = __meta__;\n    } else if (target.__proto__.__meta__ === __meta__) {\n      const subMeta = Object.create(Object.getPrototypeOf(__meta__));\n      Object.getOwnPropertyNames(__meta__).forEach(name => {\n        Object.defineProperty(subMeta, name, Object.getOwnPropertyDescriptor(__meta__, name));\n      });\n      __meta__ = subMeta;\n      target.__meta__ = __meta__;\n    }\n\n    Object.defineProperty(__meta__, key, {\n      enumerable: true,\n      get: () => itemMeta,\n      set: (v) => itemMeta = v\n    });\n  }\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
