var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.076,1,0.614]],["body/components/AppComponent.html",[0,0.13,1,0.957,2,0.253,3,0.307,4,0.608,5,0.925,6,0.925,7,0.178,8,1.494,9,0.771,10,1.071,11,1.482,12,2.386,13,2.386,14,2.386,15,2.386,16,2.386,17,0.293,18,0.489,19,1.841,20,3.037,21,1.279,22,1.687,23,0.957,24,3.769,25,2.693,26,0.461,27,0.036,28,0.475,29,0.533,30,0.69,31,0.818,32,2.639,33,1.671,34,2.386,35,2.639,36,2.639,37,0.422,38,1.172,39,0.253,40,1.278,41,0.542,42,1.494,43,1.494,44,2.134,45,1.494,46,2.134,47,1.494,48,0.324,49,0.139,50,0.771,51,1.671,52,1.48,53,0.791,54,0.379,55,0.703,56,2.034,57,0.798,58,2.135,59,2.034,60,1.111,61,1.221,62,1.851,63,1.407,64,1.945,65,0.845,66,1.494,67,1.494,68,3.074,69,1.494,70,1.744,71,1.586,72,2.134,73,1.111,74,0.632,75,1.494,76,1.494,77,2.134,78,2.134,79,1.111,80,2.489,81,1.586,82,1.924,83,1.494,84,2.489,85,1.494,86,0.915,87,0.925,88,2.134,89,1.494,90,1.494,91,1.494,92,1.494,93,1.671,94,2.489,95,2.784,96,0.915,97,2.034,98,1.494,99,1.671,100,1.494,101,1.671,102,1.671,103,1.111,104,1.671,105,2.386,106,1.111,107,1.671,108,1.671,109,1.013,110,1.221,111,1.221,112,3.769,113,0.703,114,1.206,115,1.004,116,0.915,117,1.68,118,0.925,119,0.925,120,0.527,121,0.582,122,1.903,123,0.527,124,0.771,125,0.925,126,0.64,127,1.688,128,0.845,129,0.64,130,0.64,131,0.64,132,0.582,133,0.64,134,0.925,135,0.64,136,0.475,137,0.845,138,0.925,139,0.021,140,0.021]],["title/components/CustomComponent.html",[0,0.076,120,0.614]],["body/components/CustomComponent.html",[0,0.145,1,0.465,2,0.224,3,0.19,4,0.556,5,0.817,6,0.817,7,0.158,9,0.681,10,1.04,11,1.007,17,0.259,18,0.456,21,0.759,22,0.895,23,1.18,26,0.475,27,0.036,29,0.581,30,0.335,33,1.476,37,0.331,38,1.287,39,0.224,41,0.651,48,0.277,49,0.068,50,1.568,52,0.621,53,0.419,54,0.495,55,1.206,57,0.752,63,1.311,74,0.335,86,1.098,87,1.435,96,0.566,113,0.621,114,1.102,115,0.918,116,0.836,117,1.586,118,0.817,119,0.817,120,0.903,121,0.903,122,1.832,123,0.465,124,0.681,125,0.817,126,0.566,127,1.617,128,0.746,129,0.566,130,0.566,131,0.566,132,0.514,133,0.566,134,0.817,135,0.566,136,0.419,137,0.746,138,0.817,139,0.019,140,0.019,141,0.856,142,1.476,143,2.091,144,2.806,145,2.094,146,3.245,147,3.245,148,3.245,149,2.181,150,3.245,151,3.245,152,3.444,153,2.31,154,3.444,155,1.771,156,3.245,157,2.331,158,3.623,159,3.444,160,2.094,161,2.331,162,2.331,163,3.444,164,1.934,165,2.331,166,2.579,167,2.331,168,2.47,169,3.748,170,2.331,171,2.331,172,2.47,173,2.331,174,2.938,175,2.857,176,2.331,177,2.331,178,2.331,179,1.476,180,2.47,181,2.331,182,1.934,183,2.331,184,1.934,185,1.896,186,2.47,187,1.758,188,1.19,189,1.672,190,1.476,191,1.079,192,1.19,193,3.245,194,2.938,195,1.672,196,1.19,197,1.672,198,1.672,199,1.672,200,1.672,201,1.672,202,1.672,203,1.672,204,1.672,205,1.207,206,1.672,207,1.672,208,1.672,209,0.817,210,1.672,211,1.672,212,1.672,213,1.672,214,1.672,215,1.672,216,1.672,217,1.672,218,1.672,219,1.672,220,2.47,221,1.672,222,1.672,223,1.007,224,1.32,225,1.32,226,1.672]],["title/classes/ExampleEditorOptions.html",[49,0.089,56,1.424]],["body/classes/ExampleEditorOptions.html",[0,0.112,1,0.553,2,0.266,3,0.368,4,0.447,7,0.187,8,1.569,10,0.702,11,1.14,12,1.754,13,1.754,14,1.754,15,1.754,16,1.754,17,0.308,18,0.434,19,1.497,20,1.754,21,1.181,22,1.063,23,1.069,25,2.305,26,0.477,27,0.036,28,0.964,29,0.636,30,0.649,31,0.922,34,1.754,37,0.434,38,1.203,39,0.266,40,1.544,41,0.561,42,1.569,43,1.569,44,2.209,45,1.569,46,2.209,47,1.569,48,0.331,49,0.15,50,0.81,51,1.754,52,1.468,53,0.702,54,0.398,55,0.738,56,2.268,57,0.743,58,2.366,59,2.089,60,1.166,61,1.282,62,2.063,63,1.445,64,1.97,65,0.887,66,2.209,67,2.209,68,3.118,69,1.569,70,1.805,71,1.642,72,2.925,73,1.642,74,0.561,75,2.775,76,2.209,77,2.925,78,2.209,79,1.642,80,3.035,81,1.642,82,1.991,83,1.569,84,3.035,85,1.569,86,0.947,87,0.971,88,2.557,89,1.569,90,1.569,91,1.569,92,1.569,93,1.754,94,2.557,95,2.859,96,0.672,97,2.089,98,1.569,99,1.754,100,1.569,101,1.754,102,1.754,103,1.166,104,1.754,105,2.47,106,1.166,107,1.754,108,1.754,109,1.063,110,1.282,111,1.282,139,0.022,140,0.022,179,3.394,227,2.77,228,2.77,229,1.497,230,2.77,231,2.77,232,2.77,233,2.77]],["title/classes/ExampleStudentOptions.html",[25,1.571,49,0.089]],["body/classes/ExampleStudentOptions.html",[0,0.114,1,0.571,2,0.275,3,0.325,4,0.462,7,0.193,8,1.62,10,0.718,11,1.166,12,1.812,13,1.812,14,1.812,15,1.812,16,1.812,17,0.318,18,0.444,19,1.532,20,1.812,21,1.193,22,1.098,23,0.992,25,2.538,26,0.48,27,0.036,28,0.894,29,0.618,30,0.715,31,0.897,34,1.812,37,0.441,38,1.225,39,0.275,40,1.511,41,0.574,42,1.62,43,1.62,44,2.259,45,1.62,46,2.259,47,1.62,48,0.336,49,0.152,50,0.836,51,1.812,52,1.554,53,0.718,54,0.411,55,0.763,56,2.505,57,0.815,58,2.201,59,2.126,60,1.204,61,1.324,62,1.934,63,1.47,64,1.986,65,0.916,66,1.62,67,1.62,68,3.146,69,1.62,70,1.846,71,1.68,72,2.259,73,1.204,74,0.574,75,1.62,76,1.62,77,2.259,78,2.259,79,1.204,80,2.602,81,1.68,82,2.037,83,1.62,84,2.602,85,1.62,86,0.968,87,1.003,88,2.259,89,1.62,90,1.62,91,1.62,92,1.62,93,1.812,94,2.602,95,2.909,96,0.694,97,2.126,98,1.62,99,3.148,100,2.259,101,2.527,102,2.527,103,1.204,104,2.527,105,3.311,106,1.204,107,2.527,108,1.812,109,1.098,110,1.324,111,1.324,139,0.022,140,0.022,179,3.148,229,1.532,234,2.861,235,2.861,236,2.861,237,2.861]],["title/interfaces/ICustomDynamicComponent.html",[41,0.442,223,0.899]],["body/interfaces/ICustomDynamicComponent.html",[0,0.142,2,0.315,3,0.267,4,0.529,7,0.222,10,0.59,17,0.365,18,0.487,26,0.429,27,0.036,29,0.64,30,0.471,37,0.42,38,1.503,39,0.315,41,0.757,48,0.333,49,0.095,50,1.279,54,0.471,55,1.461,63,1.049,87,1.149,120,0.654,121,0.723,139,0.025,140,0.025,141,0.471,142,2.076,143,2.235,144,2.665,145,2.026,146,2.351,147,2.351,148,2.351,150,2.351,151,2.351,153,1.673,155,1.844,156,3.14,158,3.535,166,2.435,168,2.351,169,3.535,172,2.351,174,3.14,180,2.351,185,2.026,186,3.14,187,2.235,188,1.673,189,2.351,190,2.076,191,1.517,192,1.673,193,3.773,194,3.535,195,2.351,196,1.673,197,2.351,198,2.351,199,2.351,200,2.351,201,2.351,202,2.351,203,2.351,204,2.351,205,1.534,206,2.351,207,2.351,208,2.351,209,1.149,210,2.351,211,2.351,212,2.351,213,2.351,214,2.351,215,2.351,216,2.351,217,2.351,218,2.351,219,2.351,220,3.14,221,2.351,222,2.351,223,1.441,224,1.856,225,1.856,226,3.535]],["title/classes/InternalGroup.html",[49,0.089,238,1.742]],["body/classes/InternalGroup.html",[0,0.071,2,0.178,3,0.151,4,0.466,7,0.125,10,0.333,17,0.206,18,0.646,19,2.276,22,0.711,23,0.802,26,0.418,27,0.036,28,0.52,29,0.395,30,0.511,31,0.847,37,0.386,39,0.178,40,1.286,48,0.24,49,0.117,50,1.41,54,0.266,57,0.664,58,0.779,64,1.75,65,1.138,73,0.779,74,0.627,86,0.701,103,0.779,106,0.779,109,1.542,111,1.645,123,0.369,124,0.845,132,0.408,136,0.333,139,0.016,140,0.016,141,0.627,143,1.476,144,1.645,145,1.645,153,0.945,155,1.691,160,0.857,166,1.86,185,1.645,191,1.645,192,0.945,196,1.476,205,1.691,209,2.095,229,1.109,238,2.014,239,1.673,240,1.172,241,1.773,242,1.851,243,2.89,244,2.209,245,1.851,246,1.851,247,2.073,248,1.327,249,2.073,250,1.327,251,2.073,252,1.83,253,2.073,254,1.637,255,2.882,256,1.327,257,1.327,258,1.327,259,1.172,260,1.973,261,2.073,262,1.327,263,3.461,264,2.55,265,3.581,266,1.327,267,1.83,268,1.327,269,3.126,270,2.073,271,3.68,272,3.763,273,2.882,274,1.327,275,1.327,276,1.327,277,1.327,278,1.327,279,2.55,280,0.711,281,1.327,282,1.327,283,2.55,284,3.126,285,2.882,286,1.327,287,2.55,288,1.327,289,1.327,290,1.327,291,2.882,292,2.882,293,2.55,294,2.882,295,3.162,296,2.882,297,1.327,298,2.073,299,1.327,300,1.327,301,1.327,302,2.55,303,1.327,304,1.327,305,1.476,306,2.55,307,2.073,308,2.882,309,1.327,310,2.073,311,3.126,312,1.327,313,1.327,314,2.073,315,1.327,316,1.327,317,1.327,318,1.327,319,1.327,320,1.327,321,1.327,322,1.327,323,1.327,324,1.327,325,1.327,326,1.327,327,1.327,328,1.327,329,1.327,330,2.073,331,1.327,332,1.327,333,2.073,334,2.073,335,2.073,336,1.327,337,1.637,338,1.327,339,1.327,340,1.327,341,1.327,342,2.073,343,1.327,344,1.327,345,1.327,346,1.327,347,1.327,348,1.327,349,1.327,350,1.327,351,1.476,352,1.327,353,1.327,354,2.073,355,1.327,356,2.55,357,1.327,358,1.327,359,1.327,360,1.327,361,1.048,362,2.073,363,2.073,364,1.327,365,1.327,366,2.55,367,1.327,368,1.327,369,1.327,370,1.327,371,1.327,372,1.327,373,1.327,374,1.327,375,1.327,376,1.327,377,1.327,378,1.327,379,1.327,380,1.327,381,1.327,382,1.327,383,1.327,384,1.327,385,1.327,386,1.327,387,2.073,388,1.327,389,1.327,390,1.327,391,1.172]],["title/interfaces/InternalPropertyItemMeta.html",[223,0.899,244,1.295]],["body/interfaces/InternalPropertyItemMeta.html",[0,0.079,2,0.308,3,0.261,7,0.217,17,0.356,18,0.647,21,0.706,26,0.443,27,0.036,28,0.776,29,0.48,31,0.952,37,0.501,39,0.308,40,0.854,41,0.62,48,0.329,54,0.461,57,0.62,59,1.995,60,1.815,61,1.483,62,1.349,63,1.026,64,1.511,65,1.794,70,1.483,71,1.815,74,0.461,79,1.349,81,1.349,86,1.047,87,1.123,97,1.995,109,1.23,110,1.483,115,0.854,121,0.951,132,0.706,139,0.024,140,0.024,141,0.461,155,1.123,187,2.201,188,1.636,205,1.511,209,1.123,223,1.424,225,2.442,229,1.871,239,1.23,241,1.23,244,2.052,254,1.815,260,1.708,280,1.23,305,2.201,392,2.029,393,2.412,394,4.019,395,1.636,396,1.636,397,1.23,398,2.298,399,2.298,400,3.092,401,2.298,402,2.952,403,2.298,404,2.298,405,2.658,406,2.298,407,2.298,408,2.298,409,2.298,410,2.298,411,2.298,412,2.298,413,3.092,414,3.092,415,2.298,416,3.092,417,3.092,418,3.739,419,3.495,420,2.298,421,2.298,422,2.298,423,3.092,424,3.092,425,3.092,426,2.298,427,2.298]],["title/components/PropertyGridComponent.html",[0,0.076,123,0.614]],["body/components/PropertyGridComponent.html",[0,0.087,1,0.247,2,0.119,3,0.101,4,0.618,5,0.434,6,0.434,7,0.084,9,0.362,10,0.89,11,0.61,17,0.138,18,0.652,19,2.202,21,0.46,22,0.476,23,1.107,26,0.438,27,0.036,28,0.375,29,0.3,30,0.389,31,0.691,33,0.785,37,0.304,39,0.119,40,1.292,48,0.183,49,0.078,50,1.517,52,0.33,53,0.223,54,0.3,57,0.662,58,0.878,64,1.5,65,0.865,73,0.878,74,0.681,86,1.117,96,0.301,103,0.522,106,0.878,109,1.565,111,1.467,113,0.33,114,0.668,115,0.556,116,0.506,117,1.111,118,0.434,119,0.434,120,0.247,121,0.273,122,1.428,123,0.633,124,1.034,125,0.434,126,0.301,127,1.227,128,0.397,129,0.301,130,0.301,131,0.301,132,0.596,133,0.301,134,0.434,135,0.301,136,0.375,137,0.397,138,0.434,139,0.012,140,0.012,141,0.803,143,1.379,144,2.061,145,0.574,149,1.321,153,1.618,155,1.561,160,1.774,166,2.19,179,0.785,185,1.637,191,1.25,192,0.633,196,1.065,205,1.428,209,2.119,229,1.217,238,1.182,239,2.144,240,0.785,241,1.037,244,2.121,247,1.938,248,0.889,249,2.273,250,1.496,251,2.273,252,1.711,253,1.496,254,1.795,255,2.536,256,0.889,257,0.889,258,0.889,259,0.785,260,2.019,261,2.749,262,1.938,263,3.612,264,2.749,265,3.722,266,1.496,267,2.007,268,1.496,269,3.301,270,2.273,271,3.812,272,3.887,273,3.07,274,1.496,275,1.496,276,1.496,277,1.496,278,1.496,279,2.749,280,0.801,281,1.496,282,1.496,283,2.749,284,3.301,285,3.07,286,1.496,287,2.923,288,1.496,289,1.496,290,1.496,291,3.07,292,3.07,293,2.749,294,3.07,295,3.287,296,3.07,297,1.496,298,2.273,299,1.496,300,1.496,301,1.496,302,2.749,303,1.496,304,1.496,305,1.618,306,2.749,307,2.273,308,3.07,309,1.496,310,2.273,311,3.301,312,0.889,313,0.889,314,1.496,315,0.889,316,0.889,317,0.889,318,0.889,319,0.889,320,0.889,321,0.889,322,1.496,323,1.496,324,2.273,325,2.273,326,1.938,327,1.938,328,1.496,329,0.889,330,1.496,331,0.889,332,0.889,333,1.496,334,1.496,335,1.496,336,0.889,337,1.795,338,1.496,339,0.889,340,2.273,341,0.889,342,1.496,343,0.889,344,0.889,345,0.889,346,1.496,347,0.889,348,0.889,349,0.889,350,1.496,351,1.806,352,0.889,353,2.273,354,1.496,355,1.496,356,2.536,357,0.889,358,0.889,359,0.889,360,2.273,361,0.702,362,1.496,363,1.496,364,0.889,365,0.889,366,1.938,367,0.889,368,0.889,369,0.889,370,0.889,371,0.889,372,0.889,373,0.889,374,0.889,375,0.889,376,0.889,377,0.889,378,0.889,379,0.889,380,0.889,381,0.889,382,0.889,383,0.889,384,0.889,385,0.889,386,0.889,387,1.496,388,0.889,389,0.889,390,0.889,391,0.785,428,2.086,429,2.086,430,1.239,431,2.086,432,1.239,433,2.086,434,2.086,435,1.239,436,1.239,437,1.239,438,1.239,439,1.239,440,1.239,441,1.239,442,1.239,443,1.239,444,1.239,445,1.239,446,1.239,447,1.239,448,1.239,449,1.239,450,1.239,451,1.239,452,1.239,453,1.239,454,1.239]],["title/injectables/PropertyGridControlProvider.html",[455,1.949,456,1.742]],["body/injectables/PropertyGridControlProvider.html",[0,0.136,2,0.35,3,0.297,7,0.247,17,0.406,18,0.522,19,2.322,23,1.094,26,0.497,27,0.036,28,0.845,29,0.522,30,0.747,31,0.937,37,0.35,39,0.35,48,0.317,49,0.106,50,1.518,57,0.675,63,1.755,86,1.14,139,0.026,140,0.026,141,0.816,144,2.404,145,2.404,149,2.974,160,2.173,166,1.688,205,1.278,239,2.178,260,1.989,280,2.178,337,2.941,395,1.862,455,3.289,456,2.941,457,2.616,458,5.484,459,4.696,460,4.696,461,4.696,462,3.648,463,4.696,464,3.648,465,5.675,466,3.648,467,3.648,468,3.648,469,3.648,470,3.648]],["title/modules/PropertyGridModule.html",[471,1.424,472,1.742]],["body/modules/PropertyGridModule.html",[2,0.308,3,0.261,7,0.217,18,0.605,27,0.035,37,0.588,39,0.308,40,1.149,41,0.62,48,0.387,49,0.093,74,0.461,96,0.778,113,0.854,120,1.118,123,1.216,126,1.39,129,1.39,130,1.39,131,1.39,133,1.39,135,1.413,136,1.09,139,0.024,140,0.024,141,0.461,241,1.655,259,2.029,260,1.123,280,1.23,351,1.636,393,1.483,395,2.201,396,2.661,397,1.655,456,2.442,471,1.995,472,3.575,473,1.636,474,3.495,475,2.298,476,2.658,477,2.658,478,2.658,479,3.092,480,2.298,481,2.029,482,3.204,483,3.577,484,4.312,485,4.312,486,3.204,487,3.577,488,4.312,489,5.604,490,3.204,491,3.204,492,3.204,493,3.204,494,3.204,495,3.204,496,4.312,497,2.658,498,2.658,499,3.204,500,3.204,501,3.204,502,3.204,503,3.204,504,3.204,505,3.204,506,3.204]],["title/interfaces/PropertyItemMeta.html",[223,0.899,393,1.424]],["body/interfaces/PropertyItemMeta.html",[0,0.07,2,0.271,3,0.23,7,0.191,17,0.314,18,0.628,21,0.623,26,0.504,27,0.036,28,0.712,29,0.44,31,0.986,37,0.475,39,0.271,40,0.753,41,0.569,48,0.308,54,0.406,57,0.748,59,2.408,60,1.665,61,2.287,62,1.189,63,1.582,64,1.823,65,1.837,70,2.287,71,1.665,74,0.406,79,1.189,81,1.189,86,1.508,87,1.732,97,2.408,109,1.084,110,2.287,115,0.753,121,0.872,132,0.623,139,0.022,140,0.022,141,0.406,155,0.99,175,3.28,187,2.019,188,1.442,205,1.386,209,0.99,223,1.333,225,1.6,229,1.997,239,1.084,241,1.084,244,1.665,254,1.6,260,1.599,280,1.084,305,2.019,392,1.789,393,2.287,394,3.272,395,1.442,396,1.442,397,1.084,398,2.026,399,2.026,400,2.836,401,2.026,402,3.199,403,2.026,404,2.026,405,2.343,406,2.026,407,2.026,408,2.026,409,2.026,410,2.026,411,2.026,412,2.026,413,2.836,414,2.836,415,2.026,416,2.836,417,2.836,418,3.545,419,3.272,420,2.026,421,2.026,422,2.026,423,2.836,424,2.836,425,2.836,426,2.026,427,2.026]],["title/directives/PropertyItemTemplateDirective.html",[116,0.747,136,0.554]],["body/directives/PropertyItemTemplateDirective.html",[2,0.402,3,0.342,4,0.954,7,0.283,9,1.224,10,0.922,17,0.466,18,0.57,19,1.966,22,1.608,23,1.104,26,0.451,27,0.035,31,0.827,37,0.402,39,0.402,48,0.283,49,0.122,57,0.737,86,1.017,116,1.343,136,0.922,137,1.845,139,0.029,140,0.029,141,0.829,155,1.939,160,1.939,239,2.213,241,2.213,252,3.81,391,2.653,507,3.475,508,4.19,509,5.123,510,4.19,511,4.19]],["title/classes/PropertyValue.html",[49,0.089,351,1.571]],["body/classes/PropertyValue.html",[0,0.072,2,0.18,3,0.153,4,0.471,7,0.127,10,0.337,17,0.208,18,0.647,19,2.234,22,0.719,23,0.807,26,0.357,27,0.036,29,0.324,30,0.515,31,0.653,33,1.186,37,0.388,39,0.18,40,1.452,48,0.242,49,0.117,50,1.465,54,0.269,57,0.515,58,0.789,64,1.699,65,1.147,73,0.789,74,0.63,86,0.87,103,0.789,106,0.789,109,1.553,111,1.658,123,0.374,124,0.853,132,0.413,136,0.337,139,0.016,140,0.016,141,0.63,143,1.49,144,1.658,145,0.867,153,0.956,155,1.699,160,1.35,166,2.028,182,1.554,184,1.554,185,1.658,191,1.658,192,0.956,196,1.49,205,1.699,209,2.098,229,1.12,238,1.652,239,1.683,240,1.186,241,1.375,244,2.293,247,2.092,248,1.344,249,2.092,250,1.344,251,2.092,252,1.848,253,2.092,254,1.652,255,2.901,256,1.344,257,1.344,258,1.344,259,1.186,260,1.978,261,2.092,262,1.344,263,3.476,264,2.57,265,3.595,266,1.344,267,1.848,268,1.344,269,3.144,270,2.092,271,3.693,272,3.776,273,2.901,274,1.344,275,1.344,276,1.344,277,1.344,278,1.344,279,2.57,280,0.719,281,1.344,282,1.344,283,2.57,284,3.144,285,2.901,286,1.344,287,2.57,288,1.344,289,1.344,290,1.344,291,2.901,292,2.901,293,2.57,294,2.901,295,3.175,296,2.901,297,1.344,298,2.092,299,1.344,300,1.344,301,1.344,302,2.57,303,1.344,304,1.344,305,1.49,306,2.57,307,2.092,308,2.901,309,1.344,310,2.092,311,3.144,312,1.344,313,1.344,314,2.092,315,1.344,316,1.344,317,1.344,318,1.344,319,1.344,320,1.344,321,1.344,322,1.344,323,1.344,324,1.344,325,1.344,326,1.344,327,1.344,328,1.344,329,1.344,330,2.092,331,1.344,332,1.344,333,2.092,334,2.092,335,2.092,336,1.344,337,1.652,338,1.344,339,1.344,340,1.344,341,1.344,342,2.092,343,1.344,344,1.344,345,1.344,346,1.344,347,1.344,348,1.344,349,1.344,350,1.344,351,1.829,352,1.344,353,1.344,354,2.092,355,1.344,356,2.901,357,1.344,358,1.344,359,1.344,360,1.344,361,1.061,362,2.092,363,2.092,364,1.344,365,1.344,366,2.57,367,1.344,368,1.344,369,1.344,370,1.344,371,1.344,372,1.344,373,1.344,374,1.344,375,1.344,376,1.344,377,1.344,378,1.344,379,1.344,380,1.344,381,1.344,382,1.344,383,1.344,384,1.344,385,1.344,386,1.344,387,2.092,388,1.344,389,1.344,390,2.092,391,1.186,512,1.874,513,1.874,514,1.874,515,1.874,516,1.874]],["title/interfaces/PropertyValueAccess.html",[223,0.899,224,1.742]],["body/interfaces/PropertyValueAccess.html",[0,0.143,2,0.323,3,0.274,4,0.542,7,0.227,10,0.605,26,0.363,27,0.036,29,0.591,30,0.483,37,0.427,38,1.416,39,0.323,41,0.718,48,0.337,49,0.098,50,1.301,54,0.483,55,1.186,63,1.076,87,1.178,120,0.671,121,0.741,139,0.025,140,0.025,141,0.483,142,2.128,143,2.272,144,2.682,145,2.06,146,2.41,147,2.41,148,2.41,150,2.41,151,2.41,153,1.715,155,1.862,156,3.192,158,3.579,166,2.459,168,2.41,169,3.579,172,2.41,174,3.192,180,2.41,185,2.06,186,3.192,187,2.548,188,1.715,189,2.41,190,2.128,191,1.555,192,1.715,193,3.811,194,3.579,195,2.41,196,1.715,197,2.41,198,2.41,199,2.41,200,2.41,201,2.41,202,2.41,203,2.41,204,2.41,205,1.56,206,2.41,207,2.41,208,2.41,209,1.178,210,2.41,211,2.41,212,2.41,213,2.41,214,2.41,215,2.41,216,2.41,217,2.41,218,2.41,219,2.41,220,3.192,221,2.41,222,2.41,223,1.459,224,2.521,225,2.521,226,2.41]],["title/modules/ShowcaseModule.html",[471,1.424,517,1.949]],["body/modules/ShowcaseModule.html",[1,1.237,2,0.359,3,0.305,7,0.253,27,0.035,37,0.588,39,0.359,42,2.12,43,2.12,44,2.977,45,2.977,46,2.977,47,2.704,48,0.323,49,0.109,53,1.083,113,0.998,139,0.027,140,0.027,188,1.911,396,2.438,471,2.21,472,3.312,473,1.911,474,3.771,475,3.771,479,3.424,480,2.685,481,2.371,483,3.96,487,3.96,497,3.96,498,3.105,517,3.904,518,3.105,519,3.105,520,3.743,521,3.105,522,3.743,523,5.258,524,4.775,525,5.258,526,4.775,527,3.105,528,3.743,529,4.775,530,4.775,531,4.775,532,4.775,533,4.775,534,4.775]],["title/components/SimpleCheckboxComponent.html",[0,0.076,126,0.747]],["body/components/SimpleCheckboxComponent.html",[0,0.146,1,0.723,2,0.348,3,0.295,4,0.754,5,1.269,6,1.269,7,0.245,9,1.058,10,1.115,11,1.366,17,0.403,18,0.576,21,1.03,23,0.933,26,0.381,27,0.035,28,0.652,29,0.63,30,0.672,37,0.449,38,1.546,39,0.348,41,0.744,48,0.245,49,0.105,52,0.965,53,0.652,54,0.672,55,1.458,57,0.744,74,0.521,96,0.879,113,0.965,114,1.496,115,1.246,116,1.134,117,1.917,118,1.269,119,1.269,120,0.723,121,0.798,122,2.067,123,0.723,124,1.058,125,1.269,126,1.327,127,1.913,128,1.657,129,0.879,130,0.879,131,0.879,132,0.798,133,0.879,134,1.269,135,0.879,136,0.652,137,1.159,138,1.269,139,0.026,140,0.026,141,0.744,397,1.39,402,2.931,535,2.395,536,3.004,537,3.621,538,3.621]],["title/components/SimpleColorComponent.html",[0,0.076,129,0.747]],["body/components/SimpleColorComponent.html",[0,0.146,1,0.719,2,0.346,3,0.294,4,0.752,5,1.262,6,1.262,7,0.244,9,1.053,10,1.115,11,1.361,17,0.401,18,0.574,21,1.027,23,0.93,26,0.38,27,0.035,28,0.648,29,0.629,30,0.67,31,0.833,37,0.447,38,1.543,39,0.346,41,0.742,48,0.244,49,0.105,52,0.96,53,0.648,54,0.67,55,1.455,57,0.742,74,0.833,96,0.874,113,0.96,114,1.491,115,1.242,116,1.13,117,1.913,118,1.262,119,1.262,120,0.719,121,0.794,122,2.065,123,0.719,124,1.053,125,1.262,126,0.874,127,1.911,128,1.153,129,1.325,130,0.874,131,0.874,132,0.794,133,0.874,134,1.262,135,0.874,136,0.648,137,1.153,138,1.262,139,0.026,140,0.026,141,0.742,397,1.383,535,2.389,539,2.988,540,3.602,541,3.602]],["title/components/SimpleDateComponent.html",[0,0.076,130,0.747]],["body/components/SimpleDateComponent.html",[0,0.146,1,0.719,2,0.346,3,0.294,4,0.752,5,1.262,6,1.262,7,0.244,9,1.053,10,1.115,11,1.361,17,0.401,18,0.574,21,1.027,23,0.93,26,0.38,27,0.035,28,0.648,29,0.629,30,0.67,31,0.833,37,0.447,38,1.543,39,0.346,41,0.742,48,0.244,49,0.105,52,0.96,53,0.648,54,0.67,55,1.455,57,0.742,74,0.518,96,1.405,113,0.96,114,1.491,115,1.242,116,1.13,117,1.913,118,1.262,119,1.262,120,0.719,121,0.794,122,2.065,123,0.719,124,1.053,125,1.262,126,0.874,127,1.911,128,1.153,129,0.874,130,1.325,131,0.874,132,0.794,133,0.874,134,1.262,135,0.874,136,0.648,137,1.153,138,1.262,139,0.026,140,0.026,141,0.742,397,1.383,535,2.389,542,2.988,543,3.602,544,3.602]],["title/components/SimpleLabelComponent.html",[0,0.076,131,0.747]],["body/components/SimpleLabelComponent.html",[0,0.146,1,0.721,2,0.347,3,0.295,4,0.753,5,1.267,6,1.267,7,0.244,9,1.056,10,1.115,11,1.364,17,0.402,18,0.575,21,1.029,23,0.932,26,0.381,27,0.035,28,0.65,29,0.665,30,0.671,31,0.835,37,0.448,38,1.545,39,0.347,41,0.744,48,0.244,49,0.105,52,0.964,53,0.65,54,0.671,55,1.457,57,0.744,74,0.52,96,0.877,113,0.964,114,1.494,115,1.244,116,1.133,117,1.915,118,1.267,119,1.267,120,0.721,121,0.797,122,2.067,123,0.721,124,1.056,125,1.267,126,0.877,127,1.913,128,1.157,129,0.877,130,0.877,131,1.327,132,1.14,133,0.877,134,1.267,135,0.877,136,0.65,137,1.157,138,1.267,139,0.026,140,0.026,141,0.744,397,1.388,535,2.393,545,2.998,546,3.615,547,3.615]],["title/components/SimpleSelectComponent.html",[0,0.076,133,0.747]],["body/components/SimpleSelectComponent.html",[0,0.141,1,0.632,2,0.304,3,0.258,4,0.691,5,1.11,6,1.11,7,0.214,9,0.926,10,1.095,11,1.251,17,0.352,18,0.539,21,0.943,23,1.082,26,0.442,27,0.036,28,0.57,29,0.603,30,0.615,31,0.782,37,0.411,38,1.489,39,0.304,41,0.697,48,0.214,49,0.092,50,1.669,52,0.845,53,0.57,54,0.615,55,1.383,57,0.779,74,0.456,86,1.356,96,0.769,113,0.845,114,1.37,115,1.141,116,1.039,117,1.819,118,1.11,119,1.11,120,0.632,121,0.699,122,2.001,123,0.632,124,0.926,125,1.11,126,0.769,127,1.859,128,1.014,129,0.769,130,0.769,131,0.769,132,0.699,133,1.259,134,1.698,135,0.769,136,0.57,137,1.014,138,1.11,139,0.024,140,0.024,141,0.803,149,2.71,160,1.981,185,2.642,397,1.216,535,2.585,548,2.628,549,4.846,550,4.28,551,4.28,552,4.28,553,3.169,554,4.28,555,3.169,556,3.169,557,3.169,558,3.169,559,3.169,560,4.28,561,4.28,562,4.28]],["title/components/SimpleTextComponent.html",[0,0.076,135,0.747]],["body/components/SimpleTextComponent.html",[0,0.146,1,0.723,2,0.348,3,0.295,4,0.754,5,1.269,6,1.269,7,0.245,9,1.058,10,1.115,11,1.366,17,0.403,18,0.576,21,1.206,23,0.933,26,0.381,27,0.035,28,0.652,29,0.63,30,0.672,31,0.835,37,0.449,38,1.546,39,0.348,41,0.744,48,0.245,49,0.105,52,0.965,53,0.652,54,0.672,55,1.458,57,0.744,74,0.521,96,0.879,113,0.965,114,1.496,115,1.246,116,1.134,117,1.917,118,1.269,119,1.269,120,0.723,121,0.798,122,2.067,123,0.723,124,1.058,125,1.269,126,0.879,127,1.913,128,1.159,129,0.879,130,0.879,131,0.879,132,0.798,133,0.879,134,1.269,135,1.327,136,0.652,137,1.159,138,1.269,139,0.026,140,0.026,141,0.744,397,1.39,535,2.395,563,3.004,564,3.621,565,3.621]],["title/components/SimpleTextEditorComponent.html",[0,0.076,53,0.554]],["body/components/SimpleTextEditorComponent.html",[0,0.132,1,0.765,2,0.26,3,0.312,4,0.619,5,0.947,6,0.947,7,0.183,8,1.531,9,0.79,10,1.075,11,1.496,12,1.712,13,1.712,14,1.712,15,1.712,16,1.712,17,0.301,18,0.495,19,1.471,20,1.712,21,1.253,22,1.037,23,0.765,25,2.274,26,0.463,27,0.036,28,0.486,29,0.608,30,0.697,31,0.826,34,1.712,37,0.428,38,1.417,39,0.26,40,1.292,41,0.641,42,1.531,43,1.531,44,2.171,45,1.531,46,2.171,47,1.531,48,0.328,49,0.141,50,0.79,51,1.712,52,1.515,53,0.921,54,0.551,55,1.292,56,2.061,57,0.803,58,2.155,59,2.061,60,1.138,61,1.251,62,1.875,63,1.426,64,1.958,65,0.865,66,1.531,67,1.531,68,3.096,69,1.531,70,1.774,71,1.614,72,2.171,73,1.138,74,0.641,75,1.531,76,1.531,77,2.171,78,2.171,79,1.138,80,2.523,81,1.614,82,1.957,83,1.531,84,2.523,85,1.531,86,0.93,87,0.947,88,2.171,89,1.531,90,1.531,91,1.531,92,1.531,93,1.712,94,2.523,95,2.821,96,0.93,97,2.061,98,1.531,99,1.712,100,1.531,101,1.712,102,1.712,103,1.138,104,1.712,105,2.428,106,1.138,107,1.712,108,1.712,109,1.037,110,1.251,111,1.251,113,0.72,114,1.227,115,1.022,116,0.93,117,1.699,118,0.947,119,0.947,120,0.539,121,0.596,122,1.916,123,0.539,124,0.79,125,0.947,126,0.656,127,1.702,128,0.865,129,0.656,130,0.656,131,0.656,132,0.596,133,0.656,134,0.947,135,0.656,136,0.486,137,0.865,138,0.947,139,0.022,140,0.022,566,2.703,567,2.703]],["title/coverage.html",[568,3.48]],["body/coverage.html",[0,0.148,1,0.656,7,0.222,8,2.983,25,1.679,26,0.268,27,0.036,30,0.473,40,0.877,41,0.473,49,0.153,53,0.592,56,1.522,74,0.473,96,0.798,116,0.798,120,0.656,123,0.656,126,0.798,129,0.798,130,0.798,131,0.798,133,0.798,135,0.798,136,0.592,139,0.025,140,0.025,141,0.898,142,3.127,209,2.224,223,1.54,224,1.862,238,1.862,239,2.276,240,3.127,241,2.022,244,1.384,260,1.538,267,2.083,280,1.684,351,1.679,392,3.127,393,1.522,395,1.679,455,2.083,456,1.862,457,3.147,507,2.728,535,2.613,536,2.728,539,2.728,542,2.728,545,2.728,548,2.728,563,2.728,568,2.728,569,2.728,570,3.288,571,3.288,572,5.856,573,3.288,574,3.288,575,5.764,576,4.938,577,4.049,578,3.288,579,3.288,580,3.288,581,4.388,582,3.288,583,2.728,584,3.639,585,2.728,586,3.639,587,2.728,588,2.728,589,3.288]],["title/dependencies.html",[473,1.889,590,2.572]],["body/dependencies.html",[27,0.032,139,0.032,140,0.032,473,2.543]],["title/index.html",[17,0.286,591,2.133,592,2.133]],["body/index.html",[0,0.098,3,0.229,4,0.454,9,1.518,18,0.673,21,1.088,26,0.479,27,0.035,28,0.709,29,0.549,31,0.838,40,0.75,41,0.404,48,0.267,49,0.082,52,1.315,53,0.506,54,0.404,56,1.302,57,0.747,58,2.187,59,2.559,60,2.446,61,1.825,62,2.077,63,1.457,64,2.01,65,1.663,66,1.593,67,1.593,68,2.942,69,1.593,70,1.825,71,1.66,72,1.593,73,1.184,74,0.709,75,1.593,76,1.593,77,2.233,78,2.233,79,1.916,80,2.578,81,2.077,82,2.013,83,1.593,84,2.578,85,1.593,86,1.37,87,0.986,88,2.233,89,1.593,90,2.794,91,1.593,92,1.593,94,1.593,97,2.107,110,1.302,114,0.9,115,1.051,121,1.004,127,1.457,128,1.579,132,1.004,139,0.026,140,0.022,155,1.382,187,1.436,190,1.781,191,1.302,223,0.822,229,1.894,260,1.821,305,2.324,337,1.593,361,2.942,393,1.302,398,2.828,399,2.828,400,3.538,401,2.828,402,2.794,403,2.828,404,2.017,406,2.828,407,2.828,408,2.828,409,2.828,410,2.828,411,2.017,412,2.017,473,1.436,593,2.813,594,2.813,595,2.813,596,2.813,597,2.813,598,2.813,599,2.813,600,2.813,601,2.813,602,2.813,603,2.813,604,2.813,605,2.813,606,2.813,607,3.943,608,2.813,609,3.943,610,2.813,611,2.813,612,2.333,613,2.813,614,2.813,615,2.813,616,2.813,617,2.333,618,2.333,619,3.943,620,2.813,621,2.813,622,2.813,623,2.813,624,2.813,625,2.813]],["title/license.html",[591,2.133,592,2.133,626,2.133]],["body/license.html",[7,0.275,27,0.028,60,2.116,81,1.71,82,2.787,100,2.3,139,0.028,140,0.028,164,3.369,396,2.074,481,2.572,569,3.369,612,3.369,617,3.369,626,3.369,627,4.062,628,5.458,629,4.062,630,4.062,631,5.026,632,4.062,633,4.062,634,4.062,635,4.062,636,5.026,637,4.062,638,5.703,639,6.164,640,4.062,641,5.026,642,5.458,643,4.062,644,5.026,645,4.062,646,4.062,647,4.062,648,4.062,649,4.062,650,4.062,651,4.062,652,4.062,653,4.062,654,4.062,655,4.062,656,4.062,657,5.026,658,5.026,659,4.062,660,4.062,661,5.026,662,4.062,663,4.062,664,4.062,665,4.062,666,4.062,667,4.062,668,4.062,669,4.062,670,4.062,671,4.062,672,4.062,673,4.062,674,4.062,675,4.062,676,4.062,677,4.062,678,4.062,679,4.062,680,4.062,681,4.062]],["title/modules.html",[471,1.941]],["body/modules.html",[27,0.031,139,0.031,140,0.031,471,2.249,472,2.752,517,3.078,527,4.641,618,4.641,682,5.595,683,5.595]],["title/overview.html",[684,3.48]],["body/overview.html",[0,0.095,1,1.192,27,0.035,48,0.259,49,0.111,53,0.956,98,2.743,103,2.039,106,1.612,113,1.021,116,0.929,120,1.06,123,1.192,126,1.29,129,1.29,130,1.29,131,1.29,133,1.29,135,1.29,136,1.075,139,0.027,140,0.027,223,1.119,295,2.425,396,1.955,455,2.425,471,2.242,472,3.619,473,1.955,474,2.746,475,2.746,476,3.176,477,3.176,478,3.176,479,3.474,480,2.746,481,2.425,517,3.864,518,3.176,519,3.176,521,3.176,684,3.176]],["title/miscellaneous/variables.html",[577,2.653,685,2.133]],["body/miscellaneous/variables.html",[17,0.401,26,0.421,27,0.036,28,1.018,29,0.629,30,0.519,31,0.582,40,1.377,62,1.519,65,1.155,71,1.519,79,1.963,139,0.026,140,0.026,141,0.671,205,1.265,209,1.265,229,1.385,239,1.79,241,1.79,244,1.519,260,1.634,280,1.79,361,3.093,392,2.953,393,1.67,394,3.344,395,2.638,402,2.043,413,2.588,414,3.344,415,2.588,416,3.344,417,3.344,418,3.917,419,3.706,420,2.588,421,2.588,422,2.588,423,3.344,424,3.344,425,3.344,426,2.588,427,2.588,456,2.043,457,3.344,577,2.588,583,2.993,584,4.805,585,2.993,586,2.993,587,4.286,588,4.286,685,2.993,686,4.663,687,4.663,688,3.608,689,3.608,690,3.608,691,3.608,692,4.663]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":209,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.07",{"_index":321,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["0.1",{"_index":296,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["0/1",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["08",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["1",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"overview.html":{}}}],["10",{"_index":295,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"overview.html":{}}}],["10px",{"_index":301,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["12",{"_index":304,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["120px",{"_index":328,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["12px",{"_index":286,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["14",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["18px",{"_index":303,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["19",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["1px",{"_index":265,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["2",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"overview.html":{}}}],["2018",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"license.html":{}}}],["20px",{"_index":310,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["2px",{"_index":283,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["3px",{"_index":293,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["4",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"overview.html":{}}}],["51f41c",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["5px",{"_index":272,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["616161",{"_index":277,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["6px",{"_index":300,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["8px",{"_index":278,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["95b8e7",{"_index":266,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["_controlvaluechangefn",{"_index":146,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["_map",{"_index":458,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["_meta",{"_index":325,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["_option",{"_index":324,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["_valu",{"_index":147,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["a.ord",{"_index":380,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["abov",{"_index":612,"title":{},"body":{"index.html":{},"license.html":{}}}],["accessor",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["action",{"_index":676,"title":{},"body":{"license.html":{}}}],["actual_compon",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["addit",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["aftercontentinit",{"_index":247,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["ag",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["and/or",{"_index":651,"title":{},"body":{"license.html":{}}}],["angular",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":258,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["angular/common",{"_index":486,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["angular/cor",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["angular/form",{"_index":188,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{}}}],["angular/materi",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{}}}],["angular/platform",{"_index":497,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{}}}],["angularj",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["anim",{"_index":253,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["animate('400m",{"_index":318,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/PropertyGridComponent.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["app.compon",{"_index":528,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["app.component.html",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["app.component.scss",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/PropertyGridComponent.html":{},"modules/ShowcaseModule.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["aris",{"_index":680,"title":{},"body":{"license.html":{}}}],["array",{"_index":337,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["associ",{"_index":640,"title":{},"body":{"license.html":{}}}],["author",{"_index":670,"title":{},"body":{"license.html":{}}}],["b",{"_index":379,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["b.order",{"_index":381,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["backbon",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["backbone.j",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["background",{"_index":273,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["basic",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["belong",{"_index":401,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["bezier(0.86",{"_index":320,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["birth",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["bold",{"_index":276,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["boolean",{"_index":402,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleCheckboxComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":475,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"overview.html":{}}}],["border",{"_index":263,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["both",{"_index":407,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["bottom",{"_index":279,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["box",{"_index":291,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["brows",{"_index":683,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":527,"title":{},"body":{"modules/ShowcaseModule.html":{},"modules.html":{}}}],["browser/anim",{"_index":498,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{}}}],["browseranimationsmodul",{"_index":496,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["browsermodul",{"_index":526,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["buildcompon",{"_index":150,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["c",{"_index":629,"title":{},"body":{"license.html":{}}}],["card",{"_index":298,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["case",{"_index":622,"title":{},"body":{"index.html":{}}}],["catch",{"_index":211,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ccc",{"_index":282,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["cdr",{"_index":338,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["changedetect",{"_index":322,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["changedetectionstrategi",{"_index":248,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["changedetectionstrategy.onpush",{"_index":323,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["changedetectorref",{"_index":249,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["charg",{"_index":635,"title":{},"body":{"license.html":{}}}],["checkbox",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["checkbox.compon",{"_index":490,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["checkbox.component.t",{"_index":536,"title":{},"body":{"components/SimpleCheckboxComponent.html":{},"coverage.html":{}}}],["checkbox.component.ts:10",{"_index":538,"title":{},"body":{"components/SimpleCheckboxComponent.html":{}}}],["checkbox.component.ts:9",{"_index":537,"title":{},"body":{"components/SimpleCheckboxComponent.html":{}}}],["claim",{"_index":673,"title":{},"body":{"license.html":{}}}],["class",{"_index":49,"title":{"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["cluster_propertygridmodul",{"_index":476,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["cluster_propertygridmodule_declar",{"_index":477,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["cluster_propertygridmodule_export",{"_index":478,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["cluster_showcasemodul",{"_index":518,"title":{},"body":{"modules/ShowcaseModule.html":{},"overview.html":{}}}],["cluster_showcasemodule_bootstrap",{"_index":521,"title":{},"body":{"modules/ShowcaseModule.html":{},"overview.html":{}}}],["cluster_showcasemodule_declar",{"_index":519,"title":{},"body":{"modules/ShowcaseModule.html":{},"overview.html":{}}}],["cluster_showcasemodule_import",{"_index":520,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["code",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["color",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"index.html":{}}}],["colspan2",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["column",{"_index":408,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["commonmodul",{"_index":485,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component'},{'nam",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["component.instance.registeronchang",{"_index":216,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.registeronchange(this._controlvaluechangefn",{"_index":217,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.valu",{"_index":215,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.valuechang",{"_index":218,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.valuechange.subscribe(this._controlvaluechangefn",{"_index":219,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component_templ",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["componentfactori",{"_index":206,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["componentfactoryresolv",{"_index":158,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["componentopt",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["componentref",{"_index":169,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["components/properti",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{}}}],["componenttyp",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["condit",{"_index":656,"title":{},"body":{"license.html":{}}}],["connect",{"_index":681,"title":{},"body":{"license.html":{}}}],["console.error(",{"_index":214,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["console.error('load",{"_index":212,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["console.log(thi",{"_index":339,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["const",{"_index":205,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{}}}],["constructor(cdr",{"_index":430,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["constructor(componentfactoryresolv",{"_index":157,"title":{},"body":{"components/CustomComponent.html":{}}}],["constructor(nam",{"_index":242,"title":{},"body":{"classes/InternalGroup.html":{}}}],["constructor(o",{"_index":512,"title":{},"body":{"classes/PropertyValue.html":{}}}],["constructor(priv",{"_index":196,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["constructor(publ",{"_index":391,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{}}}],["constructor(templ",{"_index":508,"title":{},"body":{"directives/PropertyItemTemplateDirective.html":{}}}],["contain",{"_index":623,"title":{},"body":{"index.html":{}}}],["contentchildren",{"_index":250,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["contentchildren(propertyitemtemplatedirect",{"_index":336,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["context",{"_index":587,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continu",{"_index":366,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["contract",{"_index":677,"title":{},"body":{"license.html":{}}}],["control",{"_index":280,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controls/simpl",{"_index":489,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["controlvalueaccessor",{"_index":187,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["convert",{"_index":411,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["convertvalu",{"_index":428,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["convertvalue(meta",{"_index":355,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["copi",{"_index":638,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":628,"title":{},"body":{"license.html":{}}}],["coverag",{"_index":568,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":603,"title":{},"body":{"index.html":{}}}],["cubic",{"_index":319,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["custom",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["custom.compon",{"_index":397,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{}}}],["custom_elements_schema",{"_index":525,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["customcompon",{"_index":120,"title":{"components/CustomComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["damag",{"_index":674,"title":{},"body":{"license.html":{}}}],["data",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["date",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{}}}],["dbdbdb",{"_index":270,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["deal",{"_index":641,"title":{},"body":{"license.html":{}}}],["declar",{"_index":474,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"overview.html":{}}}],["decor",{"_index":179,"title":{},"body":{"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/PropertyGridComponent.html":{}}}],["default",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultprovid",{"_index":395,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultprovider.compon",{"_index":484,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["defaultprovider.getcomponenttype('checkbox",{"_index":421,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["defaultprovider.getcomponenttype('text",{"_index":420,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["defaultprovider.getcomponenttype(m.typ",{"_index":422,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["defaultprovider.register('checkbox",{"_index":499,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["defaultprovider.register('color",{"_index":500,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["defaultprovider.register('d",{"_index":505,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["defaultprovider.register('label",{"_index":501,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["defaultprovider.register('numb",{"_index":503,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["defaultprovider.register('opt",{"_index":504,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["defaultprovider.register('text",{"_index":502,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["defin",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["depend",{"_index":473,"title":{"dependencies.html":{}},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["describ",{"_index":614,"title":{},"body":{"index.html":{}}}],["descript",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["destroycompon",{"_index":151,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["direct",{"_index":116,"title":{"directives/PropertyItemTemplateDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"directives/PropertyItemTemplateDirective.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["display",{"_index":305,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["distribut",{"_index":649,"title":{},"body":{"license.html":{}}}],["document",{"_index":569,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["dot",{"_index":281,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["dropdown",{"_index":620,"title":{},"body":{"index.html":{}}}],["e",{"_index":174,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["each",{"_index":615,"title":{},"body":{"index.html":{}}}],["edit",{"_index":601,"title":{},"body":{"index.html":{}}}],["editor",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/PropertyGridComponent.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["eg",{"_index":412,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["element",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["entri",{"_index":148,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["entrycompon",{"_index":483,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{}}}],["environ",{"_index":584,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":213,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["event",{"_index":164,"title":{},"body":{"components/CustomComponent.html":{},"license.html":{}}}],["eventemitt",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["exampl",{"_index":607,"title":{},"body":{"index.html":{}}}],["example/index.html",{"_index":625,"title":{},"body":{"index.html":{}}}],["exampleeditoropt",{"_index":56,"title":{"classes/ExampleEditorOptions.html":{}},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"index.html":{}}}],["examplestudentopt",{"_index":25,"title":{"classes/ExampleStudentOptions.html":{}},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{}}}],["excel",{"_index":597,"title":{},"body":{"index.html":{}}}],["export",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":663,"title":{},"body":{"license.html":{}}}],["extend",{"_index":225,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{}}}],["f5f5f5",{"_index":289,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["fals",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fff",{"_index":299,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"license.html":{}}}],["fit",{"_index":666,"title":{},"body":{"license.html":{}}}],["flex",{"_index":306,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["flow",{"_index":307,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["follow",{"_index":617,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["fontcolor",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["fontsiz",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["formsmodul",{"_index":534,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["framework",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["free",{"_index":634,"title":{},"body":{"license.html":{}}}],["function",{"_index":175,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/PropertyItemMeta.html":{}}}],["furnish",{"_index":654,"title":{},"body":{"license.html":{}}}],["g",{"_index":382,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["g.items.foreach(o",{"_index":385,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["g.name",{"_index":383,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["get",{"_index":591,"title":{"index.html":{},"license.html":{}},"body":{}}],["getcomponenttyp",{"_index":459,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["getcomponenttype(typ",{"_index":461,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["getdata",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["getmeta",{"_index":449,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["getopt",{"_index":452,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["gettempl",{"_index":429,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["gettemplate(typ",{"_index":346,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["getvalu",{"_index":182,"title":{},"body":{"components/CustomComponent.html":{},"classes/PropertyValue.html":{}}}],["give",{"_index":599,"title":{},"body":{"index.html":{}}}],["grant",{"_index":633,"title":{},"body":{"license.html":{}}}],["grid",{"_index":260,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["grid'},{'nam",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["grid.compon",{"_index":488,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["grid.component.t",{"_index":240,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"coverage.html":{}}}],["grid.component.ts:144",{"_index":446,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:145",{"_index":445,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:148",{"_index":436,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:151",{"_index":435,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:154",{"_index":437,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:158",{"_index":432,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:161",{"_index":433,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:166",{"_index":450,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:171",{"_index":434,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:178",{"_index":453,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:182",{"_index":448,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:185",{"_index":447,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:186",{"_index":431,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:191",{"_index":442,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:195",{"_index":441,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:205",{"_index":439,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:213",{"_index":443,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:217",{"_index":444,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:221",{"_index":438,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:225",{"_index":440,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:269",{"_index":515,"title":{},"body":{"classes/PropertyValue.html":{}}}],["grid.component.ts:273",{"_index":516,"title":{},"body":{"classes/PropertyValue.html":{}}}],["grid.component.ts:275",{"_index":513,"title":{},"body":{"classes/PropertyValue.html":{}}}],["grid.component.ts:277",{"_index":514,"title":{},"body":{"classes/PropertyValue.html":{}}}],["grid.component.ts:282",{"_index":245,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:283",{"_index":243,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:285",{"_index":246,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid/controls/simpl",{"_index":535,"title":{},"body":{"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"coverage.html":{}}}],["grid/custom.component.t",{"_index":142,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["grid/custom.component.ts:20",{"_index":176,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:21",{"_index":177,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:23",{"_index":181,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:24",{"_index":178,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:26",{"_index":162,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:29",{"_index":161,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:32",{"_index":163,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:38",{"_index":183,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:43",{"_index":159,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:50",{"_index":171,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:54",{"_index":173,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:59",{"_index":165,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:76",{"_index":170,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:90",{"_index":167,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/index",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{}}}],["grid/index.t",{"_index":482,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["grid/properti",{"_index":239,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["group.items.push(v",{"_index":376,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["groups.find(o",{"_index":371,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["groups.foreach(o",{"_index":377,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["groups.push(group",{"_index":375,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["header",{"_index":288,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["height",{"_index":314,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["here",{"_index":610,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":632,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["hidden/vis",{"_index":404,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["hint",{"_index":399,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["holder",{"_index":671,"title":{},"body":{"license.html":{}}}],["html",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["icustomdynamiccompon",{"_index":41,"title":{"interfaces/ICustomDynamicComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"index.html":{}}}],["identifi",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["impli",{"_index":664,"title":{},"body":{"license.html":{}}}],["import",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["includ",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"license.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["inform",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["init",{"_index":405,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{}}}],["initcompon",{"_index":152,"title":{},"body":{"components/CustomComponent.html":{}}}],["initcomponent(compon",{"_index":168,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["initmeta",{"_index":360,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["initst",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["inject",{"_index":455,"title":{"injectables/PropertyGridControlProvider.html":{}},"body":{"injectables/PropertyGridControlProvider.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":155,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["input('propertytyp",{"_index":511,"title":{},"body":{"directives/PropertyItemTemplateDirective.html":{}}}],["interfac",{"_index":223,"title":{"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{}},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["intern",{"_index":284,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["internalgroup",{"_index":238,"title":{"classes/InternalGroup.html":{}},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"coverage.html":{}}}],["internalgroup(undefin",{"_index":364,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["internalgroup(v.group",{"_index":374,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["internalpropertyitemmeta",{"_index":244,"title":{"interfaces/InternalPropertyItemMeta.html":{}},"body":{"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["it'",{"_index":613,"title":{},"body":{"index.html":{}}}],["item",{"_index":241,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["item.nam",{"_index":262,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["item.templ",{"_index":345,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["jqueri",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["json.stringify(this.stud",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["key",{"_index":394,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":662,"title":{},"body":{"license.html":{}}}],["label",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["label.compon",{"_index":492,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["label.component.t",{"_index":545,"title":{},"body":{"components/SimpleLabelComponent.html":{},"coverage.html":{}}}],["label.component.ts:10",{"_index":547,"title":{},"body":{"components/SimpleLabelComponent.html":{}}}],["label.component.ts:9",{"_index":546,"title":{},"body":{"components/SimpleLabelComponent.html":{}}}],["labelwidth",{"_index":327,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["left",{"_index":290,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["legend",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"overview.html":{}}}],["liabil",{"_index":675,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":672,"title":{},"body":{"license.html":{}}}],["licens",{"_index":626,"title":{"license.html":{}},"body":{"license.html":{}}}],["lili",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["limit",{"_index":644,"title":{},"body":{"license.html":{}}}],["list",{"_index":621,"title":{},"body":{"index.html":{}}}],["m",{"_index":414,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["map",{"_index":465,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["margin",{"_index":285,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["match",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matcheckbox",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{}}}],["matcheckboxmodul",{"_index":530,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["matdatepick",{"_index":523,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["matdatepickermodul",{"_index":532,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["matslid",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{}}}],["matslidermodul",{"_index":531,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["matslidetoggl",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{}}}],["matslidetogglemodul",{"_index":533,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["merchant",{"_index":665,"title":{},"body":{"license.html":{}}}],["merg",{"_index":647,"title":{},"body":{"license.html":{}}}],["meta",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["meta(v",{"_index":329,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["meta({nam",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["meta.hasownproperty(i",{"_index":365,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["meta.t",{"_index":392,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meta.valueconvert",{"_index":358,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["meta.valueconvert(v",{"_index":359,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["meta[i",{"_index":367,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"directives/PropertyItemTemplateDirective.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["method",{"_index":149,"title":{},"body":{"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"components/SimpleSelectComponent.html":{}}}],["miscellan",{"_index":685,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":627,"title":{},"body":{"license.html":{}}}],["modernizr",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["modifi",{"_index":646,"title":{},"body":{"license.html":{}}}],["modul",{"_index":471,"title":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"modules.html":{}},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["name/label",{"_index":409,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["new",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngaftercontentinit",{"_index":340,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["ngmodul",{"_index":487,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{}}}],["ngoninit",{"_index":153,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ngx",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["ngxpropertygrid",{"_index":593,"title":{},"body":{"index.html":{}}}],["none",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["noninfring",{"_index":669,"title":{},"body":{"license.html":{}}}],["noopanimationsmodul",{"_index":529,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["notic",{"_index":657,"title":{},"body":{"license.html":{}}}],["null",{"_index":349,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["number",{"_index":229,"title":{},"body":{"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["o",{"_index":390,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["o.items.sort((a",{"_index":378,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["o.nam",{"_index":372,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["object",{"_index":361,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["object.assign(component.inst",{"_index":221,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["object:{{data",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["obtain",{"_index":637,"title":{},"body":{"license.html":{}}}],["omit",{"_index":403,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["oninit",{"_index":143,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["onlin",{"_index":605,"title":{},"body":{"index.html":{}}}],["onvaluechang",{"_index":154,"title":{},"body":{"components/CustomComponent.html":{}}}],["onvaluechange(",{"_index":172,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["option",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["optionlabel",{"_index":550,"title":{},"body":{"components/SimpleSelectComponent.html":{}}}],["optionlabel(opt",{"_index":549,"title":{},"body":{"components/SimpleSelectComponent.html":{}}}],["optionlabel(v",{"_index":552,"title":{},"body":{"components/SimpleSelectComponent.html":{}}}],["options(v",{"_index":332,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["optionvalu",{"_index":551,"title":{},"body":{"components/SimpleSelectComponent.html":{}}}],["optionvalue(v",{"_index":554,"title":{},"body":{"components/SimpleSelectComponent.html":{}}}],["order",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["otherwis",{"_index":679,"title":{},"body":{"license.html":{}}}],["out",{"_index":481,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":156,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["overflow",{"_index":315,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["overview",{"_index":684,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":590,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":271,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["page",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["paramet",{"_index":160,"title":{},"body":{"components/CustomComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"components/SimpleSelectComponent.html":{}}}],["parseint",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["part",{"_index":608,"title":{},"body":{"index.html":{}}}],["particular",{"_index":667,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":631,"title":{},"body":{"license.html":{}}}],["permit",{"_index":653,"title":{},"body":{"license.html":{}}}],["person",{"_index":636,"title":{},"body":{"license.html":{}}}],["picker.compon",{"_index":495,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["picker.component.t",{"_index":542,"title":{},"body":{"components/SimpleDateComponent.html":{},"coverage.html":{}}}],["picker.component.ts:10",{"_index":544,"title":{},"body":{"components/SimpleDateComponent.html":{}}}],["picker.component.ts:9",{"_index":543,"title":{},"body":{"components/SimpleDateComponent.html":{}}}],["picker.ompon",{"_index":491,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["picker.omponent.t",{"_index":539,"title":{},"body":{"components/SimpleColorComponent.html":{},"coverage.html":{}}}],["picker.omponent.ts:10",{"_index":541,"title":{},"body":{"components/SimpleColorComponent.html":{}}}],["picker.omponent.ts:9",{"_index":540,"title":{},"body":{"components/SimpleColorComponent.html":{}}}],["play",{"_index":604,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["pojo",{"_index":596,"title":{},"body":{"index.html":{}}}],["portion",{"_index":660,"title":{},"body":{"license.html":{}}}],["prefer",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["privat",{"_index":144,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["pro",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["product",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properti",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["propertygridcompon",{"_index":123,"title":{"components/PropertyGridComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["propertygridcontrolprovid",{"_index":456,"title":{"injectables/PropertyGridControlProvider.html":{}},"body":{"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["propertygridmodul",{"_index":472,"title":{"modules/PropertyGridModule.html":{}},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"modules.html":{},"overview.html":{}}}],["propertyitemmeta",{"_index":393,"title":{"interfaces/PropertyItemMeta.html":{}},"body":{"interfaces/InternalPropertyItemMeta.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propertyitemtemplatedirect",{"_index":136,"title":{"directives/PropertyItemTemplateDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["propertytyp",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"directives/PropertyItemTemplateDirective.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["propertyvalu",{"_index":351,"title":{"classes/PropertyValue.html":{}},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{},"coverage.html":{}}}],["propertyvalue(meta",{"_index":350,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["propertyvalue(this.opt",{"_index":352,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["propertyvalueaccess",{"_index":224,"title":{"interfaces/PropertyValueAccess.html":{}},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["proprti",{"_index":616,"title":{},"body":{"index.html":{}}}],["provid",{"_index":396,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"modules/ShowcaseModule.html":{},"license.html":{},"overview.html":{}}}],["provider.t",{"_index":457,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["provider.ts:12",{"_index":462,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["provider.ts:6",{"_index":466,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["provider.ts:7",{"_index":467,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["provider.ts:8",{"_index":464,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["public",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{}}}],["publish",{"_index":648,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":668,"title":{},"body":{"license.html":{}}}],["querylist",{"_index":251,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["read",{"_index":190,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["readonli",{"_index":145,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["regist",{"_index":460,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["register(typ",{"_index":463,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["requir",{"_index":588,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":480,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"overview.html":{}}}],["restrict",{"_index":643,"title":{},"body":{"license.html":{}}}],["result",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["rgba(0",{"_index":302,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["rgba(10",{"_index":294,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["right",{"_index":645,"title":{},"body":{"license.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["root'},{'nam",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["row",{"_index":308,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["row.nam",{"_index":261,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["rows.push(g",{"_index":384,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["rows.push(o",{"_index":386,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["schema",{"_index":524,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["see",{"_index":609,"title":{},"body":{"index.html":{}}}],["seen",{"_index":611,"title":{},"body":{"index.html":{}}}],["select",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["select.compon",{"_index":494,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["select.component.t",{"_index":548,"title":{},"body":{"components/SimpleSelectComponent.html":{},"coverage.html":{}}}],["select.component.ts:13",{"_index":557,"title":{},"body":{"components/SimpleSelectComponent.html":{}}}],["select.component.ts:14",{"_index":558,"title":{},"body":{"components/SimpleSelectComponent.html":{}}}],["select.component.ts:15",{"_index":556,"title":{},"body":{"components/SimpleSelectComponent.html":{}}}],["select.component.ts:17",{"_index":553,"title":{},"body":{"components/SimpleSelectComponent.html":{}}}],["select.component.ts:30",{"_index":555,"title":{},"body":{"components/SimpleSelectComponent.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["sell",{"_index":652,"title":{},"body":{"license.html":{}}}],["set",{"_index":191,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["setmeta(v",{"_index":451,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["setoptions(v",{"_index":454,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["setvalue(v",{"_index":184,"title":{},"body":{"components/CustomComponent.html":{},"classes/PropertyValue.html":{}}}],["shadow",{"_index":292,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["shall",{"_index":658,"title":{},"body":{"license.html":{}}}],["showcasemodul",{"_index":517,"title":{"modules/ShowcaseModule.html":{}},"body":{"modules/ShowcaseModule.html":{},"modules.html":{},"overview.html":{}}}],["simpl",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["simplecheckboxcompon",{"_index":126,"title":{"components/SimpleCheckboxComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simplecolorcompon",{"_index":129,"title":{"components/SimpleColorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simpledatecompon",{"_index":130,"title":{"components/SimpleDateComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simplelabelcompon",{"_index":131,"title":{"components/SimpleLabelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simpleselectcompon",{"_index":133,"title":{"components/SimpleSelectComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simpletextcompon",{"_index":135,"title":{"components/SimpleTextComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simpletexteditorcompon",{"_index":53,"title":{"components/SimpleTextEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/PropertyGridComponent.html":{},"modules/ShowcaseModule.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["size",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["small",{"_index":594,"title":{},"body":{"index.html":{}}}],["softwar",{"_index":639,"title":{},"body":{"license.html":{}}}],["solid",{"_index":264,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["space",{"_index":268,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["span",{"_index":400,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["spec\\.t",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../properti",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/components/properti",{"_index":141,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/showcase/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{}}}],["src/app/showcase/app.component.ts:11",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/showcase/app.component.ts:16",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/showcase/app.component.ts:20",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/showcase/app.component.ts:28",{"_index":566,"title":{},"body":{"components/SimpleTextEditorComponent.html":{}}}],["src/app/showcase/app.component.ts:29",{"_index":567,"title":{},"body":{"components/SimpleTextEditorComponent.html":{}}}],["src/app/showcase/app.component.ts:37",{"_index":227,"title":{},"body":{"classes/ExampleEditorOptions.html":{}}}],["src/app/showcase/app.component.ts:40",{"_index":230,"title":{},"body":{"classes/ExampleEditorOptions.html":{}}}],["src/app/showcase/app.component.ts:43",{"_index":228,"title":{},"body":{"classes/ExampleEditorOptions.html":{}}}],["src/app/showcase/app.component.ts:46",{"_index":232,"title":{},"body":{"classes/ExampleEditorOptions.html":{}}}],["src/app/showcase/app.component.ts:54",{"_index":233,"title":{},"body":{"classes/ExampleEditorOptions.html":{}}}],["src/app/showcase/app.component.ts:62",{"_index":231,"title":{},"body":{"classes/ExampleEditorOptions.html":{}}}],["src/app/showcase/app.component.ts:69",{"_index":237,"title":{},"body":{"classes/ExampleStudentOptions.html":{}}}],["src/app/showcase/app.component.ts:72",{"_index":236,"title":{},"body":{"classes/ExampleStudentOptions.html":{}}}],["src/app/showcase/app.component.ts:75",{"_index":234,"title":{},"body":{"classes/ExampleStudentOptions.html":{}}}],["src/app/showcase/app.component.ts:78",{"_index":235,"title":{},"body":{"classes/ExampleStudentOptions.html":{}}}],["src/app/showcase/showcase.module.t",{"_index":522,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["src/environments/environment.prod.t",{"_index":583,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":585,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":586,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":592,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":254,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{}}}],["state('hidden",{"_index":313,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["state('vis",{"_index":316,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["statement",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["style",{"_index":255,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["styleurl",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["subitem",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{}}}],["subitems.push(v",{"_index":370,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["subject",{"_index":655,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":650,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":659,"title":{},"body":{"license.html":{}}}],["support",{"_index":618,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":682,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":413,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["tabl",{"_index":267,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":415,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["target.__meta__",{"_index":417,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["target.__meta__[key",{"_index":427,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["template.direct",{"_index":259,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{}}}],["template.directive.t",{"_index":507,"title":{},"body":{"directives/PropertyItemTemplateDirective.html":{},"coverage.html":{}}}],["template.directive.ts:7",{"_index":509,"title":{},"body":{"directives/PropertyItemTemplateDirective.html":{}}}],["template.directive.ts:9",{"_index":510,"title":{},"body":{"directives/PropertyItemTemplateDirective.html":{}}}],["templatemap",{"_index":326,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["templateref",{"_index":252,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["text",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["text.compon",{"_index":493,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["text.component.t",{"_index":563,"title":{},"body":{"components/SimpleTextComponent.html":{},"coverage.html":{}}}],["text.component.ts:10",{"_index":565,"title":{},"body":{"components/SimpleTextComponent.html":{}}}],["text.component.ts:9",{"_index":564,"title":{},"body":{"components/SimpleTextComponent.html":{}}}],["textarea",{"_index":410,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["textbox",{"_index":619,"title":{},"body":{"index.html":{}}}],["that'",{"_index":602,"title":{},"body":{"index.html":{}}}],["this._controlvaluechangefn",{"_index":197,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this._map.get(typ",{"_index":470,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["this._map.set(typ",{"_index":468,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["this._meta",{"_index":330,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this._opt",{"_index":333,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this._valu",{"_index":193,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.buildcompon",{"_index":199,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.compon",{"_index":194,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.component.destroy",{"_index":222,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.component.instance.valu",{"_index":195,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(this.componenttyp",{"_index":207,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.componentopt",{"_index":220,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.components.push(componenttyp",{"_index":469,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["this.componenttyp",{"_index":201,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.destroycompon",{"_index":203,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.entry.clear",{"_index":204,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.entry.createcomponent(componentfactori",{"_index":208,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.initcomponent(compon",{"_index":210,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.initmeta",{"_index":331,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.meta",{"_index":335,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.meta.valueconvert",{"_index":388,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.meta.valueconvert(v",{"_index":389,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.o[this.meta.key",{"_index":387,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.onvaluechange(valu",{"_index":198,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.options[meta.key",{"_index":357,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.row",{"_index":362,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.stat",{"_index":354,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.subitem",{"_index":363,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap",{"_index":342,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap['default",{"_index":348,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap[item.nam",{"_index":344,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap[typ",{"_index":347,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.templates.foreach((item",{"_index":343,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.templates.length",{"_index":341,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.valuechange.emit(",{"_index":200,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["time",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["toggl",{"_index":353,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["tooltip",{"_index":398,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["top",{"_index":269,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["tort",{"_index":678,"title":{},"body":{"license.html":{}}}],["transit",{"_index":256,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["transition('vis",{"_index":317,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["tri",{"_index":202,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["trigger",{"_index":257,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["trigger('internalpropertygrid",{"_index":312,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["true",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["true/fals",{"_index":406,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["tvalu",{"_index":226,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["type",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":559,"title":{},"body":{"components/SimpleSelectComponent.html":{}}}],["unedit",{"_index":624,"title":{},"body":{"index.html":{}}}],["unset",{"_index":311,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["us",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"license.html":{}}}],["usag",{"_index":606,"title":{},"body":{"index.html":{}}}],["user",{"_index":600,"title":{},"body":{"index.html":{}}}],["usevalu",{"_index":506,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["v",{"_index":185,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleSelectComponent.html":{}}}],["v.__meta__",{"_index":334,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["v.group",{"_index":373,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["v.hidden",{"_index":368,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["v.label",{"_index":561,"title":{},"body":{"components/SimpleSelectComponent.html":{}}}],["v.text",{"_index":560,"title":{},"body":{"components/SimpleSelectComponent.html":{}}}],["v.type",{"_index":369,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["v.valu",{"_index":562,"title":{},"body":{"components/SimpleSelectComponent.html":{}}}],["val",{"_index":356,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["valu",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value(v",{"_index":192,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["valuechang",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["valueconvert",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["var",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleCheckboxComponent.html":{},"components/SimpleColorComponent.html":{},"components/SimpleDateComponent.html":{},"components/SimpleLabelComponent.html":{},"components/SimpleSelectComponent.html":{},"components/SimpleTextComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["variabl",{"_index":577,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["view/edit",{"_index":595,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":180,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["viewchild('contain",{"_index":189,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["viewcontainerref",{"_index":186,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["visibl",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{}}}],["void",{"_index":166,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["want",{"_index":598,"title":{},"body":{"index.html":{}}}],["warranti",{"_index":661,"title":{},"body":{"license.html":{}}}],["webkit",{"_index":297,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["weight",{"_index":275,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["whether",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"license.html":{}}}],["white",{"_index":274,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["width",{"_index":287,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["without",{"_index":642,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":309,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["xmeta",{"_index":416,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["xmeta.componenttyp",{"_index":418,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["xmeta.initst",{"_index":424,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["xmeta.key",{"_index":426,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["xmeta.ord",{"_index":425,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["xmeta.typ",{"_index":419,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["xmeta.valueconvert",{"_index":423,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["yish",{"_index":630,"title":{},"body":{"license.html":{}}}],["zoom",{"_index":479,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/showcase/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                student\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/showcase/app.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            student\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        student:     ExampleStudentOptions\n\n                    \n                \n                    \n                        \n                            Type :     ExampleStudentOptions\n\n                        \n                    \n                    \n                        \n                            Default value : new ExampleStudentOptions()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        text:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/showcase/app.component.ts:16\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, EventEmitter} from '@angular/core';\nimport {meta, ICustomDynamicComponent} from '../components/property-grid/index';\nimport {MatCheckbox, MatSlider, MatSlideToggle} from '@angular/material';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    public student: ExampleStudentOptions = new ExampleStudentOptions();\n\n    constructor() {\n    }\n\n    public get data(): string {\n        return JSON.stringify(this.student);\n    }\n\n    text: string;\n}\n\n@Component({\n    selector: 'app-text-editor',\n    template: ``\n})\nexport class SimpleTextEditorComponent implements ICustomDynamicComponent {\n    value: string;\n    valueChange: EventEmitter = new EventEmitter();\n}\n\nexport class ExampleEditorOptions {\n    @meta({\n        name: 'Font', description: 'The font editor to use', colSpan2: false,\n        componentType: SimpleTextEditorComponent, group: 'Editor', hidden: false\n    })\n    font = 'Source Code Pro';\n\n    @meta({name: 'Font size', group: 'Editor', valueConvert: parseInt, type: 'fontSize'})\n    fontSize = 14;\n\n    @meta({name: 'Font color', group: 'Editor', type: 'color'})\n    fontColor = '#51f41c';\n\n    @meta({name: 'jQuery', group: 'Plugins', componentType: MatCheckbox})\n    jQuery = true;\n\n    @meta({\n        name: 'modernizr',\n        description: 'Whether or not to include modernizr on the page',\n        group: 'Plugins',\n        componentType: MatSlideToggle\n    })\n    modernizr = false;\n\n    @meta({\n        name: 'Framework',\n        description: 'Whether to include any additional framework',\n        type: 'options',\n        componentOptions: {options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]}\n    })\n    framework = 'None';\n\n}\n\nexport class ExampleStudentOptions {\n\n    @meta({name: 'Birth', group: 'Basic Information', type: 'date', order: 4})\n    time = '2018-05-08';\n\n    @meta({name: 'Name', group: 'Basic Information', type: 'text', order: 1})\n    name = 'Lily';\n\n    @meta({name: 'Age', group: 'Basic Information', valueConvert: parseInt, type: 'text', order: 2})\n    age = 19;\n\n    @meta({name: 'Editor Preference', type: 'subItems', initState: 'visible'})\n    editor: ExampleEditorOptions = new ExampleEditorOptions();\n}\n\n    \n\n    \n        \n\nThe Object:{{data}}\n\n\n    \n       \n    \n    \n        \n        字体大小-->\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'The Object:{{data}}                                   字体大小-->    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomComponent', 'selector': 'custom-component'},{'name': 'PropertyGridComponent', 'selector': 'ngx-property-grid'},{'name': 'SimpleCheckboxComponent', 'selector': 'simple-checkbox-component'},{'name': 'SimpleColorComponent', 'selector': 'simple-color-component'},{'name': 'SimpleDateComponent', 'selector': 'simple-date-component'},{'name': 'SimpleLabelComponent', 'selector': 'simple-label-component'},{'name': 'SimpleSelectComponent', 'selector': 'simple-select-component'},{'name': 'SimpleTextComponent', 'selector': 'simple-text-component'},{'name': 'SimpleTextEditorComponent', 'selector': 'app-text-editor'}];\n    var DIRECTIVES = [{'name': 'PropertyItemTemplateDirective', 'selector': '[propertyType]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CustomComponent.html":{"url":"components/CustomComponent.html","title":"component - CustomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CustomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/property-grid/custom.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ICustomDynamicComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                custom-component\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _controlValueChangeFn\n                            \n                            \n                                    Private\n                                _value\n                            \n                            \n                                    Private\n                                component\n                            \n                            \n                                entry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildComponent\n                            \n                            \n                                    Private\n                                destroyComponent\n                            \n                            \n                                    Private\n                                initComponent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                onValueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                componentOptions\n                            \n                            \n                                componentType\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/property-grid/custom.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        componentOptions\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        componentType\n                    \n                    \n                            \n                            Type:    Type\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:32\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:43\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            buildComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildComponent()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroyComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        destroyComponent()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:90\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initComponent(component: ComponentRef)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    ComponentRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onValueChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onValueChange(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _controlValueChangeFn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _controlValueChangeFn:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _value:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            component\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        component:     ComponentRef>\n\n                    \n                \n                    \n                        \n                            Type :     ComponentRef>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entry:     \n\n                    \n                \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/custom.component.ts:38\n                                \n                            \n\n                \n                    \n                        setvalue(v: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/custom.component.ts:32\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    Type,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\n\n@Component({\n    selector: 'custom-component',\n    template: '',\n})\nexport class CustomComponent implements OnInit, ICustomDynamicComponent {\n    private readonly _controlValueChangeFn: (value: any) => void;\n    private _value: any;\n\n    @ViewChild('container', { read: ViewContainerRef }) entry;\n    private component: ComponentRef>;\n\n    @Input() componentType: Type;\n\n    @Input()\n    componentOptions: any;\n\n    @Input()\n    set value(v: any) {\n        this._value = v;\n        if (this.component) {\n            this.component.instance.value =  v;\n        }\n    }\n    get value(): any {\n        return this._value;\n    }\n\n    @Output()\n    readonly valueChange: EventEmitter = new EventEmitter();\n\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n        this._controlValueChangeFn = (value: any) => this.onValueChange(value);\n    }\n\n    ngOnInit() {\n        this.buildComponent();\n    }\n\n    private onValueChange(e: any): void {\n        this._value = e;\n        this.valueChange.emit(e);\n    }\n\n    private buildComponent(): void {\n        if (!this.componentType) {\n            return;\n        }\n        try {\n            this.destroyComponent();\n            // this.entry.clear();\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\n            const component = this.entry.createComponent(componentFactory, 0);\n            this.initComponent(component);\n            this.component = component;\n        } catch (e) {\n            console.error('load component error.');\n            console.error(e);\n        }\n    }\n\n    private initComponent(component: ComponentRef) {\n        component.instance.value = this._value;\n        if (component.instance.registerOnChange) {\n            component.instance.registerOnChange(this._controlValueChangeFn);\n        }\n        if (component.instance.valueChange) {\n            component.instance.valueChange.subscribe(this._controlValueChangeFn);\n        }\n\n        if (this.componentOptions) {\n            Object.assign(component.instance, this.componentOptions);\n        }\n    }\n\n    private destroyComponent(): void {\n        if (this.component) {\n            this.component.destroy();\n        }\n    }\n}\n\nexport interface PropertyValueAccess extends ControlValueAccessor, ICustomDynamicComponent {\n}\n\nexport interface ICustomDynamicComponent {\n    value: TValue;\n    valueChange: EventEmitter;\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomComponent', 'selector': 'custom-component'},{'name': 'PropertyGridComponent', 'selector': 'ngx-property-grid'},{'name': 'SimpleCheckboxComponent', 'selector': 'simple-checkbox-component'},{'name': 'SimpleColorComponent', 'selector': 'simple-color-component'},{'name': 'SimpleDateComponent', 'selector': 'simple-date-component'},{'name': 'SimpleLabelComponent', 'selector': 'simple-label-component'},{'name': 'SimpleSelectComponent', 'selector': 'simple-select-component'},{'name': 'SimpleTextComponent', 'selector': 'simple-text-component'},{'name': 'SimpleTextEditorComponent', 'selector': 'app-text-editor'}];\n    var DIRECTIVES = [{'name': 'PropertyItemTemplateDirective', 'selector': '[propertyType]'}];\n    var ACTUAL_COMPONENT = {'name': 'CustomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExampleEditorOptions.html":{"url":"classes/ExampleEditorOptions.html","title":"class - ExampleEditorOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExampleEditorOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/showcase/app.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                font\n                            \n                            \n                                fontColor\n                            \n                            \n                                fontSize\n                            \n                            \n                                framework\n                            \n                            \n                                jQuery\n                            \n                            \n                                modernizr\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            font\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        font:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Source Code Pro'\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fontColor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fontColor:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '#51f41c'\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fontSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fontSize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 14\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            framework\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        framework:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'None'\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        jQuery:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modernizr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modernizr:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Component, EventEmitter} from '@angular/core';\nimport {meta, ICustomDynamicComponent} from '../components/property-grid/index';\nimport {MatCheckbox, MatSlider, MatSlideToggle} from '@angular/material';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    public student: ExampleStudentOptions = new ExampleStudentOptions();\n\n    constructor() {\n    }\n\n    public get data(): string {\n        return JSON.stringify(this.student);\n    }\n\n    text: string;\n}\n\n@Component({\n    selector: 'app-text-editor',\n    template: ``\n})\nexport class SimpleTextEditorComponent implements ICustomDynamicComponent {\n    value: string;\n    valueChange: EventEmitter = new EventEmitter();\n}\n\nexport class ExampleEditorOptions {\n    @meta({\n        name: 'Font', description: 'The font editor to use', colSpan2: false,\n        componentType: SimpleTextEditorComponent, group: 'Editor', hidden: false\n    })\n    font = 'Source Code Pro';\n\n    @meta({name: 'Font size', group: 'Editor', valueConvert: parseInt, type: 'fontSize'})\n    fontSize = 14;\n\n    @meta({name: 'Font color', group: 'Editor', type: 'color'})\n    fontColor = '#51f41c';\n\n    @meta({name: 'jQuery', group: 'Plugins', componentType: MatCheckbox})\n    jQuery = true;\n\n    @meta({\n        name: 'modernizr',\n        description: 'Whether or not to include modernizr on the page',\n        group: 'Plugins',\n        componentType: MatSlideToggle\n    })\n    modernizr = false;\n\n    @meta({\n        name: 'Framework',\n        description: 'Whether to include any additional framework',\n        type: 'options',\n        componentOptions: {options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]}\n    })\n    framework = 'None';\n\n}\n\nexport class ExampleStudentOptions {\n\n    @meta({name: 'Birth', group: 'Basic Information', type: 'date', order: 4})\n    time = '2018-05-08';\n\n    @meta({name: 'Name', group: 'Basic Information', type: 'text', order: 1})\n    name = 'Lily';\n\n    @meta({name: 'Age', group: 'Basic Information', valueConvert: parseInt, type: 'text', order: 2})\n    age = 19;\n\n    @meta({name: 'Editor Preference', type: 'subItems', initState: 'visible'})\n    editor: ExampleEditorOptions = new ExampleEditorOptions();\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExampleStudentOptions.html":{"url":"classes/ExampleStudentOptions.html","title":"class - ExampleStudentOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExampleStudentOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/showcase/app.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                editor\n                            \n                            \n                                name\n                            \n                            \n                                time\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        age:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 19\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     ExampleEditorOptions\n\n                    \n                \n                    \n                        \n                            Type :     ExampleEditorOptions\n\n                        \n                    \n                    \n                        \n                            Default value : new ExampleEditorOptions()\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Lily'\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        time:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '2018-05-08'\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:69\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Component, EventEmitter} from '@angular/core';\nimport {meta, ICustomDynamicComponent} from '../components/property-grid/index';\nimport {MatCheckbox, MatSlider, MatSlideToggle} from '@angular/material';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    public student: ExampleStudentOptions = new ExampleStudentOptions();\n\n    constructor() {\n    }\n\n    public get data(): string {\n        return JSON.stringify(this.student);\n    }\n\n    text: string;\n}\n\n@Component({\n    selector: 'app-text-editor',\n    template: ``\n})\nexport class SimpleTextEditorComponent implements ICustomDynamicComponent {\n    value: string;\n    valueChange: EventEmitter = new EventEmitter();\n}\n\nexport class ExampleEditorOptions {\n    @meta({\n        name: 'Font', description: 'The font editor to use', colSpan2: false,\n        componentType: SimpleTextEditorComponent, group: 'Editor', hidden: false\n    })\n    font = 'Source Code Pro';\n\n    @meta({name: 'Font size', group: 'Editor', valueConvert: parseInt, type: 'fontSize'})\n    fontSize = 14;\n\n    @meta({name: 'Font color', group: 'Editor', type: 'color'})\n    fontColor = '#51f41c';\n\n    @meta({name: 'jQuery', group: 'Plugins', componentType: MatCheckbox})\n    jQuery = true;\n\n    @meta({\n        name: 'modernizr',\n        description: 'Whether or not to include modernizr on the page',\n        group: 'Plugins',\n        componentType: MatSlideToggle\n    })\n    modernizr = false;\n\n    @meta({\n        name: 'Framework',\n        description: 'Whether to include any additional framework',\n        type: 'options',\n        componentOptions: {options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]}\n    })\n    framework = 'None';\n\n}\n\nexport class ExampleStudentOptions {\n\n    @meta({name: 'Birth', group: 'Basic Information', type: 'date', order: 4})\n    time = '2018-05-08';\n\n    @meta({name: 'Name', group: 'Basic Information', type: 'text', order: 1})\n    name = 'Lily';\n\n    @meta({name: 'Age', group: 'Basic Information', valueConvert: parseInt, type: 'text', order: 2})\n    age = 19;\n\n    @meta({name: 'Editor Preference', type: 'subItems', initState: 'visible'})\n    editor: ExampleEditorOptions = new ExampleEditorOptions();\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICustomDynamicComponent.html":{"url":"interfaces/ICustomDynamicComponent.html","title":"interface - ICustomDynamicComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICustomDynamicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/property-grid/custom.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        valueChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     TValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueChange\n                                    \n                                \n                                \n                                    \n                                        valueChange:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    Type,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\n\n@Component({\n    selector: 'custom-component',\n    template: '',\n})\nexport class CustomComponent implements OnInit, ICustomDynamicComponent {\n    private readonly _controlValueChangeFn: (value: any) => void;\n    private _value: any;\n\n    @ViewChild('container', { read: ViewContainerRef }) entry;\n    private component: ComponentRef>;\n\n    @Input() componentType: Type;\n\n    @Input()\n    componentOptions: any;\n\n    @Input()\n    set value(v: any) {\n        this._value = v;\n        if (this.component) {\n            this.component.instance.value =  v;\n        }\n    }\n    get value(): any {\n        return this._value;\n    }\n\n    @Output()\n    readonly valueChange: EventEmitter = new EventEmitter();\n\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n        this._controlValueChangeFn = (value: any) => this.onValueChange(value);\n    }\n\n    ngOnInit() {\n        this.buildComponent();\n    }\n\n    private onValueChange(e: any): void {\n        this._value = e;\n        this.valueChange.emit(e);\n    }\n\n    private buildComponent(): void {\n        if (!this.componentType) {\n            return;\n        }\n        try {\n            this.destroyComponent();\n            // this.entry.clear();\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\n            const component = this.entry.createComponent(componentFactory, 0);\n            this.initComponent(component);\n            this.component = component;\n        } catch (e) {\n            console.error('load component error.');\n            console.error(e);\n        }\n    }\n\n    private initComponent(component: ComponentRef) {\n        component.instance.value = this._value;\n        if (component.instance.registerOnChange) {\n            component.instance.registerOnChange(this._controlValueChangeFn);\n        }\n        if (component.instance.valueChange) {\n            component.instance.valueChange.subscribe(this._controlValueChangeFn);\n        }\n\n        if (this.componentOptions) {\n            Object.assign(component.instance, this.componentOptions);\n        }\n    }\n\n    private destroyComponent(): void {\n        if (this.component) {\n            this.component.destroy();\n        }\n    }\n}\n\nexport interface PropertyValueAccess extends ControlValueAccessor, ICustomDynamicComponent {\n}\n\nexport interface ICustomDynamicComponent {\n    value: TValue;\n    valueChange: EventEmitter;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InternalGroup.html":{"url":"classes/InternalGroup.html","title":"class - InternalGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  InternalGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/property-grid/property-grid.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                items\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/property-grid/property-grid.component.ts:283\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     InternalPropertyItemMeta[]\n\n                    \n                \n                    \n                        \n                            Type :     InternalPropertyItemMeta[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:282\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:285\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'group'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:283\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    Input,\n    OnInit,\n    QueryList,\n    TemplateRef\n} from '@angular/core';\nimport {InternalPropertyItemMeta} from './property-item-meta';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {PropertyItemTemplateDirective} from './property-item-template.directive';\n\n@Component({\n    selector: 'ngx-property-grid',\n    template: `\n        \n            \n                \n                    \n                    \n\n                        -->\n                        {{row.name}}\n                        \n                            {{row.name}}\n                            [?]\n                        \n                        \n                            \n                            \n                            \n                            \n                        \n                    \n                    \n                \n            \n\n            \n                {{item.name}}\n                \n                \n            \n        \n    `,\n    styles: [\n            `\n            .property-grid {\n                /*border: solid 1px #95B8E7;*/\n            }\n\n            .property-grid-table {\n                border-spacing: 0;\n                border-top: 1px solid #dbdbdb;\n                padding: 5px\n            }\n\n            .property-grid-group {\n                background-color: white;\n                font-weight: bold;\n                color: #616161;\n                padding-top: 8px;\n                padding-bottom: 5px;\n            }\n\n            .property-grid-label, .property-grid-control {\n                border: dotted 1px #ccc;\n                padding: 2px 5px;\n            }\n\n            .internal-property-grid {\n                margin-top: 12px;\n            }\n\n            .internal-property-grid .property-grid {\n                border-width: 0;\n            }\n\n            .internal-property-grid .property-grid-header {\n                margin-bottom: 5px;\n                background-color: #f5f5f5;\n                padding-bottom: 5px;\n                padding-top: 5px;\n                padding-left: 5px;\n                box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n                -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n            }\n\n            .internal-property-grid .property-grid-table {\n                border-width: 0;\n                /*border-top: 1px solid #dbdbdb;*/\n            }\n\n            .card {\n                background-color: #fff;\n                box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n                display: flex;\n                flex-flow: row wrap;\n                /*margin: 5px 20px;*/\n                padding: 0;\n            }\n            .internal-property-grid ngx-property-grid .card {\n                background-color: unset;\n                box-shadow: unset;\n                display: unset;\n                flex-flow: unset;\n                /*margin: 5px 20px;*/\n                padding: unset;\n            }\n        `\n    ],\n    animations: [\n        trigger('internalPropertyGrid', [\n            state('hidden', style({\n                height: '0',\n                // overflow: 'hidden'\n            })),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible  hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PropertyGridComponent implements OnInit, AfterContentInit {\n    private _options: any;\n    private _meta: any;\n\n    @Input()\n    public templateMap: any;\n\n    @Input()\n    public state = 'visible';\n\n    @Input()\n    width: string | number;\n\n\n    @Input()\n    labelWidth: string | number = '120px';\n\n    @Input()\n    public set meta(v: any) {\n        this._meta = v;\n        this.initMeta();\n    }\n\n    public get meta(): any {\n        return this._meta;\n    }\n\n    @Input()\n    public set options(v: any) {\n        this._options = v;\n        if (v.__meta__) {\n            this.meta = v.__meta__;\n        }\n    }\n\n    public get options(): any {\n        return this._options;\n    }\n\n    @ContentChildren(PropertyItemTemplateDirective) templates: QueryList;\n\n\n    public rows: Array;\n    public subItems: InternalPropertyItemMeta[];\n\n    constructor(private cdr: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        console.log(this);\n    }\n\n    ngAfterContentInit(): void {\n        if (this.templates.length) {\n            this.templateMap = {};\n        }\n\n        this.templates.forEach((item) => {\n            this.templateMap[item.name] = item.template;\n        });\n    }\n\n    public getTemplate(type: string): TemplateRef {\n        if (this.templateMap) {\n            return type ? this.templateMap[type] : this.templateMap['default'];\n        } else {\n            return null;\n        }\n    }\n\n    public propertyValue(meta: InternalPropertyItemMeta): PropertyValue {\n        return new PropertyValue(this.options, meta);\n    }\n\n    public toggle(): void {\n        this.state = this.state === 'visible' ? 'hidden' : 'visible';\n    }\n\n    public convertValue(meta: InternalPropertyItemMeta, val: any): void {\n        this.options[meta.key] = meta.valueConvert ? meta.valueConvert(val) : val;\n    }\n\n    private initMeta(): void {\n        const meta: object = this.meta;\n        if (!meta) {\n            this.rows = [];\n            this.subItems = [];\n            return;\n        }\n\n        const groups: InternalGroup[] = [new InternalGroup(undefined)];\n        const subItems: InternalPropertyItemMeta[] = [];\n        for (const i in meta) {\n            if (!meta.hasOwnProperty(i)) {\n                continue;\n            }\n            const v: InternalPropertyItemMeta = meta[i];\n            if (v.hidden) {\n                continue;\n            }\n            if (v.type === 'subItems') {\n                subItems.push(v);\n                continue;\n            }\n\n            let group = groups.find(o => o.name === v.group);\n            if (!group) {\n                group = new InternalGroup(v.group);\n                groups.push(group);\n            }\n            group.items.push(v);\n        }\n        groups.forEach(o => o.items.sort((a, b) => a.order - b.order));\n        const rows: Array = [];\n        for (const g of groups) {\n            if (g.name) {\n                rows.push(g);\n            }\n            g.items.forEach(o => rows.push(o));\n        }\n        this.rows = rows;\n        this.subItems = subItems;\n    }\n}\n\nexport class PropertyValue {\n    public get value(): any {\n        return this.o[this.meta.key];\n    }\n\n    public set value(val: any) {\n        this.o[this.meta.key] = this.meta.valueConvert ? this.meta.valueConvert(val) : val;\n    }\n\n    constructor(private o: any, public meta: InternalPropertyItemMeta) {\n    }\n}\n\nexport class InternalGroup {\n    public readonly items: InternalPropertyItemMeta[] = [];\n    public type = 'group';\n\n    constructor(public name: string) {\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InternalPropertyItemMeta.html":{"url":"interfaces/InternalPropertyItemMeta.html","title":"interface - InternalPropertyItemMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InternalPropertyItemMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/property-grid/property-item-meta.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PropertyItemMeta\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | \n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Type} from '@angular/core';\nimport {defaultProvider} from './property-grid-control-provider';\nimport {ICustomDynamicComponent} from './custom.component';\nimport {ControlValueAccessor} from '@angular/forms';\n\nexport interface PropertyItemMeta {\n    name: string; // The display name of the property in the grid\n    description?: string; // A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\n    order?: number; // The display order.\n    group?: string; //  The group this property belongs to\n    hidden?: boolean; // Whether this property should be hidden in the grid, default is false (can be omitted).\n    initState?: string; // - hidden/visible. If hidden then subItems should init by hidden state. default is hidden\n    componentType?: Type>; // an custom component should be implement\n    // ControlValueAccessor or ICustomDynamicComponent\n    componentOptions?: any;\n    colSpan2?: boolean; //  - true/false. If true then property input will span both columns and will have no name/label\n    // (useful for textarea custom type)\n    type?: string; // options: boolean number options label color\n    valueConvert?: (value: any) => any; // convert the value, eg. parseInt\n}\n\nexport interface InternalPropertyItemMeta extends PropertyItemMeta {\n    key: string | symbol;\n}\n\nexport const meta = (m: PropertyItemMeta) =>\n    (target: any, key: string | symbol) => {\n        const xMeta = m as InternalPropertyItemMeta;\n        if (!target.__meta__) {\n            target.__meta__ = {};\n        }\n        if (!xMeta.componentType) {\n            if (!xMeta.type) {\n                xMeta.componentType = defaultProvider.getComponentType('text');\n            } else if (xMeta.type === 'boolean') {\n                xMeta.componentType = defaultProvider.getComponentType('checkbox');\n            } else {\n                xMeta.componentType = defaultProvider.getComponentType(m.type);\n            }\n\n            if (xMeta.type === 'number' && !xMeta.valueConvert) {\n                xMeta.valueConvert = parseInt;\n            }\n        }\n        if (!xMeta.initState) {\n            xMeta.initState = 'hidden';\n        }\n        if (!xMeta.order) {\n            xMeta.order = 0;\n        }\n        xMeta.key = key;\n        target.__meta__[key] = xMeta;\n    };\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PropertyGridComponent.html":{"url":"components/PropertyGridComponent.html","title":"component - PropertyGridComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PropertyGridComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/property-grid/property-grid.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-property-grid\n            \n\n\n            \n                styles\n                \n            .property-grid {\n                /*border: solid 1px #95B8E7;*/\n            }\n\n            .property-grid-table {\n                border-spacing: 0;\n                border-top: 1px solid #dbdbdb;\n                padding: 5px\n            }\n\n            .property-grid-group {\n                background-color: white;\n                font-weight: bold;\n                color: #616161;\n                padding-top: 8px;\n                padding-bottom: 5px;\n            }\n\n            .property-grid-label, .property-grid-control {\n                border: dotted 1px #ccc;\n                padding: 2px 5px;\n            }\n\n            .internal-property-grid {\n                margin-top: 12px;\n            }\n\n            .internal-property-grid .property-grid {\n                border-width: 0;\n            }\n\n            .internal-property-grid .property-grid-header {\n                margin-bottom: 5px;\n                background-color: #f5f5f5;\n                padding-bottom: 5px;\n                padding-top: 5px;\n                padding-left: 5px;\n                box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n                -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n            }\n\n            .internal-property-grid .property-grid-table {\n                border-width: 0;\n                /*border-top: 1px solid #dbdbdb;*/\n            }\n\n            .card {\n                background-color: #fff;\n                box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n                display: flex;\n                flex-flow: row wrap;\n                /*margin: 5px 20px;*/\n                padding: 0;\n            }\n            .internal-property-grid ngx-property-grid .card {\n                background-color: unset;\n                box-shadow: unset;\n                display: unset;\n                flex-flow: unset;\n                /*margin: 5px 20px;*/\n                padding: unset;\n            }\n        \n            \n\n            \n                template\n                \n    \n        \n            \n            \n\n                -->\n                {{row.name}}\n                \n                    {{row.name}}\n                    [?]\n                \n                \n                    \n                    \n                    \n                    \n                \n            \n            \n        \n    \n\n    \n        {{item.name}}\n        \n        \n    \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _meta\n                            \n                            \n                                    Private\n                                _options\n                            \n                            \n                                    Public\n                                rows\n                            \n                            \n                                    Public\n                                subItems\n                            \n                            \n                                templates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                convertValue\n                            \n                            \n                                    Public\n                                getTemplate\n                            \n                            \n                                    Private\n                                initMeta\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                propertyValue\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                labelWidth\n                            \n                            \n                                meta\n                            \n                            \n                                options\n                            \n                            \n                                state\n                            \n                            \n                                templateMap\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/property-grid/property-grid.component.ts:186\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        labelWidth\n                    \n                    \n                            \n                            Type:    string | number\n\n                            \n                        \n                            Default value: '120px'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:158\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        meta\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:161\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:171\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                    \n                        \n                            Default value: 'visible'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:151\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        templateMap\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:148\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                    \n                            \n                            Type:    string | number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:154\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            convertValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        convertValue(meta: InternalPropertyItemMeta, val: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:221\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        meta\n                                                        \n                                                                    InternalPropertyItemMeta\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        val\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTemplate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTemplate(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:205\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TemplateRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initMeta\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initMeta()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:225\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterContentInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterContentInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:195\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:191\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            propertyValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        propertyValue(meta: InternalPropertyItemMeta)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:213\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        meta\n                                                        \n                                                                    InternalPropertyItemMeta\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     PropertyValue\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:217\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _meta\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _meta:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:145\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _options:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:144\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rows\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rows:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:185\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subItems:     InternalPropertyItemMeta[]\n\n                    \n                \n                    \n                        \n                            Type :     InternalPropertyItemMeta[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:186\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templates\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        templates:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ContentChildren\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:182\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        meta\n                    \n                \n\n                \n                    \n                        getmeta()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:166\n                                \n                            \n\n                \n                    \n                        setmeta(v: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:161\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:178\n                                \n                            \n\n                \n                    \n                        setoptions(v: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:171\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    Input,\n    OnInit,\n    QueryList,\n    TemplateRef\n} from '@angular/core';\nimport {InternalPropertyItemMeta} from './property-item-meta';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {PropertyItemTemplateDirective} from './property-item-template.directive';\n\n@Component({\n    selector: 'ngx-property-grid',\n    template: `\n        \n            \n                \n                    \n                    \n\n                        -->\n                        {{row.name}}\n                        \n                            {{row.name}}\n                            [?]\n                        \n                        \n                            \n                            \n                            \n                            \n                        \n                    \n                    \n                \n            \n\n            \n                {{item.name}}\n                \n                \n            \n        \n    `,\n    styles: [\n            `\n            .property-grid {\n                /*border: solid 1px #95B8E7;*/\n            }\n\n            .property-grid-table {\n                border-spacing: 0;\n                border-top: 1px solid #dbdbdb;\n                padding: 5px\n            }\n\n            .property-grid-group {\n                background-color: white;\n                font-weight: bold;\n                color: #616161;\n                padding-top: 8px;\n                padding-bottom: 5px;\n            }\n\n            .property-grid-label, .property-grid-control {\n                border: dotted 1px #ccc;\n                padding: 2px 5px;\n            }\n\n            .internal-property-grid {\n                margin-top: 12px;\n            }\n\n            .internal-property-grid .property-grid {\n                border-width: 0;\n            }\n\n            .internal-property-grid .property-grid-header {\n                margin-bottom: 5px;\n                background-color: #f5f5f5;\n                padding-bottom: 5px;\n                padding-top: 5px;\n                padding-left: 5px;\n                box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n                -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n            }\n\n            .internal-property-grid .property-grid-table {\n                border-width: 0;\n                /*border-top: 1px solid #dbdbdb;*/\n            }\n\n            .card {\n                background-color: #fff;\n                box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n                display: flex;\n                flex-flow: row wrap;\n                /*margin: 5px 20px;*/\n                padding: 0;\n            }\n            .internal-property-grid ngx-property-grid .card {\n                background-color: unset;\n                box-shadow: unset;\n                display: unset;\n                flex-flow: unset;\n                /*margin: 5px 20px;*/\n                padding: unset;\n            }\n        `\n    ],\n    animations: [\n        trigger('internalPropertyGrid', [\n            state('hidden', style({\n                height: '0',\n                // overflow: 'hidden'\n            })),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible  hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PropertyGridComponent implements OnInit, AfterContentInit {\n    private _options: any;\n    private _meta: any;\n\n    @Input()\n    public templateMap: any;\n\n    @Input()\n    public state = 'visible';\n\n    @Input()\n    width: string | number;\n\n\n    @Input()\n    labelWidth: string | number = '120px';\n\n    @Input()\n    public set meta(v: any) {\n        this._meta = v;\n        this.initMeta();\n    }\n\n    public get meta(): any {\n        return this._meta;\n    }\n\n    @Input()\n    public set options(v: any) {\n        this._options = v;\n        if (v.__meta__) {\n            this.meta = v.__meta__;\n        }\n    }\n\n    public get options(): any {\n        return this._options;\n    }\n\n    @ContentChildren(PropertyItemTemplateDirective) templates: QueryList;\n\n\n    public rows: Array;\n    public subItems: InternalPropertyItemMeta[];\n\n    constructor(private cdr: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        console.log(this);\n    }\n\n    ngAfterContentInit(): void {\n        if (this.templates.length) {\n            this.templateMap = {};\n        }\n\n        this.templates.forEach((item) => {\n            this.templateMap[item.name] = item.template;\n        });\n    }\n\n    public getTemplate(type: string): TemplateRef {\n        if (this.templateMap) {\n            return type ? this.templateMap[type] : this.templateMap['default'];\n        } else {\n            return null;\n        }\n    }\n\n    public propertyValue(meta: InternalPropertyItemMeta): PropertyValue {\n        return new PropertyValue(this.options, meta);\n    }\n\n    public toggle(): void {\n        this.state = this.state === 'visible' ? 'hidden' : 'visible';\n    }\n\n    public convertValue(meta: InternalPropertyItemMeta, val: any): void {\n        this.options[meta.key] = meta.valueConvert ? meta.valueConvert(val) : val;\n    }\n\n    private initMeta(): void {\n        const meta: object = this.meta;\n        if (!meta) {\n            this.rows = [];\n            this.subItems = [];\n            return;\n        }\n\n        const groups: InternalGroup[] = [new InternalGroup(undefined)];\n        const subItems: InternalPropertyItemMeta[] = [];\n        for (const i in meta) {\n            if (!meta.hasOwnProperty(i)) {\n                continue;\n            }\n            const v: InternalPropertyItemMeta = meta[i];\n            if (v.hidden) {\n                continue;\n            }\n            if (v.type === 'subItems') {\n                subItems.push(v);\n                continue;\n            }\n\n            let group = groups.find(o => o.name === v.group);\n            if (!group) {\n                group = new InternalGroup(v.group);\n                groups.push(group);\n            }\n            group.items.push(v);\n        }\n        groups.forEach(o => o.items.sort((a, b) => a.order - b.order));\n        const rows: Array = [];\n        for (const g of groups) {\n            if (g.name) {\n                rows.push(g);\n            }\n            g.items.forEach(o => rows.push(o));\n        }\n        this.rows = rows;\n        this.subItems = subItems;\n    }\n}\n\nexport class PropertyValue {\n    public get value(): any {\n        return this.o[this.meta.key];\n    }\n\n    public set value(val: any) {\n        this.o[this.meta.key] = this.meta.valueConvert ? this.meta.valueConvert(val) : val;\n    }\n\n    constructor(private o: any, public meta: InternalPropertyItemMeta) {\n    }\n}\n\nexport class InternalGroup {\n    public readonly items: InternalPropertyItemMeta[] = [];\n    public type = 'group';\n\n    constructor(public name: string) {\n    }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    -->                {{row.name}}                                    {{row.name}}                    [?]                                                                                                                                                                                {{item.name}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomComponent', 'selector': 'custom-component'},{'name': 'PropertyGridComponent', 'selector': 'ngx-property-grid'},{'name': 'SimpleCheckboxComponent', 'selector': 'simple-checkbox-component'},{'name': 'SimpleColorComponent', 'selector': 'simple-color-component'},{'name': 'SimpleDateComponent', 'selector': 'simple-date-component'},{'name': 'SimpleLabelComponent', 'selector': 'simple-label-component'},{'name': 'SimpleSelectComponent', 'selector': 'simple-select-component'},{'name': 'SimpleTextComponent', 'selector': 'simple-text-component'},{'name': 'SimpleTextEditorComponent', 'selector': 'app-text-editor'}];\n    var DIRECTIVES = [{'name': 'PropertyItemTemplateDirective', 'selector': '[propertyType]'}];\n    var ACTUAL_COMPONENT = {'name': 'PropertyGridComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PropertyGridControlProvider.html":{"url":"injectables/PropertyGridControlProvider.html","title":"injectable - PropertyGridControlProvider","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  PropertyGridControlProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/property-grid/property-grid-control-provider.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _map\n                            \n                            \n                                    Public\n                                components\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getComponentType\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getComponentType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getComponentType(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid-control-provider.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        register(type: string, componentType: Type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid-control-provider.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        componentType\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _map:     Map>\n\n                    \n                \n                    \n                        \n                            Type :     Map>\n\n                        \n                    \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid-control-provider.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            components\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        components:     Array>\n\n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid-control-provider.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, Type} from '@angular/core';\n\n\n@Injectable()\nexport class PropertyGridControlProvider {\n    private readonly _map: Map> = new Map>();\n    public components: Array> = [];\n    public register(type: string, componentType: Type) {\n        this._map.set(type, componentType);\n        this.components.push(componentType);\n    }\n    public getComponentType(type: string) {\n        return this._map.get(type);\n    }\n}\n\nexport const defaultProvider = new PropertyGridControlProvider();\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PropertyGridModule.html":{"url":"modules/PropertyGridModule.html","title":"module - PropertyGridModule","body":"\n                   \n\n\n\n\n  Modules\n  PropertyGridModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyGridModule\n\n\n\ncluster_PropertyGridModule_declarations\n\n\n\ncluster_PropertyGridModule_exports\n\n\n\n\nCustomComponent\n\nCustomComponent\n\n\n\nPropertyGridModule\n\nPropertyGridModule\n\nPropertyGridModule -->\n\nCustomComponent->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent\n\nPropertyGridComponent\n\nPropertyGridModule -->\n\nPropertyGridComponent->PropertyGridModule\n\n\n\n\n\nPropertyItemTemplateDirective\n\nPropertyItemTemplateDirective\n\nPropertyGridModule -->\n\nPropertyItemTemplateDirective->PropertyGridModule\n\n\n\n\n\nSimpleCheckboxComponent\n\nSimpleCheckboxComponent\n\nPropertyGridModule -->\n\nSimpleCheckboxComponent->PropertyGridModule\n\n\n\n\n\nSimpleColorComponent\n\nSimpleColorComponent\n\nPropertyGridModule -->\n\nSimpleColorComponent->PropertyGridModule\n\n\n\n\n\nSimpleDateComponent\n\nSimpleDateComponent\n\nPropertyGridModule -->\n\nSimpleDateComponent->PropertyGridModule\n\n\n\n\n\nSimpleLabelComponent\n\nSimpleLabelComponent\n\nPropertyGridModule -->\n\nSimpleLabelComponent->PropertyGridModule\n\n\n\n\n\nSimpleSelectComponent\n\nSimpleSelectComponent\n\nPropertyGridModule -->\n\nSimpleSelectComponent->PropertyGridModule\n\n\n\n\n\nSimpleTextComponent\n\nSimpleTextComponent\n\nPropertyGridModule -->\n\nSimpleTextComponent->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent \n\nPropertyGridComponent \n\nPropertyGridComponent  -->\n\nPropertyGridModule->PropertyGridComponent \n\n\n\n\n\nPropertyItemTemplateDirective \n\nPropertyItemTemplateDirective \n\nPropertyItemTemplateDirective  -->\n\nPropertyGridModule->PropertyItemTemplateDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/property-grid/index.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CustomComponent\n                            \n                            \n                                PropertyGridComponent\n                            \n                            \n                                PropertyItemTemplateDirective\n                            \n                            \n                                SimpleCheckboxComponent\n                            \n                            \n                                SimpleColorComponent\n                            \n                            \n                                SimpleDateComponent\n                            \n                            \n                                SimpleLabelComponent\n                            \n                            \n                                SimpleSelectComponent\n                            \n                            \n                                SimpleTextComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                defaultProvider.components\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    PropertyGridComponent\n                            \n                            \n                                    PropertyItemTemplateDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {CustomComponent, ICustomDynamicComponent} from './custom.component';\nimport {PropertyGridComponent} from './property-grid.component';\nimport {SimpleCheckboxComponent} from './controls/simple-checkbox.component';\nimport {defaultProvider, PropertyGridControlProvider} from './property-grid-control-provider';\nimport {SimpleColorComponent} from './controls/simple-color-picker.omponent';\nimport {SimpleLabelComponent} from './controls/simple-label.component';\nimport {SimpleTextComponent} from './controls/simple-text.component';\nimport {SimpleSelectComponent} from './controls/simple-select.component';\nimport {SimpleDateComponent} from './controls/simple-date-picker.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {PropertyItemTemplateDirective} from './property-item-template.directive';\n\nexport {ICustomDynamicComponent} from './custom.component';\nexport {PropertyGridComponent, PropertyValue} from './property-grid.component';\nexport {meta, PropertyItemMeta} from './property-item-meta';\n\ndefaultProvider.register('checkbox', SimpleCheckboxComponent);\ndefaultProvider.register('color', SimpleColorComponent);\ndefaultProvider.register('label', SimpleLabelComponent);\ndefaultProvider.register('text', SimpleTextComponent);\ndefaultProvider.register('number', SimpleTextComponent);\ndefaultProvider.register('options', SimpleSelectComponent);\ndefaultProvider.register('date', SimpleDateComponent);\n\n@NgModule({\n    imports: [\n        CommonModule, BrowserAnimationsModule,\n    ],\n    entryComponents: defaultProvider.components,\n    declarations: [\n        PropertyGridComponent,\n        CustomComponent,\n        PropertyItemTemplateDirective,\n        SimpleCheckboxComponent,\n        SimpleColorComponent,\n        SimpleLabelComponent,\n        SimpleTextComponent,\n        SimpleSelectComponent,\n        SimpleDateComponent\n    ],\n    providers: [{provide: PropertyGridControlProvider, useValue: defaultProvider}],\n    exports: [\n        PropertyGridComponent, PropertyItemTemplateDirective\n    ]\n})\nexport class PropertyGridModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PropertyItemMeta.html":{"url":"interfaces/PropertyItemMeta.html","title":"interface - PropertyItemMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PropertyItemMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/property-grid/property-item-meta.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        colSpan2\n                                \n                                \n                                            Optional\n                                        componentOptions\n                                \n                                \n                                            Optional\n                                        componentType\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        group\n                                \n                                \n                                            Optional\n                                        hidden\n                                \n                                \n                                            Optional\n                                        initState\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        order\n                                \n                                \n                                            Optional\n                                        type\n                                \n                                \n                                            Optional\n                                        valueConvert\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colSpan2\n                                    \n                                \n                                \n                                    \n                                        colSpan2:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        componentOptions\n                                    \n                                \n                                \n                                    \n                                        componentOptions:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        componentType\n                                    \n                                \n                                \n                                    \n                                        componentType:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initState\n                                    \n                                \n                                \n                                    \n                                        initState:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueConvert\n                                    \n                                \n                                \n                                    \n                                        valueConvert:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Type} from '@angular/core';\nimport {defaultProvider} from './property-grid-control-provider';\nimport {ICustomDynamicComponent} from './custom.component';\nimport {ControlValueAccessor} from '@angular/forms';\n\nexport interface PropertyItemMeta {\n    name: string; // The display name of the property in the grid\n    description?: string; // A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\n    order?: number; // The display order.\n    group?: string; //  The group this property belongs to\n    hidden?: boolean; // Whether this property should be hidden in the grid, default is false (can be omitted).\n    initState?: string; // - hidden/visible. If hidden then subItems should init by hidden state. default is hidden\n    componentType?: Type>; // an custom component should be implement\n    // ControlValueAccessor or ICustomDynamicComponent\n    componentOptions?: any;\n    colSpan2?: boolean; //  - true/false. If true then property input will span both columns and will have no name/label\n    // (useful for textarea custom type)\n    type?: string; // options: boolean number options label color\n    valueConvert?: (value: any) => any; // convert the value, eg. parseInt\n}\n\nexport interface InternalPropertyItemMeta extends PropertyItemMeta {\n    key: string | symbol;\n}\n\nexport const meta = (m: PropertyItemMeta) =>\n    (target: any, key: string | symbol) => {\n        const xMeta = m as InternalPropertyItemMeta;\n        if (!target.__meta__) {\n            target.__meta__ = {};\n        }\n        if (!xMeta.componentType) {\n            if (!xMeta.type) {\n                xMeta.componentType = defaultProvider.getComponentType('text');\n            } else if (xMeta.type === 'boolean') {\n                xMeta.componentType = defaultProvider.getComponentType('checkbox');\n            } else {\n                xMeta.componentType = defaultProvider.getComponentType(m.type);\n            }\n\n            if (xMeta.type === 'number' && !xMeta.valueConvert) {\n                xMeta.valueConvert = parseInt;\n            }\n        }\n        if (!xMeta.initState) {\n            xMeta.initState = 'hidden';\n        }\n        if (!xMeta.order) {\n            xMeta.order = 0;\n        }\n        xMeta.key = key;\n        target.__meta__[key] = xMeta;\n    };\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PropertyItemTemplateDirective.html":{"url":"directives/PropertyItemTemplateDirective.html","title":"directive - PropertyItemTemplateDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  PropertyItemTemplateDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/property-grid/property-item-template.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [propertyType]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                propertyType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/property-grid/property-item-template.directive.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        propertyType\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-item-template.directive.ts:7\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-item-template.directive.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {Directive, Input, TemplateRef} from '@angular/core';\n\n@Directive({\n    selector: '[propertyType]'\n})\nexport class PropertyItemTemplateDirective {\n    @Input('propertyType') name: string;\n\n    constructor(public template: TemplateRef) {\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PropertyValue.html":{"url":"classes/PropertyValue.html","title":"class - PropertyValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  PropertyValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/property-grid/property-grid.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(o: any, meta: InternalPropertyItemMeta)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/property-grid/property-grid.component.ts:275\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        o\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                    InternalPropertyItemMeta\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            meta\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        meta:     InternalPropertyItemMeta\n\n                    \n                \n                    \n                        \n                            Type :     InternalPropertyItemMeta\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:277\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:269\n                                \n                            \n\n                \n                    \n                        setvalue(val: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:273\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    Input,\n    OnInit,\n    QueryList,\n    TemplateRef\n} from '@angular/core';\nimport {InternalPropertyItemMeta} from './property-item-meta';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {PropertyItemTemplateDirective} from './property-item-template.directive';\n\n@Component({\n    selector: 'ngx-property-grid',\n    template: `\n        \n            \n                \n                    \n                    \n\n                        -->\n                        {{row.name}}\n                        \n                            {{row.name}}\n                            [?]\n                        \n                        \n                            \n                            \n                            \n                            \n                        \n                    \n                    \n                \n            \n\n            \n                {{item.name}}\n                \n                \n            \n        \n    `,\n    styles: [\n            `\n            .property-grid {\n                /*border: solid 1px #95B8E7;*/\n            }\n\n            .property-grid-table {\n                border-spacing: 0;\n                border-top: 1px solid #dbdbdb;\n                padding: 5px\n            }\n\n            .property-grid-group {\n                background-color: white;\n                font-weight: bold;\n                color: #616161;\n                padding-top: 8px;\n                padding-bottom: 5px;\n            }\n\n            .property-grid-label, .property-grid-control {\n                border: dotted 1px #ccc;\n                padding: 2px 5px;\n            }\n\n            .internal-property-grid {\n                margin-top: 12px;\n            }\n\n            .internal-property-grid .property-grid {\n                border-width: 0;\n            }\n\n            .internal-property-grid .property-grid-header {\n                margin-bottom: 5px;\n                background-color: #f5f5f5;\n                padding-bottom: 5px;\n                padding-top: 5px;\n                padding-left: 5px;\n                box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n                -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n            }\n\n            .internal-property-grid .property-grid-table {\n                border-width: 0;\n                /*border-top: 1px solid #dbdbdb;*/\n            }\n\n            .card {\n                background-color: #fff;\n                box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n                display: flex;\n                flex-flow: row wrap;\n                /*margin: 5px 20px;*/\n                padding: 0;\n            }\n            .internal-property-grid ngx-property-grid .card {\n                background-color: unset;\n                box-shadow: unset;\n                display: unset;\n                flex-flow: unset;\n                /*margin: 5px 20px;*/\n                padding: unset;\n            }\n        `\n    ],\n    animations: [\n        trigger('internalPropertyGrid', [\n            state('hidden', style({\n                height: '0',\n                // overflow: 'hidden'\n            })),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible  hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PropertyGridComponent implements OnInit, AfterContentInit {\n    private _options: any;\n    private _meta: any;\n\n    @Input()\n    public templateMap: any;\n\n    @Input()\n    public state = 'visible';\n\n    @Input()\n    width: string | number;\n\n\n    @Input()\n    labelWidth: string | number = '120px';\n\n    @Input()\n    public set meta(v: any) {\n        this._meta = v;\n        this.initMeta();\n    }\n\n    public get meta(): any {\n        return this._meta;\n    }\n\n    @Input()\n    public set options(v: any) {\n        this._options = v;\n        if (v.__meta__) {\n            this.meta = v.__meta__;\n        }\n    }\n\n    public get options(): any {\n        return this._options;\n    }\n\n    @ContentChildren(PropertyItemTemplateDirective) templates: QueryList;\n\n\n    public rows: Array;\n    public subItems: InternalPropertyItemMeta[];\n\n    constructor(private cdr: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        console.log(this);\n    }\n\n    ngAfterContentInit(): void {\n        if (this.templates.length) {\n            this.templateMap = {};\n        }\n\n        this.templates.forEach((item) => {\n            this.templateMap[item.name] = item.template;\n        });\n    }\n\n    public getTemplate(type: string): TemplateRef {\n        if (this.templateMap) {\n            return type ? this.templateMap[type] : this.templateMap['default'];\n        } else {\n            return null;\n        }\n    }\n\n    public propertyValue(meta: InternalPropertyItemMeta): PropertyValue {\n        return new PropertyValue(this.options, meta);\n    }\n\n    public toggle(): void {\n        this.state = this.state === 'visible' ? 'hidden' : 'visible';\n    }\n\n    public convertValue(meta: InternalPropertyItemMeta, val: any): void {\n        this.options[meta.key] = meta.valueConvert ? meta.valueConvert(val) : val;\n    }\n\n    private initMeta(): void {\n        const meta: object = this.meta;\n        if (!meta) {\n            this.rows = [];\n            this.subItems = [];\n            return;\n        }\n\n        const groups: InternalGroup[] = [new InternalGroup(undefined)];\n        const subItems: InternalPropertyItemMeta[] = [];\n        for (const i in meta) {\n            if (!meta.hasOwnProperty(i)) {\n                continue;\n            }\n            const v: InternalPropertyItemMeta = meta[i];\n            if (v.hidden) {\n                continue;\n            }\n            if (v.type === 'subItems') {\n                subItems.push(v);\n                continue;\n            }\n\n            let group = groups.find(o => o.name === v.group);\n            if (!group) {\n                group = new InternalGroup(v.group);\n                groups.push(group);\n            }\n            group.items.push(v);\n        }\n        groups.forEach(o => o.items.sort((a, b) => a.order - b.order));\n        const rows: Array = [];\n        for (const g of groups) {\n            if (g.name) {\n                rows.push(g);\n            }\n            g.items.forEach(o => rows.push(o));\n        }\n        this.rows = rows;\n        this.subItems = subItems;\n    }\n}\n\nexport class PropertyValue {\n    public get value(): any {\n        return this.o[this.meta.key];\n    }\n\n    public set value(val: any) {\n        this.o[this.meta.key] = this.meta.valueConvert ? this.meta.valueConvert(val) : val;\n    }\n\n    constructor(private o: any, public meta: InternalPropertyItemMeta) {\n    }\n}\n\nexport class InternalGroup {\n    public readonly items: InternalPropertyItemMeta[] = [];\n    public type = 'group';\n\n    constructor(public name: string) {\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PropertyValueAccess.html":{"url":"interfaces/PropertyValueAccess.html","title":"interface - PropertyValueAccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PropertyValueAccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/property-grid/custom.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ControlValueAccessor\n            \n\n\n\n\n    \n\n\n    \n        import {\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    Type,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\n\n@Component({\n    selector: 'custom-component',\n    template: '',\n})\nexport class CustomComponent implements OnInit, ICustomDynamicComponent {\n    private readonly _controlValueChangeFn: (value: any) => void;\n    private _value: any;\n\n    @ViewChild('container', { read: ViewContainerRef }) entry;\n    private component: ComponentRef>;\n\n    @Input() componentType: Type;\n\n    @Input()\n    componentOptions: any;\n\n    @Input()\n    set value(v: any) {\n        this._value = v;\n        if (this.component) {\n            this.component.instance.value =  v;\n        }\n    }\n    get value(): any {\n        return this._value;\n    }\n\n    @Output()\n    readonly valueChange: EventEmitter = new EventEmitter();\n\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n        this._controlValueChangeFn = (value: any) => this.onValueChange(value);\n    }\n\n    ngOnInit() {\n        this.buildComponent();\n    }\n\n    private onValueChange(e: any): void {\n        this._value = e;\n        this.valueChange.emit(e);\n    }\n\n    private buildComponent(): void {\n        if (!this.componentType) {\n            return;\n        }\n        try {\n            this.destroyComponent();\n            // this.entry.clear();\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\n            const component = this.entry.createComponent(componentFactory, 0);\n            this.initComponent(component);\n            this.component = component;\n        } catch (e) {\n            console.error('load component error.');\n            console.error(e);\n        }\n    }\n\n    private initComponent(component: ComponentRef) {\n        component.instance.value = this._value;\n        if (component.instance.registerOnChange) {\n            component.instance.registerOnChange(this._controlValueChangeFn);\n        }\n        if (component.instance.valueChange) {\n            component.instance.valueChange.subscribe(this._controlValueChangeFn);\n        }\n\n        if (this.componentOptions) {\n            Object.assign(component.instance, this.componentOptions);\n        }\n    }\n\n    private destroyComponent(): void {\n        if (this.component) {\n            this.component.destroy();\n        }\n    }\n}\n\nexport interface PropertyValueAccess extends ControlValueAccessor, ICustomDynamicComponent {\n}\n\nexport interface ICustomDynamicComponent {\n    value: TValue;\n    valueChange: EventEmitter;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ShowcaseModule.html":{"url":"modules/ShowcaseModule.html","title":"module - ShowcaseModule","body":"\n                   \n\n\n\n\n  Modules\n  ShowcaseModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ShowcaseModule\n\n\n\ncluster_ShowcaseModule_declarations\n\n\n\ncluster_ShowcaseModule_imports\n\n\n\ncluster_ShowcaseModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nShowcaseModule\n\nShowcaseModule\n\nShowcaseModule -->\n\nAppComponent->ShowcaseModule\n\n\n\n\n\nSimpleTextEditorComponent\n\nSimpleTextEditorComponent\n\nShowcaseModule -->\n\nSimpleTextEditorComponent->ShowcaseModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nShowcaseModule->AppComponent \n\n\n\n\n\nPropertyGridModule\n\nPropertyGridModule\n\nShowcaseModule -->\n\nPropertyGridModule->ShowcaseModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/showcase/showcase.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                SimpleTextEditorComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                MatCheckbox\n                            \n                            \n                                MatDatepicker\n                            \n                            \n                                MatSlideToggle\n                            \n                            \n                                MatSlider\n                            \n                            \n                                SimpleTextEditorComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    PropertyGridModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Schemas\n                    \n                            \n                                CUSTOM_ELEMENTS_SCHEMA\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\n\nimport {AppComponent, SimpleTextEditorComponent} from './app.component';\nimport {PropertyGridModule} from '../components/property-grid/index';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {\n    MatCheckboxModule,\n    MatSlider,\n    MatSliderModule,\n    MatDatepickerModule,\n    MatDatepicker,\n    MatSlideToggleModule,\n    MatSlideToggle\n} from '@angular/material';\nimport {MatCheckbox} from '@angular/material';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\n    imports: [\n        BrowserModule, FormsModule, NoopAnimationsModule, PropertyGridModule,\n        MatCheckboxModule, MatSliderModule, MatDatepickerModule, MatSlideToggleModule,\n    ],\n    entryComponents: [SimpleTextEditorComponent, MatCheckbox, MatSlider, MatDatepicker, MatSlideToggle],\n    declarations: [\n        AppComponent, SimpleTextEditorComponent\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class ShowcaseModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleCheckboxComponent.html":{"url":"components/SimpleCheckboxComponent.html","title":"component - SimpleCheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimpleCheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/property-grid/controls/simple-checkbox.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                ICustomDynamicComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                simple-checkbox-component\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/controls/simple-checkbox.component.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueChange:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/controls/simple-checkbox.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter} from '@angular/core';\nimport {ICustomDynamicComponent} from '../custom.component';\n\n@Component({\n    selector: 'simple-checkbox-component',\n    template: '',\n})\nexport class SimpleCheckboxComponent implements ICustomDynamicComponent {\n    value: boolean;\n    valueChange: EventEmitter = new EventEmitter();\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomComponent', 'selector': 'custom-component'},{'name': 'PropertyGridComponent', 'selector': 'ngx-property-grid'},{'name': 'SimpleCheckboxComponent', 'selector': 'simple-checkbox-component'},{'name': 'SimpleColorComponent', 'selector': 'simple-color-component'},{'name': 'SimpleDateComponent', 'selector': 'simple-date-component'},{'name': 'SimpleLabelComponent', 'selector': 'simple-label-component'},{'name': 'SimpleSelectComponent', 'selector': 'simple-select-component'},{'name': 'SimpleTextComponent', 'selector': 'simple-text-component'},{'name': 'SimpleTextEditorComponent', 'selector': 'app-text-editor'}];\n    var DIRECTIVES = [{'name': 'PropertyItemTemplateDirective', 'selector': '[propertyType]'}];\n    var ACTUAL_COMPONENT = {'name': 'SimpleCheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleColorComponent.html":{"url":"components/SimpleColorComponent.html","title":"component - SimpleColorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimpleColorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/property-grid/controls/simple-color-picker.omponent.ts\n\n\n\n\n    \n        Implements\n    \n    \n                ICustomDynamicComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                simple-color-component\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/controls/simple-color-picker.omponent.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueChange:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/controls/simple-color-picker.omponent.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter} from '@angular/core';\nimport {ICustomDynamicComponent} from '../custom.component';\n\n@Component({\n    selector: 'simple-color-component',\n    template: '',\n})\nexport class SimpleColorComponent implements ICustomDynamicComponent {\n    value: string;\n    valueChange: EventEmitter = new EventEmitter();\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomComponent', 'selector': 'custom-component'},{'name': 'PropertyGridComponent', 'selector': 'ngx-property-grid'},{'name': 'SimpleCheckboxComponent', 'selector': 'simple-checkbox-component'},{'name': 'SimpleColorComponent', 'selector': 'simple-color-component'},{'name': 'SimpleDateComponent', 'selector': 'simple-date-component'},{'name': 'SimpleLabelComponent', 'selector': 'simple-label-component'},{'name': 'SimpleSelectComponent', 'selector': 'simple-select-component'},{'name': 'SimpleTextComponent', 'selector': 'simple-text-component'},{'name': 'SimpleTextEditorComponent', 'selector': 'app-text-editor'}];\n    var DIRECTIVES = [{'name': 'PropertyItemTemplateDirective', 'selector': '[propertyType]'}];\n    var ACTUAL_COMPONENT = {'name': 'SimpleColorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleDateComponent.html":{"url":"components/SimpleDateComponent.html","title":"component - SimpleDateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimpleDateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/property-grid/controls/simple-date-picker.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                ICustomDynamicComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                simple-date-component\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/controls/simple-date-picker.component.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueChange:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/controls/simple-date-picker.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter} from '@angular/core';\nimport {ICustomDynamicComponent} from '../custom.component';\n\n@Component({\n    selector: 'simple-date-component',\n    template: '',\n})\nexport class SimpleDateComponent implements ICustomDynamicComponent {\n    value: string;\n    valueChange: EventEmitter = new EventEmitter();\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomComponent', 'selector': 'custom-component'},{'name': 'PropertyGridComponent', 'selector': 'ngx-property-grid'},{'name': 'SimpleCheckboxComponent', 'selector': 'simple-checkbox-component'},{'name': 'SimpleColorComponent', 'selector': 'simple-color-component'},{'name': 'SimpleDateComponent', 'selector': 'simple-date-component'},{'name': 'SimpleLabelComponent', 'selector': 'simple-label-component'},{'name': 'SimpleSelectComponent', 'selector': 'simple-select-component'},{'name': 'SimpleTextComponent', 'selector': 'simple-text-component'},{'name': 'SimpleTextEditorComponent', 'selector': 'app-text-editor'}];\n    var DIRECTIVES = [{'name': 'PropertyItemTemplateDirective', 'selector': '[propertyType]'}];\n    var ACTUAL_COMPONENT = {'name': 'SimpleDateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleLabelComponent.html":{"url":"components/SimpleLabelComponent.html","title":"component - SimpleLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimpleLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/property-grid/controls/simple-label.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                ICustomDynamicComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                simple-label-component\n            \n\n\n\n            \n                template\n                {{value}}\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/controls/simple-label.component.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueChange:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/controls/simple-label.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter} from '@angular/core';\nimport {ICustomDynamicComponent} from '../custom.component';\n\n@Component({\n    selector: 'simple-label-component',\n    template: '{{value}}',\n})\nexport class SimpleLabelComponent implements ICustomDynamicComponent {\n    value: string;\n    valueChange: EventEmitter = new EventEmitter();\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{value}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomComponent', 'selector': 'custom-component'},{'name': 'PropertyGridComponent', 'selector': 'ngx-property-grid'},{'name': 'SimpleCheckboxComponent', 'selector': 'simple-checkbox-component'},{'name': 'SimpleColorComponent', 'selector': 'simple-color-component'},{'name': 'SimpleDateComponent', 'selector': 'simple-date-component'},{'name': 'SimpleLabelComponent', 'selector': 'simple-label-component'},{'name': 'SimpleSelectComponent', 'selector': 'simple-select-component'},{'name': 'SimpleTextComponent', 'selector': 'simple-text-component'},{'name': 'SimpleTextEditorComponent', 'selector': 'app-text-editor'}];\n    var DIRECTIVES = [{'name': 'PropertyItemTemplateDirective', 'selector': '[propertyType]'}];\n    var ACTUAL_COMPONENT = {'name': 'SimpleLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleSelectComponent.html":{"url":"components/SimpleSelectComponent.html","title":"component - SimpleSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimpleSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/property-grid/controls/simple-select.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                ICustomDynamicComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                simple-select-component\n            \n\n\n\n            \n                template\n                \n    {{optionLabel(option)}}\n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                            \n                                value\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                optionLabel\n                            \n                            \n                                optionValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \noptionLabel(v: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/controls/simple-select.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        v\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionValue\n                            \n                            \n                        \n                    \n                \n                \n                    \noptionValue(v: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/controls/simple-select.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        v\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/controls/simple-select.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/controls/simple-select.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueChange:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/controls/simple-select.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter} from '@angular/core';\nimport {ICustomDynamicComponent} from '../custom.component';\n\n@Component({\n    selector: 'simple-select-component',\n    template: `\n        \n            {{optionLabel(option)}}\n        \n    `,\n})\nexport class SimpleSelectComponent implements ICustomDynamicComponent {\n    value: any;\n    valueChange: EventEmitter = new EventEmitter();\n    options: any[];\n\n    optionLabel(v: any): string {\n        if (typeof v === 'string') {\n            return v;\n        }\n        if (v.text) {\n            return v.text;\n        }\n        if (v.label) {\n            return v.label;\n        }\n        return v;\n    }\n\n    optionValue(v: any): any {\n        return v && v.value ? v.value : v;\n    }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{optionLabel(option)}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomComponent', 'selector': 'custom-component'},{'name': 'PropertyGridComponent', 'selector': 'ngx-property-grid'},{'name': 'SimpleCheckboxComponent', 'selector': 'simple-checkbox-component'},{'name': 'SimpleColorComponent', 'selector': 'simple-color-component'},{'name': 'SimpleDateComponent', 'selector': 'simple-date-component'},{'name': 'SimpleLabelComponent', 'selector': 'simple-label-component'},{'name': 'SimpleSelectComponent', 'selector': 'simple-select-component'},{'name': 'SimpleTextComponent', 'selector': 'simple-text-component'},{'name': 'SimpleTextEditorComponent', 'selector': 'app-text-editor'}];\n    var DIRECTIVES = [{'name': 'PropertyItemTemplateDirective', 'selector': '[propertyType]'}];\n    var ACTUAL_COMPONENT = {'name': 'SimpleSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleTextComponent.html":{"url":"components/SimpleTextComponent.html","title":"component - SimpleTextComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimpleTextComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/property-grid/controls/simple-text.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                ICustomDynamicComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                simple-text-component\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/controls/simple-text.component.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueChange:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/controls/simple-text.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter} from '@angular/core';\nimport {ICustomDynamicComponent} from '../custom.component';\n\n@Component({\n    selector: 'simple-text-component',\n    template: '',\n})\nexport class SimpleTextComponent implements ICustomDynamicComponent {\n    value: string;\n    valueChange: EventEmitter = new EventEmitter();\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomComponent', 'selector': 'custom-component'},{'name': 'PropertyGridComponent', 'selector': 'ngx-property-grid'},{'name': 'SimpleCheckboxComponent', 'selector': 'simple-checkbox-component'},{'name': 'SimpleColorComponent', 'selector': 'simple-color-component'},{'name': 'SimpleDateComponent', 'selector': 'simple-date-component'},{'name': 'SimpleLabelComponent', 'selector': 'simple-label-component'},{'name': 'SimpleSelectComponent', 'selector': 'simple-select-component'},{'name': 'SimpleTextComponent', 'selector': 'simple-text-component'},{'name': 'SimpleTextEditorComponent', 'selector': 'app-text-editor'}];\n    var DIRECTIVES = [{'name': 'PropertyItemTemplateDirective', 'selector': '[propertyType]'}];\n    var ACTUAL_COMPONENT = {'name': 'SimpleTextComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleTextEditorComponent.html":{"url":"components/SimpleTextEditorComponent.html","title":"component - SimpleTextEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimpleTextEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/showcase/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                ICustomDynamicComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-editor\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueChange:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter} from '@angular/core';\nimport {meta, ICustomDynamicComponent} from '../components/property-grid/index';\nimport {MatCheckbox, MatSlider, MatSlideToggle} from '@angular/material';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    public student: ExampleStudentOptions = new ExampleStudentOptions();\n\n    constructor() {\n    }\n\n    public get data(): string {\n        return JSON.stringify(this.student);\n    }\n\n    text: string;\n}\n\n@Component({\n    selector: 'app-text-editor',\n    template: ``\n})\nexport class SimpleTextEditorComponent implements ICustomDynamicComponent {\n    value: string;\n    valueChange: EventEmitter = new EventEmitter();\n}\n\nexport class ExampleEditorOptions {\n    @meta({\n        name: 'Font', description: 'The font editor to use', colSpan2: false,\n        componentType: SimpleTextEditorComponent, group: 'Editor', hidden: false\n    })\n    font = 'Source Code Pro';\n\n    @meta({name: 'Font size', group: 'Editor', valueConvert: parseInt, type: 'fontSize'})\n    fontSize = 14;\n\n    @meta({name: 'Font color', group: 'Editor', type: 'color'})\n    fontColor = '#51f41c';\n\n    @meta({name: 'jQuery', group: 'Plugins', componentType: MatCheckbox})\n    jQuery = true;\n\n    @meta({\n        name: 'modernizr',\n        description: 'Whether or not to include modernizr on the page',\n        group: 'Plugins',\n        componentType: MatSlideToggle\n    })\n    modernizr = false;\n\n    @meta({\n        name: 'Framework',\n        description: 'Whether to include any additional framework',\n        type: 'options',\n        componentOptions: {options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]}\n    })\n    framework = 'None';\n\n}\n\nexport class ExampleStudentOptions {\n\n    @meta({name: 'Birth', group: 'Basic Information', type: 'date', order: 4})\n    time = '2018-05-08';\n\n    @meta({name: 'Name', group: 'Basic Information', type: 'text', order: 1})\n    name = 'Lily';\n\n    @meta({name: 'Age', group: 'Basic Information', valueConvert: parseInt, type: 'text', order: 2})\n    age = 19;\n\n    @meta({name: 'Editor Preference', type: 'subItems', initState: 'visible'})\n    editor: ExampleEditorOptions = new ExampleEditorOptions();\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomComponent', 'selector': 'custom-component'},{'name': 'PropertyGridComponent', 'selector': 'ngx-property-grid'},{'name': 'SimpleCheckboxComponent', 'selector': 'simple-checkbox-component'},{'name': 'SimpleColorComponent', 'selector': 'simple-color-component'},{'name': 'SimpleDateComponent', 'selector': 'simple-date-component'},{'name': 'SimpleLabelComponent', 'selector': 'simple-label-component'},{'name': 'SimpleSelectComponent', 'selector': 'simple-select-component'},{'name': 'SimpleTextComponent', 'selector': 'simple-text-component'},{'name': 'SimpleTextEditorComponent', 'selector': 'app-text-editor'}];\n    var DIRECTIVES = [{'name': 'PropertyItemTemplateDirective', 'selector': '[propertyType]'}];\n    var ACTUAL_COMPONENT = {'name': 'SimpleTextEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/components/property-grid/controls/simple-checkbox.component.ts\n            \n            \n                component\n            \n            \n                SimpleCheckboxComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/controls/simple-color-picker.omponent.ts\n            \n            \n                component\n            \n            \n                SimpleColorComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/controls/simple-date-picker.component.ts\n            \n            \n                component\n            \n            \n                SimpleDateComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/controls/simple-label.component.ts\n            \n            \n                component\n            \n            \n                SimpleLabelComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/controls/simple-select.component.ts\n            \n            \n                component\n            \n            \n                SimpleSelectComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/controls/simple-text.component.ts\n            \n            \n                component\n            \n            \n                SimpleTextComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/custom.component.ts\n            \n            \n                component\n            \n            \n                CustomComponent\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/custom.component.ts\n            \n            \n                interface\n            \n            \n                ICustomDynamicComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/custom.component.ts\n            \n            \n                interface\n            \n            \n                PropertyValueAccess\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-grid-control-provider.ts\n            \n            \n                injectable\n            \n            \n                PropertyGridControlProvider\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-grid-control-provider.ts\n            \n            \n                variable\n            \n            \n                defaultProvider\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-grid.component.ts\n            \n            \n                component\n            \n            \n                PropertyGridComponent\n            \n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-grid.component.ts\n            \n            \n                class\n            \n            \n                InternalGroup\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-grid.component.ts\n            \n            \n                class\n            \n            \n                PropertyValue\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-item-meta.ts\n            \n            \n                interface\n            \n            \n                InternalPropertyItemMeta\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-item-meta.ts\n            \n            \n                interface\n            \n            \n                PropertyItemMeta\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-item-meta.ts\n            \n            \n                variable\n            \n            \n                meta\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-item-template.directive.ts\n            \n            \n                directive\n            \n            \n                PropertyItemTemplateDirective\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/showcase/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/showcase/app.component.ts\n            \n            \n                component\n            \n            \n                SimpleTextEditorComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/showcase/app.component.ts\n            \n            \n                class\n            \n            \n                ExampleEditorOptions\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/showcase/app.component.ts\n            \n            \n                class\n            \n            \n                ExampleStudentOptions\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\nNgxPropertyGrid\nA small and simple property grid in angular to view/edit POJOs, excellent if you have a \"settings\" object you want to give the user to edit (that's why I have created it). Play online.\nDependencies\n\nangular\n\nUsage\n\nThe metadata options\n\nexport interface PropertyItemMeta {\n    name: string; // The display name of the property in the grid\n    description?: string; // A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\n    order?: number; // The display order.\n    group?: string; //  The group this property belongs to\n    hidden?: boolean; // Whether this property should be hidden in the grid, default is false (can be omitted).\n    initState?: string; // - hidden/visible.\n    componentType?: Type>; // an custom component should be implement\n    // ControlValueAccessor or ICustomDynamicComponent\n    componentOptions?: any;\n    colSpan2?: boolean; //  - true/false. If true then property input will span both columns and will have no name/label\n    // (useful for textarea custom type)\n    type?: string; // boolean number options label color\n    valueConvert?: (value: any) => any; // convert the value, eg. parseInt\n}\nThe Example Options\n\nexport class ExampleEditorOptions {\n    @meta({name: 'Font', description: 'The font editor to use', componentType: SimpleTextEditorComponent, group: 'Editor', hidden: false})\n    font = 'Source Code Pro';\n\n    @meta({name: 'Font size', group: 'Editor', type: 'number', valueConvert: parseInt})\n    fontSize = 14;\n\n    @meta({name: 'Font color', group: 'Editor', type: 'color'})\n    fontColor = '#51f41c';\n\n    @meta({name: 'jQuery', group: 'Plugins', type: 'checkbox'})\n    jQuery = true;\n\n    @meta({name: 'modernizr', description: 'Whether or not to include modernizr on the page', group: 'Plugins', type: 'checkbox'})\n    modernizr = false;\n\n    @meta({\n        name: 'Framework',\n        description: 'Whether to include any additional framework',\n        type: 'options',\n        options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]\n    })\n    framework = 'None';\n}\nThe html part:\n\nBasic\n\ntemplate\n\n    \n        \n    \n    \n        \n    \n\n\n\nThe result would be: See here\n\n\nThe metadata object\nAs seen from the example above the metadata object can be used (it's optional) in order to describe the object properties.\nEach proprty in the metadata object could have the following:\n\nname - The display name of the property in the grid\ndescription - A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\nhidden - Whether this property should be hidden in the grid, default is false (can be omitted).\ngroup - The group this property belongs to\ntype - The type of the property, supported are:\nboolean or checkbox - A checkbox would be used\nnumber -  simple textbox\ncolor - simple textbox\noptions - A dropdown list would be used in case the metadata contains the options array property\nlabel - A label will be used, useful for uneditable / read-only properties\n\n\ncomponentType - An angular component\ncolspan2 - true/false. If true then property input will span both columns and will have no name/label (useful for textarea custom type, see example/index.html)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 YISH\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        PropertyGridModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ShowcaseModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyGridModule\n\n\n\ncluster_PropertyGridModule_declarations\n\n\n\ncluster_PropertyGridModule_exports\n\n\n\ncluster_ShowcaseModule\n\n\n\ncluster_ShowcaseModule_declarations\n\n\n\ncluster_ShowcaseModule_bootstrap\n\n\n\n\nCustomComponent\n\nCustomComponent\n\n\n\nPropertyGridModule\n\nPropertyGridModule\n\nPropertyGridModule -->\n\nCustomComponent->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent\n\nPropertyGridComponent\n\nPropertyGridModule -->\n\nPropertyGridComponent->PropertyGridModule\n\n\n\n\n\nPropertyItemTemplateDirective\n\nPropertyItemTemplateDirective\n\nPropertyGridModule -->\n\nPropertyItemTemplateDirective->PropertyGridModule\n\n\n\n\n\nSimpleCheckboxComponent\n\nSimpleCheckboxComponent\n\nPropertyGridModule -->\n\nSimpleCheckboxComponent->PropertyGridModule\n\n\n\n\n\nSimpleColorComponent\n\nSimpleColorComponent\n\nPropertyGridModule -->\n\nSimpleColorComponent->PropertyGridModule\n\n\n\n\n\nSimpleDateComponent\n\nSimpleDateComponent\n\nPropertyGridModule -->\n\nSimpleDateComponent->PropertyGridModule\n\n\n\n\n\nSimpleLabelComponent\n\nSimpleLabelComponent\n\nPropertyGridModule -->\n\nSimpleLabelComponent->PropertyGridModule\n\n\n\n\n\nSimpleSelectComponent\n\nSimpleSelectComponent\n\nPropertyGridModule -->\n\nSimpleSelectComponent->PropertyGridModule\n\n\n\n\n\nSimpleTextComponent\n\nSimpleTextComponent\n\nPropertyGridModule -->\n\nSimpleTextComponent->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent \n\nPropertyGridComponent \n\nPropertyGridComponent  -->\n\nPropertyGridModule->PropertyGridComponent \n\n\n\n\n\nPropertyItemTemplateDirective \n\nPropertyItemTemplateDirective \n\nPropertyItemTemplateDirective  -->\n\nPropertyGridModule->PropertyItemTemplateDirective \n\n\n\n\n\nShowcaseModule\n\nShowcaseModule\n\nShowcaseModule -->\n\nPropertyGridModule->ShowcaseModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nShowcaseModule -->\n\nAppComponent->ShowcaseModule\n\n\n\n\n\nSimpleTextEditorComponent\n\nSimpleTextEditorComponent\n\nShowcaseModule -->\n\nSimpleTextEditorComponent->ShowcaseModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nShowcaseModule->AppComponent \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            2 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        10 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 directive\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 injectable\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            defaultProvider   (src/.../property-grid-control-provider.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            meta   (src/.../property-item-meta.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/components/property-grid/property-grid-control-provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultProvider:     \n\n                    \n                \n                    \n                        \n                            Default value : new PropertyGridControlProvider()\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/property-grid/property-item-meta.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            meta\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        meta:     \n\n                    \n                \n                    \n                        \n                            Default value : (m: PropertyItemMeta) =>\n    (target: any, key: string | symbol) => {\n        const xMeta = m as InternalPropertyItemMeta;\n        if (!target.__meta__) {\n            target.__meta__ = {};\n        }\n        if (!xMeta.componentType) {\n            if (!xMeta.type) {\n                xMeta.componentType = defaultProvider.getComponentType('text');\n            } else if (xMeta.type === 'boolean') {\n                xMeta.componentType = defaultProvider.getComponentType('checkbox');\n            } else {\n                xMeta.componentType = defaultProvider.getComponentType(m.type);\n            }\n\n            if (xMeta.type === 'number' && !xMeta.valueConvert) {\n                xMeta.valueConvert = parseInt;\n            }\n        }\n        if (!xMeta.initState) {\n            xMeta.initState = 'hidden';\n        }\n        if (!xMeta.order) {\n            xMeta.order = 0;\n        }\n        xMeta.key = key;\n        target.__meta__[key] = xMeta;\n    }\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
