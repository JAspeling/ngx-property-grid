var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/ICustomDynamicComponent.html",[0,0.481,1,0.731]],["body/interfaces/ICustomDynamicComponent.html",[0,0.671,1,1.221,2,1.328,3,0.765,4,0.627,5,0.627,6,0.504,7,0.393,8,1.328,9,1.328,10,0.765,11,1.229,12,1.094,13,2.671,14,2.405,15,1.001,16,0.073,17,2.747,18,0.835,19,2.405,20,2.405,21,1.229,22,1.221,23,2.139,24,2.139,25,2.139,26,0.627,27,1.474,28,1.107,29,1.107,30,1.606,31,0.939,32,0.393,33,0.765,34,1.107,35,1.963,36,1.229,37,1.606,38,1.768,39,1.606,40,0.805,41,1.606,42,1.606,43,0.765,44,1.606,45,2.564,46,1.019,47,2.405,48,1.606,49,1.474,50,0.923,51,1.107,52,1.606,53,1.606,54,1.606,55,1.606,56,1.606,57,1.606,58,2.139,59,1.606,60,1.606,61,1.606,62,1.606,63,1.606,64,1.606,65,1.019,66,1.606,67,1.606,68,1.606,69,0.923,70,1.606,71,1.606,72,1.606,73,1.606,74,1.606,75,1.606,76,1.606,77,1.606,78,1.606,79,1.606,80,1.606,81,2.139,82,1.606,83,1.606,84,1.606,85,1.107,86,1.606,87,0.037,88,0.05,89,0.037]],["title/classes/InternalGroup.html",[32,0.376,90,1.269]],["body/classes/InternalGroup.html",[3,0.362,4,0.297,5,0.297,6,0.689,7,0.701,10,0.362,11,0.706,12,0.693,15,0.921,16,0.074,18,0.693,22,1.154,26,0.297,29,0.524,31,0.604,32,0.379,34,0.524,35,1.344,36,1.02,38,1.575,40,0.386,43,0.737,46,1.088,49,1.77,50,0.889,51,0.524,65,0.929,69,1.637,87,0.018,88,0.029,89,0.018,90,1.469,91,0.76,92,1.261,93,0.76,94,3.582,95,1.904,96,1.12,97,1.613,98,1.513,99,2.4,100,0.76,101,1.203,102,1.77,103,2.085,104,1.203,105,0.76,106,0.524,107,0.921,108,1.279,109,1.203,110,1.203,111,1.438,112,1.203,113,1.725,114,1.203,115,1.203,116,0.76,117,1.513,118,1.513,119,1.513,120,0.936,121,1.513,122,1.904,123,1.904,124,0.936,125,0.936,126,1.904,127,1.513,128,0.936,129,0.936,130,0.936,131,1.066,132,0.847,133,0.437,134,1.045,135,2.266,136,0.936,137,1.513,138,0.936,139,0.936,140,0.936,141,2.813,142,1.904,143,2.813,144,0.936,145,0.936,146,1.229,147,0.936,148,2.905,149,3.11,150,2.186,151,1.613,152,0.936,153,0.76,154,0.936,155,0.936,156,0.936,157,2.186,158,0.936,159,1.904,160,0.629,161,0.936,162,0.936,163,0.936,164,1.904,165,2.568,166,2.702,167,0.936,168,2.4,169,1.513,170,0.936,171,1.513,172,2.186,173,2.186,174,1.904,175,2.186,176,2.813,177,2.186,178,0.936,179,1.513,180,0.936,181,2.568,182,0.936,183,1.513,184,0.936,185,0.936,186,0.936,187,1.904,188,0.76,189,0.936,190,0.936,191,0.76,192,1.017,193,1.904,194,1.513,195,0.936,196,0.936,197,1.513,198,0.936,199,0.936,200,0.936,201,1.513,202,0.936,203,1.224,204,0.936,205,0.936,206,0.936,207,0.936,208,0.936,209,0.936,210,0.76,211,0.936,212,0.936,213,1.904,214,0.936,215,0.936,216,0.936,217,1.513,218,0.936,219,0.524,220,0.936,221,0.936,222,0.936,223,1.279,224,0.936,225,1.017,226,1.904,227,0.936,228,0.936,229,0.629,230,1.469,231,0.847,232,0.936,233,0.936,234,0.936,235,0.936,236,0.76,237,0.936,238,1.513,239,0.936,240,0.936,241,1.513,242,1.513,243,1.513,244,0.629,245,0.936,246,0.936,247,0.936,248,0.936,249,1.513,250,1.469,251,0.936,252,0.936,253,1.904,254,0.936,255,0.936,256,0.936,257,0.936,258,0.936,259,0.936,260,0.936,261,1.513,262,1.513,263,0.936,264,0.936,265,1.904,266,0.936,267,0.936,268,0.76,269,0.936,270,0.936,271,0.936,272,1.017,273,0.936,274,0.936,275,0.629,276,0.936,277,0.847,278,0.936,279,2.186,280,0.936,281,1.904,282,0.936,283,0.936,284,0.936,285,0.936,286,0.76,287,1.513,288,0.936,289,0.936,290,1.904,291,0.936,292,0.936,293,0.936,294,0.936,295,0.936,296,0.936,297,0.936,298,0.936,299,0.936,300,0.936,301,0.936,302,0.936,303,0.936,304,0.936,305,0.936,306,0.936,307,0.936,308,0.936,309,0.936,310,1.513,311,1.513,312,0.936,313,1.513,314,1.513,315,0.936,316,0.936,317,0.936,318,0.936,319,0.936]],["title/directives/LoadComponentDirective.html",[21,0.881,33,0.731]],["body/directives/LoadComponentDirective.html",[0,0.553,1,1.083,3,0.579,4,0.475,5,0.475,6,0.912,7,0.712,8,2.404,9,1.006,10,0.579,11,1.013,12,1.038,13,2.274,14,1.216,15,1.119,16,0.073,17,2.414,18,0.688,19,2.596,20,2.517,21,1.013,22,1.083,23,2.073,24,1.763,25,2.274,26,0.475,27,1.215,28,0.839,29,1.215,30,1.763,31,0.809,32,0.298,33,0.84,34,1.215,35,2.055,36,1.307,37,2.073,38,1.898,39,2.073,40,0.815,41,2.073,42,2.073,43,0.579,44,1.216,45,2.274,46,0.988,47,2.073,48,1.216,49,1.215,50,0.699,51,0.839,52,1.763,53,1.216,54,1.216,55,2.274,56,1.216,57,1.763,58,2.073,59,1.216,60,2.274,61,1.216,62,1.216,63,1.216,64,1.216,65,0.84,66,1.216,67,1.216,68,1.216,69,0.699,70,1.216,71,1.216,72,1.216,73,1.216,74,1.216,75,1.763,76,1.216,77,1.216,78,1.216,79,1.216,80,1.216,81,1.763,82,1.216,83,2.274,84,1.216,85,0.839,86,1.216,87,0.028,88,0.041,89,0.028,96,1.307,98,2.17,100,1.216,103,2.887,105,2.274,106,1.568,116,2.517,320,1.924,321,1.497,322,2.789,323,2.789,324,2.789,325,2.789,326,2.17,327,1.924,328,2.789,329,1.924,330,1.924,331,2.789,332,1.924,333,1.924,334,1.924,335,1.924,336,1.924,337,1.497,338,1.924,339,1.924,340,1.924,341,1.497,342,1.924,343,1.924]],["title/modules/PropertyGridModule.html",[344,1.534,345,1.057]],["body/modules/PropertyGridModule.html",[3,0.921,4,0.755,5,0.755,6,0.607,7,0.674,16,0.071,18,1.127,26,0.755,28,1.333,31,1.026,32,0.474,33,1.375,87,0.045,88,0.056,89,0.045,92,1.111,107,0.755,131,1.333,132,1.333,133,1.111,134,1.149,219,2.101,277,1.333,344,1.934,345,2.057,346,1.934,347,1.333,348,2.381,349,3.235,350,2.381,351,2.381,352,3.235,353,2.381,354,2.381,355,2.381,356,2.969,357,2.381,358,1.934,359,3.06,360,3.816,361,2.381,362,3.816,363,2.381,364,2.381,365,3.816,366,2.969,367,3.816,368,3.06]],["title/interfaces/PropertyItemMeta.html",[0,0.481,107,0.599]],["body/interfaces/PropertyItemMeta.html",[0,0.375,1,0.978,2,0.989,3,0.569,4,0.467,5,0.467,6,0.375,7,0.613,10,0.569,11,1,12,0.679,15,1.165,16,0.073,18,0.801,22,0.569,26,0.467,27,1.2,28,0.824,31,0.801,36,0.687,40,0.375,43,0.569,46,0.829,65,0.829,87,0.028,88,0.041,89,0.028,92,0.687,96,1.484,97,0.989,102,1.998,106,2.063,107,0.801,108,1.698,111,1.555,113,1.983,133,0.687,134,0.569,135,1.44,151,1.866,160,0.989,192,1.44,203,1.936,223,0.989,225,2.268,229,2.136,230,1.698,231,1.653,236,2.255,244,2.268,250,0.989,268,2.397,272,0.989,275,0.989,337,2.143,363,1.472,364,1.472,369,1.195,370,2.777,371,2.951,372,2.777,373,2.951,374,2.777,375,2.777,376,2.528,377,2.528,378,2.397,379,1.891,380,1.891,381,1.472,382,1.472,383,1.472,384,1.472,385,2.143,386,1.472,387,1.195,388,1.472,389,1.472,390,1.472,391,2.143,392,1.472,393,1.472,394,1.472,395,1.472,396,1.472,397,1.472,398,1.472,399,1.472,400,1.472,401,1.741,402,1.891,403,2.777,404,1.472,405,1.472,406,1.472,407,1.472,408,2.777,409,2.143,410,2.143,411,2.143,412,1.472,413,2.143,414,1.472,415,3.18,416,2.528,417,1.472,418,2.143,419,1.472,420,1.472,421,1.472,422,1.472,423,1.472,424,1.472]],["title/classes/PropertyValue.html",[32,0.376,277,1.057]],["body/classes/PropertyValue.html",[3,0.372,4,0.305,5,0.305,6,0.621,7,0.698,10,0.372,11,0.722,12,0.615,15,0.824,16,0.074,18,0.704,22,1.164,26,0.305,29,0.539,31,0.615,32,0.386,34,0.539,35,1.363,36,0.722,38,1.591,40,0.394,43,0.75,46,1.099,49,1.783,50,0.905,51,0.539,65,0.942,69,1.644,87,0.018,88,0.029,89,0.018,90,1.303,91,0.782,92,1.136,93,0.782,94,3.491,95,0.962,96,0.905,97,1.303,99,1.547,100,0.782,102,1.642,103,1.805,105,1.256,106,0.866,107,0.975,111,1.363,113,1.636,116,0.782,117,1.547,118,1.547,119,1.547,120,0.962,121,1.547,122,1.94,123,1.94,124,0.962,125,0.962,126,1.94,127,1.547,128,0.962,129,0.962,130,0.962,131,1.086,132,0.866,133,0.449,134,1.19,135,2.278,136,0.962,137,1.547,138,0.962,139,0.962,140,0.962,141,2.842,142,1.94,143,2.842,144,0.962,145,0.962,146,1.256,147,0.962,148,2.933,149,3.133,150,2.222,151,1.636,152,0.962,153,0.782,154,0.962,155,0.962,156,0.962,157,2.222,158,0.962,159,1.94,160,0.647,161,0.962,162,0.962,163,0.962,164,1.94,165,2.6,166,2.733,167,0.962,168,2.434,169,1.547,170,0.962,171,1.547,172,2.222,173,2.222,174,1.94,175,2.222,176,2.842,177,2.222,178,0.962,179,1.547,180,0.962,181,2.6,182,0.962,183,1.547,184,0.962,185,0.962,186,0.962,187,1.94,188,0.782,189,0.962,190,0.962,191,0.782,192,1.039,193,1.94,194,1.547,195,0.962,196,0.962,197,1.547,198,0.962,199,0.962,200,0.962,201,1.547,202,0.962,203,1.244,204,0.962,205,0.962,206,0.962,207,0.962,208,0.962,209,0.962,210,0.782,211,0.962,212,0.962,213,1.94,214,0.962,215,0.962,216,0.962,217,1.547,218,0.962,219,0.539,220,0.962,221,0.962,222,0.962,223,1.303,224,0.962,225,1.039,226,1.94,227,0.962,228,0.962,229,0.647,230,1.493,231,0.866,232,0.962,233,0.962,234,0.962,235,0.962,236,0.782,237,0.962,238,1.547,239,0.962,240,0.962,241,1.547,242,1.547,243,1.547,244,0.647,245,0.962,246,0.962,247,0.962,248,0.962,249,1.547,250,1.493,251,0.962,252,0.962,253,1.94,254,0.962,255,0.962,256,0.962,257,0.962,258,0.962,259,0.962,260,0.962,261,1.547,262,1.547,263,0.962,264,0.962,265,1.94,266,0.962,267,0.962,268,0.782,269,0.962,270,0.962,271,0.962,272,1.039,273,0.962,274,0.962,275,0.647,276,0.962,277,1.086,278,0.962,279,2.222,280,0.962,281,2.222,282,0.962,283,0.962,284,0.962,285,0.962,286,0.782,287,1.547,288,0.962,289,0.962,290,1.94,291,0.962,292,0.962,293,0.962,294,0.962,295,0.962,296,0.962,297,0.962,298,0.962,299,0.962,300,0.962,301,0.962,302,0.962,303,0.962,304,0.962,305,0.962,306,0.962,307,0.962,308,0.962,309,0.962,310,1.547,311,1.547,312,0.962,313,1.547,314,1.547,315,0.962,316,0.962,317,0.962,318,1.547,319,0.962,326,1.547,341,0.962,425,1.237,426,1.237,427,1.237,428,1.237,429,1.237,430,1.237]],["title/interfaces/PropertyValueAccess.html",[0,0.481,85,1.057]],["body/interfaces/PropertyValueAccess.html",[0,0.682,1,1.16,2,1.362,3,0.784,4,0.643,5,0.643,6,0.517,7,0.403,8,1.362,9,1.362,12,1.011,13,2.174,14,1.646,15,0.849,16,0.073,17,2.59,18,0.849,19,2.435,20,2.435,21,1.249,22,1.234,23,2.174,24,2.174,25,2.174,26,0.643,27,1.679,28,1.135,29,1.135,30,1.646,31,0.95,32,0.403,33,0.784,34,1.135,35,1.974,36,1.249,37,1.646,38,1.786,39,1.646,40,0.813,41,1.646,42,1.646,43,0.784,44,1.646,45,2.59,46,1.036,47,2.435,48,1.646,49,1.499,50,0.946,51,1.135,52,1.646,53,1.646,54,1.646,55,1.646,56,1.646,57,1.646,58,2.174,59,1.646,60,1.646,61,1.646,62,1.646,63,1.646,64,1.646,65,1.036,66,1.646,67,1.646,68,1.646,69,0.946,70,1.646,71,1.646,72,1.646,73,1.646,74,1.646,75,1.646,76,1.646,77,1.646,78,1.646,79,1.646,80,1.646,81,2.174,82,1.646,83,1.646,84,1.646,85,1.499,86,2.174,87,0.038,88,0.051,89,0.038]],["title/coverage.html",[431,2.553]],["body/coverage.html",[0,0.839,1,0.957,5,0.785,6,0.936,7,0.731,8,2.212,9,2.212,15,0.785,16,0.07,21,1.155,32,0.605,33,0.957,40,0.631,50,1.155,69,1.713,85,1.386,87,0.047,88,0.058,89,0.047,90,1.663,92,1.645,93,2.673,107,0.785,133,1.419,134,0.957,146,2.01,219,1.386,277,1.386,369,2.47,431,2.475,432,2.475,433,3.18,434,3.18,435,3.908,436,3.908,437,3.908,438,3.18,439,3.18,440,3.18,441,3.18]],["title/dependencies.html",[347,1.268,442,2.042]],["body/dependencies.html",[16,0.07,26,0.917,87,0.055,88,0.063,89,0.055,131,1.62,132,1.62,347,1.869,361,2.893,443,3.718,444,3.718,445,4.288]],["title/index.html",[10,0.615,446,1.29,447,1.29]],["body/index.html",[0,0.408,1,0.62,4,0.508,7,0.711,11,1.063,12,0.915,15,1.123,16,0.072,18,0.915,22,0.881,27,0.897,31,0.722,32,0.319,40,0.408,87,0.043,88,0.043,89,0.03,96,1.424,97,1.076,102,1.617,106,0.897,107,0.508,108,1.781,111,1.484,113,2.279,131,1.484,132,1.484,134,0.62,135,2.13,151,2.05,153,2.478,160,1.781,188,1.301,192,1.781,203,1.899,223,1.94,225,1.94,230,1.076,231,1.617,244,2.338,250,1.076,286,2.575,321,3.05,345,0.897,347,0.897,366,1.602,370,2.278,371,3.261,372,1.602,373,2.651,374,2.278,376,1.602,377,3.05,378,2.478,381,3.17,382,2.278,383,2.278,384,2.278,385,2.887,386,2.278,387,2.345,388,2.278,389,1.602,390,1.602,391,2.651,392,1.602,393,2.278,394,2.278,395,2.278,396,2.278,397,2.651,398,2.278,399,1.602,400,1.602,401,1.85,446,1.301,447,1.301,448,2.058,449,2.058,450,3.406,451,2.927,452,2.058,453,2.058,454,2.058,455,2.058,456,2.058,457,2.058,458,2.058,459,2.058,460,2.058,461,2.058,462,2.058,463,2.058,464,2.058,465,2.058,466,2.058,467,2.058,468,2.058,469,2.058,470,2.058,471,2.058,472,2.058,473,3.92,474,3.71,475,1.602,476,2.058,477,2.058,478,2.058,479,2.058,480,2.058,481,2.058,482,2.058,483,2.927,484,2.927,485,3.406,486,2.927,487,2.058,488,3.406,489,2.058,490,2.927,491,2.058,492,2.058,493,2.058,494,2.058,495,2.058,496,2.058,497,2.058,498,2.058,499,1.602,500,2.058,501,2.058,502,2.058,503,2.058,504,1.602,505,2.058,506,2.927,507,2.058,508,2.058,509,2.058,510,2.058,511,2.058,512,2.058,513,2.058]],["title/license.html",[446,1.29,447,1.29,514,1.589]],["body/license.html",[16,0.057,87,0.046,88,0.057,89,0.046,358,1.973,387,1.973,432,2.43,475,3.006,499,2.43,504,2.43,514,2.43,515,3.122,516,4.195,517,3.122,518,3.122,519,3.122,520,3.863,521,3.122,522,3.122,523,3.122,524,3.122,525,3.122,526,3.122,527,3.863,528,4.738,529,3.122,530,3.122,531,3.122,532,4.195,533,3.122,534,3.863,535,3.122,536,3.122,537,3.122,538,3.122,539,3.122,540,3.122,541,3.122,542,3.122,543,3.122,544,3.863,545,3.122,546,3.122,547,3.122,548,3.122,549,3.122,550,3.863,551,3.863,552,3.122,553,3.122,554,3.122,555,3.122,556,3.122,557,3.122,558,3.122,559,3.122,560,3.122,561,3.122,562,3.122,563,3.122,564,3.122,565,3.122,566,3.122,567,3.122,568,3.122,569,3.122,570,3.122,571,3.122,572,3.122,573,3.122,574,3.122,575,3.122,576,3.122,577,3.122,578,3.122,579,3.122,580,3.122]],["title/modules.html",[346,2.074]],["body/modules.html",[16,0.064,87,0.056,88,0.064,89,0.056,345,1.648,346,2.39,581,3.782,582,3.782,583,3.782,584,3.782]],["title/overview.html",[585,2.553]],["body/overview.html",[2,1.805,16,0.068,21,1.253,33,1.319,40,0.685,87,0.051,88,0.06,89,0.051,91,2.181,191,2.181,210,2.77,219,2.069,344,2.595,345,2.069,347,1.504,348,2.686,349,2.686,350,2.686,351,2.686,352,2.686,353,2.686,354,2.686,355,2.686,356,3.195,357,2.686,358,2.181,585,2.686,586,3.451]],["title/miscellaneous/variables.html",[587,1.589,588,2.265]],["body/miscellaneous/variables.html",[6,0.577,7,0.451,10,0.876,12,0.718,16,0.074,43,0.876,46,1.113,65,0.876,87,0.043,88,0.054,89,0.043,92,1.057,96,1.342,102,1.268,107,0.718,108,1.522,111,1.611,133,1.342,134,1.113,203,1.268,229,2.124,231,1.268,272,1.522,275,1.522,369,2.336,375,2.264,378,1.839,401,1.839,403,3.326,404,2.264,405,2.264,406,2.264,407,2.264,408,3.326,409,2.876,410,2.876,411,2.876,412,2.264,413,2.876,414,2.264,415,3.565,416,3.161,417,2.264,418,2.876,419,2.264,420,2.264,421,2.264,422,2.264,423,2.264,424,2.264,587,2.264,588,2.264,589,2.91]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":69,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["0.07",{"_index":209,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["0.1",{"_index":177,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["0/1",{"_index":437,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":438,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":210,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"overview.html":{}}}],["1.1.1",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":176,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["100",{"_index":179,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["10px",{"_index":186,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["12",{"_index":190,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["120px",{"_index":233,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["12px",{"_index":167,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["14",{"_index":188,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["18px",{"_index":189,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["1px",{"_index":143,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["2",{"_index":191,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"overview.html":{}}}],["2020",{"_index":518,"title":{},"body":{"license.html":{}}}],["20px",{"_index":197,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["2px",{"_index":164,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["3",{"_index":586,"title":{},"body":{"overview.html":{}}}],["3px",{"_index":174,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["51f41c",{"_index":482,"title":{},"body":{"index.html":{}}}],["5px",{"_index":149,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["616161",{"_index":156,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["6px",{"_index":185,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["8px",{"_index":158,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["9.1.4",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["95b8e7",{"_index":144,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["__meta__",{"_index":415,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["_blank",{"_index":270,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["_controlvaluechangefn",{"_index":37,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["_meta",{"_index":221,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["_options",{"_index":220,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["_templateloaded",{"_index":222,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["_value",{"_index":39,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["a.order",{"_index":304,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["above",{"_index":499,"title":{},"body":{"index.html":{},"license.html":{}}}],["accessors",{"_index":326,"title":{},"body":{"directives/LoadComponentDirective.html":{},"classes/PropertyValue.html":{}}}],["action",{"_index":574,"title":{},"body":{"license.html":{}}}],["additional",{"_index":489,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":406,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["aftercontentinit",{"_index":117,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["afterviewinit",{"_index":118,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["and/or",{"_index":542,"title":{},"body":{"license.html":{}}}],["angular",{"_index":451,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":129,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["angular/common",{"_index":361,"title":{},"body":{"modules/PropertyGridModule.html":{},"dependencies.html":{}}}],["angular/core",{"_index":26,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":28,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{}}}],["angular9",{"_index":464,"title":{},"body":{"index.html":{}}}],["angularjs",{"_index":491,"title":{},"body":{"index.html":{}}}],["animate",{"_index":125,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["animate('400ms",{"_index":206,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["animate(100",{"_index":217,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["animation,you",{"_index":467,"title":{},"body":{"index.html":{}}}],["animations",{"_index":198,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["any).key",{"_index":407,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["app.module.ts",{"_index":469,"title":{},"body":{"index.html":{}}}],["arising",{"_index":578,"title":{},"body":{"license.html":{}}}],["array",{"_index":511,"title":{},"body":{"index.html":{}}}],["associated",{"_index":529,"title":{},"body":{"license.html":{}}}],["authors",{"_index":568,"title":{},"body":{"license.html":{}}}],["auto",{"_index":379,"title":{},"body":{"interfaces/PropertyItemMeta.html":{}}}],["b",{"_index":303,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["b.order",{"_index":305,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["backbone",{"_index":493,"title":{},"body":{"index.html":{}}}],["backbone.js",{"_index":492,"title":{},"body":{"index.html":{}}}],["background",{"_index":150,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["basic",{"_index":471,"title":{},"body":{"index.html":{}}}],["belongs",{"_index":386,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["bezier(0.86",{"_index":208,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["bold",{"_index":155,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["boolean",{"_index":225,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["bootstrap",{"_index":350,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["border",{"_index":141,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["both",{"_index":394,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["bottom",{"_index":159,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["box",{"_index":172,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["browse",{"_index":584,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":581,"title":{},"body":{"modules.html":{}}}],["browseranimationsmodule",{"_index":468,"title":{},"body":{"index.html":{}}}],["buildcomponent",{"_index":60,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["c",{"_index":517,"title":{},"body":{"license.html":{}}}],["card",{"_index":183,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["cardstyle",{"_index":234,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["case",{"_index":509,"title":{},"body":{"index.html":{}}}],["catch",{"_index":71,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ccc",{"_index":163,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["cdr",{"_index":252,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["changedetectorref",{"_index":119,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["charge",{"_index":524,"title":{},"body":{"license.html":{}}}],["checkbox",{"_index":377,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["claim",{"_index":571,"title":{},"body":{"license.html":{}}}],["class",{"_index":32,"title":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":91,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"overview.html":{}}}],["cluster_propertygridmodule",{"_index":353,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["cluster_propertygridmodule_declarations",{"_index":354,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["cluster_propertygridmodule_exports",{"_index":355,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["code",{"_index":477,"title":{},"body":{"index.html":{}}}],["color",{"_index":151,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["colspan2",{"_index":370,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["columns",{"_index":395,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["commonmodule",{"_index":360,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["component",{"_index":40,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component.directive",{"_index":364,"title":{},"body":{"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{}}}],["component.directive.ts",{"_index":9,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["component.directive.ts:17",{"_index":338,"title":{},"body":{"directives/LoadComponentDirective.html":{}}}],["component.directive.ts:18",{"_index":339,"title":{},"body":{"directives/LoadComponentDirective.html":{}}}],["component.directive.ts:20",{"_index":340,"title":{},"body":{"directives/LoadComponentDirective.html":{}}}],["component.directive.ts:22",{"_index":330,"title":{},"body":{"directives/LoadComponentDirective.html":{}}}],["component.directive.ts:25",{"_index":329,"title":{},"body":{"directives/LoadComponentDirective.html":{}}}],["component.directive.ts:28",{"_index":331,"title":{},"body":{"directives/LoadComponentDirective.html":{}}}],["component.directive.ts:34",{"_index":342,"title":{},"body":{"directives/LoadComponentDirective.html":{}}}],["component.directive.ts:39",{"_index":328,"title":{},"body":{"directives/LoadComponentDirective.html":{}}}],["component.directive.ts:46",{"_index":335,"title":{},"body":{"directives/LoadComponentDirective.html":{}}}],["component.directive.ts:50",{"_index":336,"title":{},"body":{"directives/LoadComponentDirective.html":{}}}],["component.directive.ts:55",{"_index":332,"title":{},"body":{"directives/LoadComponentDirective.html":{}}}],["component.directive.ts:72",{"_index":334,"title":{},"body":{"directives/LoadComponentDirective.html":{}}}],["component.directive.ts:86",{"_index":333,"title":{},"body":{"directives/LoadComponentDirective.html":{}}}],["component.instance.registeronchange",{"_index":77,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.registeronchange(this._controlvaluechangefn",{"_index":78,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.value",{"_index":76,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.valuechange",{"_index":79,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.valuechange.subscribe(this._controlvaluechangefn",{"_index":80,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["componentfactory",{"_index":66,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["componentfactoryresolver",{"_index":19,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["componentoptions",{"_index":42,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["componentref",{"_index":20,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["componenttype",{"_index":41,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["conditions",{"_index":549,"title":{},"body":{"license.html":{}}}],["connection",{"_index":579,"title":{},"body":{"license.html":{}}}],["console.error('load",{"_index":72,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["console.error(e",{"_index":74,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["const",{"_index":65,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":100,"title":{},"body":{"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"classes/PropertyValue.html":{}}}],["constructor(el",{"_index":251,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["constructor(entry",{"_index":327,"title":{},"body":{"directives/LoadComponentDirective.html":{}}}],["constructor(name",{"_index":101,"title":{},"body":{"classes/InternalGroup.html":{}}}],["constructor(o",{"_index":425,"title":{},"body":{"classes/PropertyValue.html":{}}}],["constructor(private",{"_index":51,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["constructor(public",{"_index":319,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["contains",{"_index":510,"title":{},"body":{"index.html":{}}}],["contentchildren",{"_index":120,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["contentchildren(ngxtemplate",{"_index":247,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["continue",{"_index":290,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["contract",{"_index":575,"title":{},"body":{"license.html":{}}}],["control",{"_index":161,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["controlvalueaccessor",{"_index":27,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["convert",{"_index":399,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["convertvalue(meta",{"_index":280,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["copies",{"_index":544,"title":{},"body":{"license.html":{}}}],["copy",{"_index":527,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":516,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":431,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":461,"title":{},"body":{"index.html":{}}}],["cubic",{"_index":207,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["custom",{"_index":391,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["d6d6d678",{"_index":145,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["damages",{"_index":572,"title":{},"body":{"license.html":{}}}],["date",{"_index":376,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["dbdbdb",{"_index":182,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["deal",{"_index":531,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":580,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":349,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["declare",{"_index":494,"title":{},"body":{"index.html":{}}}],["default",{"_index":108,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaulttemplates",{"_index":246,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["defined",{"_index":103,"title":{},"body":{"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"classes/PropertyValue.html":{}}}],["demo",{"_index":496,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":347,"title":{"dependencies.html":{}},"body":{"modules/PropertyGridModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["describe",{"_index":501,"title":{},"body":{"index.html":{}}}],["description",{"_index":371,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["destroycomponent",{"_index":83,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["directive",{"_index":21,"title":{"directives/LoadComponentDirective.html":{}},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":320,"title":{},"body":{"directives/LoadComponentDirective.html":{}}}],["display",{"_index":192,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["distribute",{"_index":540,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":432,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dotted",{"_index":162,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["dropdown",{"_index":507,"title":{},"body":{"index.html":{}}}],["e",{"_index":58,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["each",{"_index":502,"title":{},"body":{"index.html":{}}}],["edit",{"_index":459,"title":{},"body":{"index.html":{}}}],["editor",{"_index":474,"title":{},"body":{"index.html":{}}}],["eg",{"_index":400,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["el.nativeelement.parentelement",{"_index":254,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["el.nativeelement.parentelement.classlist",{"_index":255,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["el.nativeelement.parentelement.classlist.contains('internal",{"_index":256,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["element",{"_index":384,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["elementref",{"_index":121,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["endregion",{"_index":414,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["entry",{"_index":52,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["enumerable",{"_index":424,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":73,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["event",{"_index":567,"title":{},"body":{"license.html":{}}}],["eventemitter",{"_index":17,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["example",{"_index":498,"title":{},"body":{"index.html":{}}}],["exampleeditoroptions",{"_index":472,"title":{},"body":{"index.html":{}}}],["excellent",{"_index":454,"title":{},"body":{"index.html":{}}}],["export",{"_index":31,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["exports",{"_index":352,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["express",{"_index":558,"title":{},"body":{"license.html":{}}}],["extends",{"_index":86,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["f5f5f5",{"_index":170,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["false",{"_index":223,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["fff",{"_index":184,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["files",{"_index":530,"title":{},"body":{"license.html":{}}}],["fitness",{"_index":563,"title":{},"body":{"license.html":{}}}],["flex",{"_index":193,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["flow",{"_index":194,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["following",{"_index":504,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":153,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["fontcolor",{"_index":481,"title":{},"body":{"index.html":{}}}],["fontsize",{"_index":480,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":367,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["framework",{"_index":488,"title":{},"body":{"index.html":{}}}],["free",{"_index":523,"title":{},"body":{"license.html":{}}}],["function",{"_index":337,"title":{},"body":{"directives/LoadComponentDirective.html":{},"interfaces/PropertyItemMeta.html":{}}}],["furnished",{"_index":547,"title":{},"body":{"license.html":{}}}],["generate",{"_index":380,"title":{},"body":{"interfaces/PropertyItemMeta.html":{}}}],["gettemplate(type",{"_index":271,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["getting",{"_index":446,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getvalue",{"_index":341,"title":{},"body":{"directives/LoadComponentDirective.html":{},"classes/PropertyValue.html":{}}}],["give",{"_index":457,"title":{},"body":{"index.html":{}}}],["granted",{"_index":522,"title":{},"body":{"license.html":{}}}],["grid",{"_index":135,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["grid.component",{"_index":365,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["grid.component.ts",{"_index":93,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"coverage.html":{}}}],["grid.component.ts:388",{"_index":428,"title":{},"body":{"classes/PropertyValue.html":{}}}],["grid.component.ts:392",{"_index":430,"title":{},"body":{"classes/PropertyValue.html":{}}}],["grid.component.ts:394",{"_index":426,"title":{},"body":{"classes/PropertyValue.html":{}}}],["grid.component.ts:396",{"_index":427,"title":{},"body":{"classes/PropertyValue.html":{}}}],["grid.component.ts:401",{"_index":109,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:402",{"_index":114,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:404",{"_index":112,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:406",{"_index":115,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:408",{"_index":104,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:410",{"_index":110,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.module.ts",{"_index":359,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["grid/src/lib/load",{"_index":8,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["grid/src/lib/property",{"_index":92,"title":{},"body":{"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":113,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["group.items.push(v",{"_index":300,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["group.name",{"_index":136,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["groupcollapse",{"_index":235,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["groups",{"_index":249,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["groups.filter(o",{"_index":307,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["groups.find(o",{"_index":295,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["groups.foreach(o",{"_index":301,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["groups.push(group",{"_index":299,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["header",{"_index":169,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["height",{"_index":201,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["help",{"_index":402,"title":{},"body":{"interfaces/PropertyItemMeta.html":{}}}],["hereby",{"_index":521,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":203,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["hidden/visible",{"_index":389,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["hint",{"_index":383,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["holders",{"_index":569,"title":{},"body":{"license.html":{}}}],["html",{"_index":470,"title":{},"body":{"index.html":{}}}],["icustomdynamiccomponent",{"_index":1,"title":{"interfaces/ICustomDynamicComponent.html":{}},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{}}}],["identifier",{"_index":433,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":392,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["implements",{"_index":34,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["implied",{"_index":559,"title":{},"body":{"license.html":{}}}],["import",{"_index":18,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["imports",{"_index":368,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["include",{"_index":486,"title":{},"body":{"index.html":{}}}],["included",{"_index":552,"title":{},"body":{"license.html":{}}}],["including",{"_index":534,"title":{},"body":{"license.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["init",{"_index":390,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["initcomponent",{"_index":322,"title":{},"body":{"directives/LoadComponentDirective.html":{}}}],["initcomponent(component",{"_index":75,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["initmeta",{"_index":285,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["initstate",{"_index":372,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["input",{"_index":22,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["inputs",{"_index":324,"title":{},"body":{"directives/LoadComponentDirective.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{}},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"overview.html":{}}}],["internal",{"_index":165,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["internalgroup",{"_index":90,"title":{"classes/InternalGroup.html":{}},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"coverage.html":{}}}],["internalgroup(undefined",{"_index":288,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["internalgroup(v.group",{"_index":298,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["isinternal",{"_index":227,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["it's",{"_index":500,"title":{},"body":{"index.html":{}}}],["item",{"_index":133,"title":{},"body":{"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["item.name",{"_index":137,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["item.template",{"_index":262,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["itemmeta",{"_index":403,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.initstate",{"_index":410,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.order",{"_index":411,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.showhelp",{"_index":413,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.type",{"_index":408,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.valueconvert",{"_index":409,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["items",{"_index":95,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["jquery",{"_index":483,"title":{},"body":{"index.html":{}}}],["key",{"_index":229,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":557,"title":{},"body":{"license.html":{}}}],["label",{"_index":160,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["labelwidth",{"_index":232,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["left",{"_index":171,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["legend",{"_index":348,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["liability",{"_index":573,"title":{},"body":{"license.html":{}}}],["liable",{"_index":570,"title":{},"body":{"license.html":{}}}],["license",{"_index":514,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":535,"title":{},"body":{"license.html":{}}}],["limited",{"_index":560,"title":{},"body":{"license.html":{}}}],["link",{"_index":268,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{}}}],["list",{"_index":508,"title":{},"body":{"index.html":{}}}],["live",{"_index":495,"title":{},"body":{"index.html":{}}}],["load",{"_index":363,"title":{},"body":{"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{}}}],["loadcomponent",{"_index":30,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["loadcomponentdirective",{"_index":33,"title":{"directives/LoadComponentDirective.html":{}},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":166,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["matching",{"_index":88,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":562,"title":{},"body":{"license.html":{}}}],["merge",{"_index":538,"title":{},"body":{"license.html":{}}}],["meta",{"_index":134,"title":{},"body":{"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["meta(v",{"_index":237,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["meta({name",{"_index":473,"title":{},"body":{"index.html":{}}}],["meta.hasownproperty(i",{"_index":289,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["meta.ts",{"_index":369,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meta.valueconvert",{"_index":283,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["meta.valueconvert(val",{"_index":284,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["meta[i",{"_index":291,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["metadata",{"_index":321,"title":{},"body":{"directives/LoadComponentDirective.html":{},"index.html":{}}}],["methods",{"_index":98,"title":{},"body":{"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{}}}],["miscellaneous",{"_index":587,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":515,"title":{},"body":{"license.html":{}}}],["modernizr",{"_index":485,"title":{},"body":{"index.html":{}}}],["modify",{"_index":537,"title":{},"body":{"license.html":{}}}],["module",{"_index":344,"title":{"modules/PropertyGridModule.html":{}},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["modules",{"_index":346,"title":{"modules.html":{}},"body":{"modules/PropertyGridModule.html":{},"modules.html":{}}}],["name",{"_index":96,"title":{},"body":{"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name/label",{"_index":396,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["need",{"_index":466,"title":{},"body":{"index.html":{}}}],["new",{"_index":50,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["ngaftercontentinit",{"_index":264,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["ngafterviewinit",{"_index":257,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["ngmodule",{"_index":362,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["ngoninit",{"_index":55,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ngx",{"_index":131,"title":{},"body":{"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{},"dependencies.html":{},"index.html":{}}}],["ngxpropertygrid",{"_index":448,"title":{},"body":{"index.html":{}}}],["ngxtemplate",{"_index":130,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["ngxtemplatemodule",{"_index":366,"title":{},"body":{"modules/PropertyGridModule.html":{},"index.html":{}}}],["none",{"_index":490,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":566,"title":{},"body":{"license.html":{}}}],["notice",{"_index":550,"title":{},"body":{"license.html":{}}}],["number",{"_index":231,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["number.max_value",{"_index":412,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["o",{"_index":318,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["o.items.length",{"_index":308,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["o.items.sort((a",{"_index":302,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["o.name",{"_index":296,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["object",{"_index":286,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["object.assign(component.instance",{"_index":82,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["object.create(object.getprototypeof(__meta__",{"_index":419,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["object.defineproperty(__meta__",{"_index":423,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["object.defineproperty(submeta",{"_index":421,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["object.getownpropertydescriptor(__meta__",{"_index":422,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["object.getownpropertynames(__meta__).foreach(name",{"_index":420,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":526,"title":{},"body":{"license.html":{}}}],["omitted",{"_index":388,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["oninit",{"_index":23,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["online",{"_index":463,"title":{},"body":{"index.html":{}}}],["onvaluechange",{"_index":323,"title":{},"body":{"directives/LoadComponentDirective.html":{}}}],["onvaluechange(e",{"_index":57,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["openlink(link",{"_index":267,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["optional",{"_index":106,"title":{},"body":{"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["optionlabel(option",{"_index":139,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["optionlabel(v",{"_index":309,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["options",{"_index":244,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["options(v",{"_index":240,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["optionvalue(v",{"_index":312,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["order",{"_index":373,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["otherwise",{"_index":577,"title":{},"body":{"license.html":{}}}],["out",{"_index":358,"title":{},"body":{"modules/PropertyGridModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":24,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["outputs",{"_index":325,"title":{},"body":{"directives/LoadComponentDirective.html":{}}}],["overflow",{"_index":202,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["overview",{"_index":585,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.value",{"_index":138,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["package",{"_index":442,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":148,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["page",{"_index":487,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":105,"title":{},"body":{"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"classes/PropertyValue.html":{}}}],["parseint",{"_index":401,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["particular",{"_index":564,"title":{},"body":{"license.html":{}}}],["peer",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["permission",{"_index":520,"title":{},"body":{"license.html":{}}}],["permit",{"_index":545,"title":{},"body":{"license.html":{}}}],["person",{"_index":525,"title":{},"body":{"license.html":{}}}],["persons",{"_index":546,"title":{},"body":{"license.html":{}}}],["play",{"_index":462,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":484,"title":{},"body":{"index.html":{}}}],["pojos",{"_index":453,"title":{},"body":{"index.html":{}}}],["portions",{"_index":554,"title":{},"body":{"license.html":{}}}],["private",{"_index":35,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["pro",{"_index":478,"title":{},"body":{"index.html":{}}}],["projects/.../property",{"_index":589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/ngx",{"_index":6,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":11,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["property",{"_index":7,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propertygridcomponent",{"_index":219,"title":{},"body":{"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"overview.html":{}}}],["propertygridmodule",{"_index":345,"title":{"modules/PropertyGridModule.html":{}},"body":{"modules/PropertyGridModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["propertyitemmeta",{"_index":107,"title":{"interfaces/PropertyItemMeta.html":{}},"body":{"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propertykey",{"_index":375,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["propertyvalue",{"_index":277,"title":{"classes/PropertyValue.html":{}},"body":{"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{},"coverage.html":{}}}],["propertyvalue(meta",{"_index":276,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["propertyvalue(this.options",{"_index":278,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["propertyvalueaccess",{"_index":85,"title":{"interfaces/PropertyValueAccess.html":{}},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["proprty",{"_index":503,"title":{},"body":{"index.html":{}}}],["provided",{"_index":555,"title":{},"body":{"license.html":{}}}],["providers",{"_index":351,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["public",{"_index":94,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["publish",{"_index":539,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":565,"title":{},"body":{"license.html":{}}}],["querylist",{"_index":122,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["read",{"_index":513,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":36,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["region",{"_index":405,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":357,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["restriction",{"_index":533,"title":{},"body":{"license.html":{}}}],["result",{"_index":87,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":89,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":49,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["returns",{"_index":116,"title":{},"body":{"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"classes/PropertyValue.html":{}}}],["rgba(0",{"_index":187,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["rgba(10",{"_index":175,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["right",{"_index":180,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["rights",{"_index":536,"title":{},"body":{"license.html":{}}}],["row",{"_index":195,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["seen",{"_index":497,"title":{},"body":{"index.html":{}}}],["selector",{"_index":29,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["sell",{"_index":543,"title":{},"body":{"license.html":{}}}],["set",{"_index":43,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"miscellaneous/variables.html":{}}}],["settings",{"_index":455,"title":{},"body":{"index.html":{}}}],["setvalue(v",{"_index":343,"title":{},"body":{"directives/LoadComponentDirective.html":{}}}],["setvalue(val",{"_index":429,"title":{},"body":{"classes/PropertyValue.html":{}}}],["shadow",{"_index":173,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["shall",{"_index":551,"title":{},"body":{"license.html":{}}}],["showhelp",{"_index":236,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{}}}],["simple",{"_index":450,"title":{},"body":{"index.html":{}}}],["simpletexteditorcomponent",{"_index":476,"title":{},"body":{"index.html":{}}}],["size",{"_index":479,"title":{},"body":{"index.html":{}}}],["small",{"_index":449,"title":{},"body":{"index.html":{}}}],["software",{"_index":528,"title":{},"body":{"license.html":{}}}],["solid",{"_index":142,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["spacing",{"_index":147,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["span",{"_index":385,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["started",{"_index":447,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":97,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["state('hidden",{"_index":200,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["state('in",{"_index":212,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["state('visible",{"_index":204,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["statements",{"_index":434,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":102,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":126,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["style({transform",{"_index":213,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["styles",{"_index":140,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["subitems",{"_index":250,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["subitems.push(v",{"_index":294,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["subject",{"_index":548,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":541,"title":{},"body":{"license.html":{}}}],["submeta",{"_index":418,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["substantial",{"_index":553,"title":{},"body":{"license.html":{}}}],["support",{"_index":582,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":505,"title":{},"body":{"index.html":{}}}],["svg",{"_index":583,"title":{},"body":{"modules.html":{}}}],["table",{"_index":146,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":404,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["target.__meta__",{"_index":416,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["target.__proto__.__meta__",{"_index":417,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":132,"title":{},"body":{"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{},"dependencies.html":{},"index.html":{}}}],["templateloaded",{"_index":224,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["templatemap",{"_index":228,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["templateref",{"_index":123,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["templates",{"_index":248,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["text",{"_index":378,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["textarea",{"_index":398,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["textbox",{"_index":506,"title":{},"body":{"index.html":{}}}],["that's",{"_index":460,"title":{},"body":{"index.html":{}}}],["this._controlvaluechangefn",{"_index":53,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this._meta",{"_index":238,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this._options",{"_index":241,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this._templateloaded",{"_index":226,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this._value",{"_index":45,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.buildcomponent",{"_index":56,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.cdr.detectchanges",{"_index":263,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.component",{"_index":47,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.component.destroy",{"_index":84,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.component.instance.value",{"_index":48,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(this.componenttype",{"_index":67,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.componentoptions",{"_index":81,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.componenttype",{"_index":61,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.defaulttemplates",{"_index":258,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.defaulttemplates.foreach((item",{"_index":259,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.destroycomponent",{"_index":63,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.entry.clear",{"_index":64,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.entry.createcomponent(componentfactory",{"_index":68,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.groups",{"_index":306,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.initcomponent(component",{"_index":70,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.initmeta",{"_index":239,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.isinternal",{"_index":253,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.meta",{"_index":243,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.meta.valueconvert",{"_index":316,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.meta.valueconvert(val",{"_index":317,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.o[this.meta.key",{"_index":314,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.onvaluechange(value",{"_index":54,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.options[meta.key",{"_index":282,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.state",{"_index":279,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.subitems",{"_index":287,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap",{"_index":265,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap.default",{"_index":274,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap.hasownproperty(item.name",{"_index":260,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap[item.name",{"_index":261,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap[type",{"_index":273,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.templates.foreach((item",{"_index":266,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.valuechange.emit(e",{"_index":59,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["toggle",{"_index":99,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["tooltip",{"_index":382,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["top",{"_index":157,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["tort",{"_index":576,"title":{},"body":{"license.html":{}}}],["transition",{"_index":127,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["transition('visible",{"_index":205,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["transition('void",{"_index":215,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["translatex",{"_index":216,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["translatex(0",{"_index":214,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["translatex(100",{"_index":218,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["trigger",{"_index":128,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["trigger('collapseanimation",{"_index":199,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["trigger('flyinout",{"_index":211,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["true",{"_index":111,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["true/false",{"_index":393,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["try",{"_index":62,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["tvalue",{"_index":14,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{}}}],["typeof",{"_index":272,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":275,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"miscellaneous/variables.html":{}}}],["uneditable",{"_index":512,"title":{},"body":{"index.html":{}}}],["unset",{"_index":181,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["usage",{"_index":465,"title":{},"body":{"index.html":{}}}],["use",{"_index":475,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":381,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["useful",{"_index":397,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["user",{"_index":458,"title":{},"body":{"index.html":{}}}],["v",{"_index":46,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"miscellaneous/variables.html":{}}}],["v.__meta__",{"_index":242,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["v.group",{"_index":297,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["v.hidden",{"_index":292,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["v.label",{"_index":311,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["v.text",{"_index":310,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["v.type",{"_index":293,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["v.value",{"_index":313,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["val",{"_index":281,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["value",{"_index":12,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value(v",{"_index":44,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["value(val",{"_index":315,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["valuechange",{"_index":13,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["valueconvert",{"_index":374,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["variable",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":588,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["view/edit",{"_index":452,"title":{},"body":{"index.html":{}}}],["viewchildren",{"_index":124,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["viewchildren(ngxtemplate",{"_index":245,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["viewcontainerref",{"_index":25,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"directives/LoadComponentDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["visible",{"_index":230,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["void",{"_index":38,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"directives/LoadComponentDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["want",{"_index":456,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":561,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":556,"title":{},"body":{"license.html":{}}}],["webkit",{"_index":178,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["weight",{"_index":154,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["whether",{"_index":387,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{},"license.html":{}}}],["white",{"_index":152,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["width",{"_index":168,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["window.open(link",{"_index":269,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["without",{"_index":532,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":196,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["yish",{"_index":519,"title":{},"body":{"license.html":{}}}],["zoom",{"_index":356,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ICustomDynamicComponent.html":{"url":"interfaces/ICustomDynamicComponent.html","title":"interface - ICustomDynamicComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICustomDynamicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/load-component.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        valueChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     TValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueChange\n                                    \n                                \n                                \n                                    \n                                        valueChange:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef, Directive,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\n\n@Directive({\n    selector: '[loadComponent]',\n})\nexport class LoadComponentDirective implements OnInit, ICustomDynamicComponent {\n    private readonly _controlValueChangeFn: (value: any) => void;\n    private _value: any;\n\n    private component: ComponentRef>;\n\n    @Input() componentType: Type;\n\n    @Input()\n    componentOptions: any;\n\n    @Input()\n    set value(v: any) {\n        this._value = v;\n        if (this.component) {\n            this.component.instance.value =  v;\n        }\n    }\n    get value(): any {\n        return this._value;\n    }\n\n    @Output()\n    readonly valueChange: EventEmitter = new EventEmitter();\n\n\n    constructor(private entry: ViewContainerRef, private componentFactoryResolver: ComponentFactoryResolver) {\n        this._controlValueChangeFn = (value: any) => this.onValueChange(value);\n    }\n\n    ngOnInit() {\n        this.buildComponent();\n    }\n\n    private onValueChange(e: any): void {\n        this._value = e;\n        this.valueChange.emit(e);\n    }\n\n    private buildComponent(): void {\n        if (!this.componentType) {\n            return;\n        }\n        try {\n            this.destroyComponent();\n            // this.entry.clear();\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\n            const component = this.entry.createComponent(componentFactory, 0);\n            this.initComponent(component);\n            this.component = component;\n        } catch (e) {\n            console.error('load component error.');\n            console.error(e);\n        }\n    }\n\n    private initComponent(component: ComponentRef) {\n        component.instance.value = this._value;\n        if (component.instance.registerOnChange) {\n            component.instance.registerOnChange(this._controlValueChangeFn);\n        }\n        if (component.instance.valueChange) {\n            component.instance.valueChange.subscribe(this._controlValueChangeFn);\n        }\n\n        if (this.componentOptions) {\n            Object.assign(component.instance, this.componentOptions);\n        }\n    }\n\n    private destroyComponent(): void {\n        if (this.component) {\n            this.component.destroy();\n        }\n    }\n}\n\nexport interface PropertyValueAccess extends ControlValueAccessor, ICustomDynamicComponent {\n}\n\nexport interface ICustomDynamicComponent {\n    value: TValue;\n    valueChange: EventEmitter;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InternalGroup.html":{"url":"classes/InternalGroup.html","title":"class - InternalGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InternalGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/property-grid.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                items\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                state\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:408\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PropertyItemMeta[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:401\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:410\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:404\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'group'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:402\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:406\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AfterContentInit, AfterViewInit, ChangeDetectorRef,\n  Component,\n  ContentChildren, ElementRef,\n  Input,\n  QueryList,\n  TemplateRef, ViewChildren\n} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {NgxTemplate} from 'ngx-template';\nimport {PropertyItemMeta} from './property-item-meta';\n\n@Component({\n  selector: 'ngx-property-grid',\n  template: `\n    \n      \n        \n          \n          \n            \n              {{group.name}}\n            \n\n            \n              \n                \n                  {{item.name}}\n                  [?]\n                \n                \n                  \n                  \n                \n              \n              \n                \n              \n            \n          \n          \n        \n      \n\n      \n        \n          {{item.name}}\n        \n        \n        \n      \n    \n\n\n    \n      \n        \n        \n        \n        \n      \n    \n\n\n    \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        {{p.value}}\n      \n\n      \n        \n      \n\n      \n        \n          \n            {{optionLabel(option)}}\n          \n        \n      \n    \n  `,\n  styles: [\n      `\n      .property-grid {\n        /*border: solid 1px #95B8E7;*/\n      }\n\n      .property-grid-border {\n        border: 1px solid #d6d6d678\n      }\n\n      .property-grid-table {\n        border-spacing: 0;\n        padding: 5px\n      }\n\n      .property-grid-group {\n        background-color: white;\n        font-weight: bold;\n        color: #616161;\n        padding-top: 8px;\n        padding-bottom: 5px;\n      }\n\n      .property-grid-label, .property-grid-control {\n        border: dotted 1px #ccc;\n        padding: 2px 5px;\n      }\n\n      .internal-property-grid {\n        margin-top: 12px;\n      }\n\n      .internal-property-grid .property-grid {\n        border-width: 0;\n      }\n\n      .internal-property-grid .property-grid-header {\n        margin-bottom: 5px;\n        background-color: #f5f5f5;\n        padding-bottom: 5px;\n        padding-top: 5px;\n        padding-left: 5px;\n        box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n        -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n        width: 100%;\n      }\n\n      .internal-property-grid .property-grid-header-margin {\n        margin-left: 5px;\n        margin-right: 5px;\n        width: unset;\n      }\n\n      .internal-property-grid .property-grid-table {\n        border-width: 0;\n        /*border-top: 1px solid #dbdbdb;*/\n      }\n\n      .card {\n        background-color: #fff;\n        box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n        display: flex;\n        flex-flow: row wrap;\n        /*margin: 5px 20px;*/\n        padding: 0;\n      }\n\n      .internal-property-grid ngx-property-grid .card {\n        background-color: unset;\n        box-shadow: unset;\n        display: unset;\n        flex-flow: unset;\n        /*margin: 5px 20px;*/\n        padding: unset;\n      }\n    `\n  ],\n  animations: [\n    trigger('collapseAnimation', [\n      state('hidden', style({\n        height: '0',\n        // overflow: 'hidden',\n      })),\n      state('visible', style({\n        height: '*'\n      })),\n      transition('visible  hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n    ]),\n    trigger('flyInOut', [\n      state('in', style({transform: 'translateX(0)'})),\n      transition('void => *', [\n        style({transform: 'translateX(-100%)'}),\n        animate(100)\n      ]),\n      transition('* => void', [\n        animate(100, style({transform: 'translateX(100%)'}))\n      ])\n    ])\n  ]\n})\nexport class PropertyGridComponent implements AfterContentInit, AfterViewInit {\n  private _options: any;\n  private _meta: any;\n  private _templateLoaded = false;\n  public get templateLoaded(): boolean {\n    return this._templateLoaded;\n  }\n\n  public readonly isInternal: boolean = false;\n\n  @Input()\n  public templateMap: { [key: string]: TemplateRef };\n\n  @Input()\n  public state: 'hidden' | 'visible' = 'visible';\n\n  @Input()\n  width: string | number;\n\n\n  @Input()\n  labelWidth: string | number = '120px';\n\n  @Input()\n  cardStyle = true;\n\n  @Input()\n  groupCollapse = false;\n\n  @Input()\n  showHelp = true;\n\n  @Input()\n  public set meta(v: any) {\n    this._meta = v;\n    this.initMeta();\n  }\n\n  public get meta(): any {\n    return this._meta;\n  }\n\n  @Input()\n  public set options(v: any) {\n    this._options = v;\n    if (v.__meta__) {\n      this.meta = v.__meta__;\n    }\n  }\n\n  public get options(): any {\n    return this._options;\n  }\n\n  @ViewChildren(NgxTemplate) defaultTemplates: QueryList;\n  @ContentChildren(NgxTemplate) templates: QueryList;\n\n  public groups: InternalGroup[];\n  public subItems: PropertyItemMeta[];\n\n  constructor(el: ElementRef, private cdr: ChangeDetectorRef) {\n    this.isInternal = el.nativeElement.parentElement && el.nativeElement.parentElement.classList &&\n      el.nativeElement.parentElement.classList.contains('internal-property-grid');\n  }\n\n  ngAfterViewInit(): void {\n    if (this.isInternal) {\n      this._templateLoaded = true;\n    } else {\n      if (this.defaultTemplates) {\n        this.defaultTemplates.forEach((item) => {\n          if (!this.templateMap.hasOwnProperty(item.name)) {\n            this.templateMap[item.name] = item.template;\n          }\n        });\n        this._templateLoaded = true;\n        this.cdr.detectChanges();\n      }\n    }\n  }\n\n  ngAfterContentInit(): void {\n    if (!this.isInternal) {\n      if (!this.templateMap) {\n        this.templateMap = {};\n      }\n      this.templates.forEach((item) => {\n        this.templateMap[item.name] = item.template;\n      });\n    }\n  }\n\n  public openLink(link: string) {\n    if (link) {\n      window.open(link, '_blank');\n    }\n  }\n\n  public getTemplate(type: string | any): TemplateRef {\n    if (typeof type === 'string' && this.templateMap) {\n      return type ? this.templateMap[type] : this.templateMap.default;\n    } else {\n      return undefined;\n    }\n  }\n\n  public propertyValue(meta: PropertyItemMeta): PropertyValue {\n    return new PropertyValue(this.options, meta);\n  }\n\n  public toggle(): void {\n    this.state = this.state === 'visible' ? 'hidden' : 'visible';\n  }\n\n  public convertValue(meta: PropertyItemMeta, val: any): void {\n    this.options[meta.key] = meta.valueConvert ? meta.valueConvert(val) : val;\n  }\n\n  private initMeta(): void {\n    const meta: object = this.meta;\n    if (!meta) {\n      this.subItems = [];\n      return;\n    }\n\n    const groups: InternalGroup[] = [new InternalGroup(undefined)];\n    const subItems: PropertyItemMeta[] = [];\n    for (const i in meta) {\n      if (!meta.hasOwnProperty(i)) {\n        continue;\n      }\n      const v: PropertyItemMeta = meta[i];\n      if (v.hidden) {\n        continue;\n      }\n      if (v.type === 'subItems') {\n        subItems.push(v);\n        continue;\n      }\n\n      let group = groups.find(o => o.name === v.group);\n      if (!group) {\n        group = new InternalGroup(v.group);\n        groups.push(group);\n      }\n      group.items.push(v);\n    }\n    groups.forEach(o => o.items.sort((a, b) => a.order - b.order));\n\n    this.groups = groups.filter(o => o.items.length > 0);\n    this.subItems = subItems;\n  }\n\n  optionLabel(v: any): string {\n    if (typeof v === 'string') {\n      return v;\n    }\n    if (v.text) {\n      return v.text;\n    }\n    if (v.label) {\n      return v.label;\n    }\n    return v;\n  }\n\n  optionValue(v: any): any {\n    return v && v.value ? v.value : v;\n  }\n}\n\nexport class PropertyValue {\n  public get value(): any {\n    return this.o[this.meta.key];\n  }\n\n  public set value(val: any) {\n    this.o[this.meta.key] = this.meta.valueConvert ? this.meta.valueConvert(val) : val;\n  }\n\n  constructor(private o: any, public meta: PropertyItemMeta) {\n  }\n}\n\nexport class InternalGroup {\n  public readonly items: PropertyItemMeta[] = [];\n  public type = 'group';\n\n  public state = true;\n\n  public toggle(): void {\n    this.state = !this.state;\n  }\n\n  constructor(public name: string) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LoadComponentDirective.html":{"url":"directives/LoadComponentDirective.html","title":"directive - LoadComponentDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  LoadComponentDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/load-component.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            ICustomDynamicComponent\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [loadComponent]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _controlValueChangeFn\n                            \n                            \n                                    Private\n                                _value\n                            \n                            \n                                    Private\n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildComponent\n                            \n                            \n                                    Private\n                                destroyComponent\n                            \n                            \n                                    Private\n                                initComponent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                onValueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                componentOptions\n                            \n                            \n                                componentType\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entry: ViewContainerRef, componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-property-grid/src/lib/load-component.directive.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entry\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        componentOptions\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/load-component.directive.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        componentType\n                    \n                \n                \n                    \n                        Type :         Type\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/load-component.directive.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/load-component.directive.ts:28\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/load-component.directive.ts:39\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildComponent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/load-component.directive.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            destroyComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroyComponent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/load-component.directive.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initComponent(component: ComponentRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/load-component.directive.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                ComponentRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/load-component.directive.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onValueChange(e: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/load-component.directive.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _controlValueChangeFn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/load-component.directive.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/load-component.directive.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ComponentRef>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/load-component.directive.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-property-grid/src/lib/load-component.directive.ts:34\n                                \n                            \n\n                \n                    \n                        setvalue(v: any)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-property-grid/src/lib/load-component.directive.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef, Directive,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\n\n@Directive({\n    selector: '[loadComponent]',\n})\nexport class LoadComponentDirective implements OnInit, ICustomDynamicComponent {\n    private readonly _controlValueChangeFn: (value: any) => void;\n    private _value: any;\n\n    private component: ComponentRef>;\n\n    @Input() componentType: Type;\n\n    @Input()\n    componentOptions: any;\n\n    @Input()\n    set value(v: any) {\n        this._value = v;\n        if (this.component) {\n            this.component.instance.value =  v;\n        }\n    }\n    get value(): any {\n        return this._value;\n    }\n\n    @Output()\n    readonly valueChange: EventEmitter = new EventEmitter();\n\n\n    constructor(private entry: ViewContainerRef, private componentFactoryResolver: ComponentFactoryResolver) {\n        this._controlValueChangeFn = (value: any) => this.onValueChange(value);\n    }\n\n    ngOnInit() {\n        this.buildComponent();\n    }\n\n    private onValueChange(e: any): void {\n        this._value = e;\n        this.valueChange.emit(e);\n    }\n\n    private buildComponent(): void {\n        if (!this.componentType) {\n            return;\n        }\n        try {\n            this.destroyComponent();\n            // this.entry.clear();\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\n            const component = this.entry.createComponent(componentFactory, 0);\n            this.initComponent(component);\n            this.component = component;\n        } catch (e) {\n            console.error('load component error.');\n            console.error(e);\n        }\n    }\n\n    private initComponent(component: ComponentRef) {\n        component.instance.value = this._value;\n        if (component.instance.registerOnChange) {\n            component.instance.registerOnChange(this._controlValueChangeFn);\n        }\n        if (component.instance.valueChange) {\n            component.instance.valueChange.subscribe(this._controlValueChangeFn);\n        }\n\n        if (this.componentOptions) {\n            Object.assign(component.instance, this.componentOptions);\n        }\n    }\n\n    private destroyComponent(): void {\n        if (this.component) {\n            this.component.destroy();\n        }\n    }\n}\n\nexport interface PropertyValueAccess extends ControlValueAccessor, ICustomDynamicComponent {\n}\n\nexport interface ICustomDynamicComponent {\n    value: TValue;\n    valueChange: EventEmitter;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PropertyGridModule.html":{"url":"modules/PropertyGridModule.html","title":"module - PropertyGridModule","body":"\n                   \n\n\n\n\n    Modules\n    PropertyGridModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyGridModule\n\n\n\ncluster_PropertyGridModule_declarations\n\n\n\ncluster_PropertyGridModule_exports\n\n\n\n\nLoadComponentDirective\n\nLoadComponentDirective\n\n\n\nPropertyGridModule\n\nPropertyGridModule\n\nPropertyGridModule -->\n\nLoadComponentDirective->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent\n\nPropertyGridComponent\n\nPropertyGridModule -->\n\nPropertyGridComponent->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent \n\nPropertyGridComponent \n\nPropertyGridComponent  -->\n\nPropertyGridModule->PropertyGridComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/property-grid.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoadComponentDirective\n                        \n                        \n                            PropertyGridComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PropertyGridComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {LoadComponentDirective} from './load-component.directive';\nimport {PropertyGridComponent} from './property-grid.component';\nimport {NgxTemplateModule} from 'ngx-template';\nimport {FormsModule} from '@angular/forms';\n\nexport {PropertyGridComponent, PropertyValue} from './property-grid.component';\nexport {meta, PropertyItemMeta} from './property-item-meta';\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, NgxTemplateModule\n  ],\n  declarations: [\n    PropertyGridComponent,\n    LoadComponentDirective\n  ],\n  exports: [\n    PropertyGridComponent\n  ]\n})\nexport class PropertyGridModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PropertyItemMeta.html":{"url":"interfaces/PropertyItemMeta.html","title":"interface - PropertyItemMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PropertyItemMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/property-item-meta.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        colSpan2\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        group\n                                \n                                \n                                            Optional\n                                        hidden\n                                \n                                \n                                            Optional\n                                        initState\n                                \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        link\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                            Optional\n                                        order\n                                \n                                \n                                            Optional\n                                        showHelp\n                                \n                                \n                                            Optional\n                                        type\n                                \n                                \n                                            Optional\n                                        valueConvert\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colSpan2\n                                    \n                                \n                                \n                                    \n                                        colSpan2:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initState\n                                    \n                                \n                                \n                                    \n                                        initState:     \"hidden\" | \"visible\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"hidden\" | \"visible\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     PropertyKey\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PropertyKey\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showHelp\n                                    \n                                \n                                \n                                    \n                                        showHelp:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         \"color\" | \"date\" | \"checkbox\" | \"text\" | \"options\" | string | Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         \"color\" | \"date\" | \"checkbox\" | \"text\" | \"options\" | string | Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueConvert\n                                    \n                                \n                                \n                                    \n                                        valueConvert:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Type} from '@angular/core';\nimport {ICustomDynamicComponent} from './load-component.directive';\nimport {ControlValueAccessor} from '@angular/forms';\n\nexport { ICustomDynamicComponent };\n\nexport interface PropertyItemMeta {\n    readonly key?: PropertyKey; // auto generate.\n    name: string; // The display name of the property in the grid\n    description?: string; // A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\n    order?: number; // The display order.\n    group?: string; //  The group this property belongs to\n    hidden?: boolean; // Whether this property should be hidden in the grid, default is false (can be omitted).\n    initState?: 'hidden' | 'visible'; // - hidden/visible. If hidden then subItems should init by hidden state. default is hidden\n    type?: 'color' | 'date' | 'checkbox' | 'text' | 'options' | string | Type>;\n    // options: boolean number options label color,\n    // or an custom component should be implement ControlValueAccessor or ICustomDynamicComponent\n    options?: any; // options for type\n    colSpan2?: boolean; //  - true/false. If true then property input will span both columns and will have no name/label\n    // (useful for textArea custom type)\n    valueConvert?: (value: any) => any; // convert the value, eg. parseInt\n    showHelp?: boolean; // default True.\n    link?: string; // help link\n}\n\n\nexport const meta = (itemMeta: PropertyItemMeta) =>\n    (target: any, key: PropertyKey) => {\n\n        // region [adjust]\n        (itemMeta as any).key = key;\n        if (typeof itemMeta.type === 'string') {\n\n        } else {\n\n        }\n        if (!itemMeta.type) {\n            itemMeta.type = 'text';\n        }\n\n        if (itemMeta.type === 'number' && !itemMeta.valueConvert) {\n            itemMeta.valueConvert = parseInt;\n        }\n\n        if (!itemMeta.initState) {\n            itemMeta.initState = 'hidden';\n        }\n        if (!itemMeta.order) {\n            itemMeta.order = Number.MAX_VALUE;\n        }\n        if (itemMeta.showHelp === undefined) {\n            itemMeta.showHelp = true;\n        }\n        // endregion\n\n        let __meta__ = target.__meta__;\n        if (!__meta__) {\n            __meta__ = {};\n            target.__meta__ = __meta__;\n        } else if (target.__proto__.__meta__ === __meta__) {\n            const subMeta = Object.create(Object.getPrototypeOf(__meta__));\n            Object.getOwnPropertyNames(__meta__).forEach(name => {\n                Object.defineProperty(subMeta, name, Object.getOwnPropertyDescriptor(__meta__, name));\n            });\n            __meta__ = subMeta;\n            target.__meta__ = __meta__;\n        }\n\n        Object.defineProperty(__meta__, key, {\n            enumerable: true,\n            get: () => itemMeta,\n            set: (v) => itemMeta = v\n        });\n    };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PropertyValue.html":{"url":"classes/PropertyValue.html","title":"class - PropertyValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PropertyValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/property-grid.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(o: any, meta: PropertyItemMeta)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:394\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        o\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        PropertyItemMeta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            meta\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PropertyItemMeta\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:396\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:388\n                                \n                            \n\n                \n                    \n                        setvalue(val: any)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:392\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {\n  AfterContentInit, AfterViewInit, ChangeDetectorRef,\n  Component,\n  ContentChildren, ElementRef,\n  Input,\n  QueryList,\n  TemplateRef, ViewChildren\n} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {NgxTemplate} from 'ngx-template';\nimport {PropertyItemMeta} from './property-item-meta';\n\n@Component({\n  selector: 'ngx-property-grid',\n  template: `\n    \n      \n        \n          \n          \n            \n              {{group.name}}\n            \n\n            \n              \n                \n                  {{item.name}}\n                  [?]\n                \n                \n                  \n                  \n                \n              \n              \n                \n              \n            \n          \n          \n        \n      \n\n      \n        \n          {{item.name}}\n        \n        \n        \n      \n    \n\n\n    \n      \n        \n        \n        \n        \n      \n    \n\n\n    \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        {{p.value}}\n      \n\n      \n        \n      \n\n      \n        \n          \n            {{optionLabel(option)}}\n          \n        \n      \n    \n  `,\n  styles: [\n      `\n      .property-grid {\n        /*border: solid 1px #95B8E7;*/\n      }\n\n      .property-grid-border {\n        border: 1px solid #d6d6d678\n      }\n\n      .property-grid-table {\n        border-spacing: 0;\n        padding: 5px\n      }\n\n      .property-grid-group {\n        background-color: white;\n        font-weight: bold;\n        color: #616161;\n        padding-top: 8px;\n        padding-bottom: 5px;\n      }\n\n      .property-grid-label, .property-grid-control {\n        border: dotted 1px #ccc;\n        padding: 2px 5px;\n      }\n\n      .internal-property-grid {\n        margin-top: 12px;\n      }\n\n      .internal-property-grid .property-grid {\n        border-width: 0;\n      }\n\n      .internal-property-grid .property-grid-header {\n        margin-bottom: 5px;\n        background-color: #f5f5f5;\n        padding-bottom: 5px;\n        padding-top: 5px;\n        padding-left: 5px;\n        box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n        -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n        width: 100%;\n      }\n\n      .internal-property-grid .property-grid-header-margin {\n        margin-left: 5px;\n        margin-right: 5px;\n        width: unset;\n      }\n\n      .internal-property-grid .property-grid-table {\n        border-width: 0;\n        /*border-top: 1px solid #dbdbdb;*/\n      }\n\n      .card {\n        background-color: #fff;\n        box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n        display: flex;\n        flex-flow: row wrap;\n        /*margin: 5px 20px;*/\n        padding: 0;\n      }\n\n      .internal-property-grid ngx-property-grid .card {\n        background-color: unset;\n        box-shadow: unset;\n        display: unset;\n        flex-flow: unset;\n        /*margin: 5px 20px;*/\n        padding: unset;\n      }\n    `\n  ],\n  animations: [\n    trigger('collapseAnimation', [\n      state('hidden', style({\n        height: '0',\n        // overflow: 'hidden',\n      })),\n      state('visible', style({\n        height: '*'\n      })),\n      transition('visible  hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n    ]),\n    trigger('flyInOut', [\n      state('in', style({transform: 'translateX(0)'})),\n      transition('void => *', [\n        style({transform: 'translateX(-100%)'}),\n        animate(100)\n      ]),\n      transition('* => void', [\n        animate(100, style({transform: 'translateX(100%)'}))\n      ])\n    ])\n  ]\n})\nexport class PropertyGridComponent implements AfterContentInit, AfterViewInit {\n  private _options: any;\n  private _meta: any;\n  private _templateLoaded = false;\n  public get templateLoaded(): boolean {\n    return this._templateLoaded;\n  }\n\n  public readonly isInternal: boolean = false;\n\n  @Input()\n  public templateMap: { [key: string]: TemplateRef };\n\n  @Input()\n  public state: 'hidden' | 'visible' = 'visible';\n\n  @Input()\n  width: string | number;\n\n\n  @Input()\n  labelWidth: string | number = '120px';\n\n  @Input()\n  cardStyle = true;\n\n  @Input()\n  groupCollapse = false;\n\n  @Input()\n  showHelp = true;\n\n  @Input()\n  public set meta(v: any) {\n    this._meta = v;\n    this.initMeta();\n  }\n\n  public get meta(): any {\n    return this._meta;\n  }\n\n  @Input()\n  public set options(v: any) {\n    this._options = v;\n    if (v.__meta__) {\n      this.meta = v.__meta__;\n    }\n  }\n\n  public get options(): any {\n    return this._options;\n  }\n\n  @ViewChildren(NgxTemplate) defaultTemplates: QueryList;\n  @ContentChildren(NgxTemplate) templates: QueryList;\n\n  public groups: InternalGroup[];\n  public subItems: PropertyItemMeta[];\n\n  constructor(el: ElementRef, private cdr: ChangeDetectorRef) {\n    this.isInternal = el.nativeElement.parentElement && el.nativeElement.parentElement.classList &&\n      el.nativeElement.parentElement.classList.contains('internal-property-grid');\n  }\n\n  ngAfterViewInit(): void {\n    if (this.isInternal) {\n      this._templateLoaded = true;\n    } else {\n      if (this.defaultTemplates) {\n        this.defaultTemplates.forEach((item) => {\n          if (!this.templateMap.hasOwnProperty(item.name)) {\n            this.templateMap[item.name] = item.template;\n          }\n        });\n        this._templateLoaded = true;\n        this.cdr.detectChanges();\n      }\n    }\n  }\n\n  ngAfterContentInit(): void {\n    if (!this.isInternal) {\n      if (!this.templateMap) {\n        this.templateMap = {};\n      }\n      this.templates.forEach((item) => {\n        this.templateMap[item.name] = item.template;\n      });\n    }\n  }\n\n  public openLink(link: string) {\n    if (link) {\n      window.open(link, '_blank');\n    }\n  }\n\n  public getTemplate(type: string | any): TemplateRef {\n    if (typeof type === 'string' && this.templateMap) {\n      return type ? this.templateMap[type] : this.templateMap.default;\n    } else {\n      return undefined;\n    }\n  }\n\n  public propertyValue(meta: PropertyItemMeta): PropertyValue {\n    return new PropertyValue(this.options, meta);\n  }\n\n  public toggle(): void {\n    this.state = this.state === 'visible' ? 'hidden' : 'visible';\n  }\n\n  public convertValue(meta: PropertyItemMeta, val: any): void {\n    this.options[meta.key] = meta.valueConvert ? meta.valueConvert(val) : val;\n  }\n\n  private initMeta(): void {\n    const meta: object = this.meta;\n    if (!meta) {\n      this.subItems = [];\n      return;\n    }\n\n    const groups: InternalGroup[] = [new InternalGroup(undefined)];\n    const subItems: PropertyItemMeta[] = [];\n    for (const i in meta) {\n      if (!meta.hasOwnProperty(i)) {\n        continue;\n      }\n      const v: PropertyItemMeta = meta[i];\n      if (v.hidden) {\n        continue;\n      }\n      if (v.type === 'subItems') {\n        subItems.push(v);\n        continue;\n      }\n\n      let group = groups.find(o => o.name === v.group);\n      if (!group) {\n        group = new InternalGroup(v.group);\n        groups.push(group);\n      }\n      group.items.push(v);\n    }\n    groups.forEach(o => o.items.sort((a, b) => a.order - b.order));\n\n    this.groups = groups.filter(o => o.items.length > 0);\n    this.subItems = subItems;\n  }\n\n  optionLabel(v: any): string {\n    if (typeof v === 'string') {\n      return v;\n    }\n    if (v.text) {\n      return v.text;\n    }\n    if (v.label) {\n      return v.label;\n    }\n    return v;\n  }\n\n  optionValue(v: any): any {\n    return v && v.value ? v.value : v;\n  }\n}\n\nexport class PropertyValue {\n  public get value(): any {\n    return this.o[this.meta.key];\n  }\n\n  public set value(val: any) {\n    this.o[this.meta.key] = this.meta.valueConvert ? this.meta.valueConvert(val) : val;\n  }\n\n  constructor(private o: any, public meta: PropertyItemMeta) {\n  }\n}\n\nexport class InternalGroup {\n  public readonly items: PropertyItemMeta[] = [];\n  public type = 'group';\n\n  public state = true;\n\n  public toggle(): void {\n    this.state = !this.state;\n  }\n\n  constructor(public name: string) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PropertyValueAccess.html":{"url":"interfaces/PropertyValueAccess.html","title":"interface - PropertyValueAccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PropertyValueAccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/load-component.directive.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ControlValueAccessor\n            \n\n\n\n\n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef, Directive,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\n\n@Directive({\n    selector: '[loadComponent]',\n})\nexport class LoadComponentDirective implements OnInit, ICustomDynamicComponent {\n    private readonly _controlValueChangeFn: (value: any) => void;\n    private _value: any;\n\n    private component: ComponentRef>;\n\n    @Input() componentType: Type;\n\n    @Input()\n    componentOptions: any;\n\n    @Input()\n    set value(v: any) {\n        this._value = v;\n        if (this.component) {\n            this.component.instance.value =  v;\n        }\n    }\n    get value(): any {\n        return this._value;\n    }\n\n    @Output()\n    readonly valueChange: EventEmitter = new EventEmitter();\n\n\n    constructor(private entry: ViewContainerRef, private componentFactoryResolver: ComponentFactoryResolver) {\n        this._controlValueChangeFn = (value: any) => this.onValueChange(value);\n    }\n\n    ngOnInit() {\n        this.buildComponent();\n    }\n\n    private onValueChange(e: any): void {\n        this._value = e;\n        this.valueChange.emit(e);\n    }\n\n    private buildComponent(): void {\n        if (!this.componentType) {\n            return;\n        }\n        try {\n            this.destroyComponent();\n            // this.entry.clear();\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\n            const component = this.entry.createComponent(componentFactory, 0);\n            this.initComponent(component);\n            this.component = component;\n        } catch (e) {\n            console.error('load component error.');\n            console.error(e);\n        }\n    }\n\n    private initComponent(component: ComponentRef) {\n        component.instance.value = this._value;\n        if (component.instance.registerOnChange) {\n            component.instance.registerOnChange(this._controlValueChangeFn);\n        }\n        if (component.instance.valueChange) {\n            component.instance.valueChange.subscribe(this._controlValueChangeFn);\n        }\n\n        if (this.componentOptions) {\n            Object.assign(component.instance, this.componentOptions);\n        }\n    }\n\n    private destroyComponent(): void {\n        if (this.component) {\n            this.component.destroy();\n        }\n    }\n}\n\nexport interface PropertyValueAccess extends ControlValueAccessor, ICustomDynamicComponent {\n}\n\nexport interface ICustomDynamicComponent {\n    value: TValue;\n    valueChange: EventEmitter;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngx-property-grid/src/lib/load-component.directive.ts\n            \n            directive\n            LoadComponentDirective\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/load-component.directive.ts\n            \n            interface\n            ICustomDynamicComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/load-component.directive.ts\n            \n            interface\n            PropertyValueAccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-grid.component.ts\n            \n            component\n            PropertyGridComponent\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-grid.component.ts\n            \n            class\n            InternalGroup\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-grid.component.ts\n            \n            class\n            PropertyValue\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-item-meta.ts\n            \n            interface\n            PropertyItemMeta\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-item-meta.ts\n            \n            variable\n            meta\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            ngx-template : ^1.1.1\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^9.1.4\n        \n            @angular/core : ^9.1.4\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgxPropertyGrid\n\n\n\nA small and simple property grid in angular to view/edit POJOs, excellent if you have a \"settings\" object you want to give the user to edit (that's why I have created it). Play online.\nDependencies\n\nangular9+\nngx-template\n\nUsage\n\nImport\n import {PropertyGridModule} from 'ngx-property-grid';\n\n import {NgxTemplateModule} from 'ngx-template'; If you need animation,you should import BrowserAnimationsModule in your app.module.ts.\n\nGetting Started\n\nHtml\n\nBasic  \nTemplate  \n      \n          \n      \n      \n          \n      \n  \n\n\nObject options\n  export class ExampleEditorOptions {\n      @meta({name: 'Font', description: 'The font editor to use', type: SimpleTextEditorComponent, group: 'Editor', hidden: false})\n      font = 'Source Code Pro';\n\n      @meta({name: 'Font size', group: 'Editor', type: 'number', valueConvert: parseInt})\n      fontSize = 14;\n\n      @meta({name: 'Font color', group: 'Editor', type: 'color'})\n      fontColor = '#51f41c';\n\n      @meta({name: 'jQuery', group: 'Plugins', type: 'checkbox'})\n      jQuery = true;\n\n      @meta({name: 'modernizr', description: 'Whether or not to include modernizr on the page', group: 'Plugins', type: 'checkbox'})\n      modernizr = false;\n\n      @meta({\n          name: 'Framework',\n          description: 'Whether to include any additional framework',\n          type: 'options',\n          options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]\n      })\n      framework = 'None';\n  }\n\n\nThe metadata options declare\n\n\n export interface PropertyItemMeta {\n    name: string; // The display name of the property in the grid\n    description?: string; // A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\n    order?: number; // The display order.\n    group?: string; //  The group this property belongs to\n    hidden?: boolean; // Whether this property should be hidden in the grid, default is false (can be omitted).\n    initState?: 'hidden' | 'visible'; // - hidden/visible. If hidden then subItems should init by hidden state. default is hidden\n    type?: 'color' | 'date' | 'checkbox' | 'text' | 'options' | string | Type>;\n    // options: boolean number options label color,\n    // or an custom component should be implement ControlValueAccessor or ICustomDynamicComponent\n    options?: any; // options for type\n    colSpan2?: boolean; //  - true/false. If true then property input will span both columns and will have no name/label\n    // (useful for textarea custom type)\n    valueConvert?: (value: any) => any; // convert the value, eg. parseInt\n}\nThe result would be (live demo):\n\n\nThe metadata object\nAs seen from the example above the metadata object can be used (it's optional) in order to describe the object properties.\nEach proprty in the metadata object could have the following:\n\nname - The display name of the property in the grid \ndescription - A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\nhidden - Whether this property should be hidden in the grid, default is false (can be omitted).\ngroup - The group this property belongs to\ntype - The type of the property, supported are:\nboolean or checkbox - A checkbox would be used\nnumber -  simple textbox\ncolor - simple textbox\noptions - A dropdown list would be used in case the metadata contains the options array property\nlabel - A label will be used, useful for uneditable / read-only properties\n\n\ncolspan2 - true/false. If true then property input will span both columns and will have no name/label (useful for textarea custom type)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 YISH\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        PropertyGridModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyGridModule\n\n\n\ncluster_PropertyGridModule_declarations\n\n\n\ncluster_PropertyGridModule_exports\n\n\n\n\nLoadComponentDirective\n\nLoadComponentDirective\n\n\n\nPropertyGridModule\n\nPropertyGridModule\n\nPropertyGridModule -->\n\nLoadComponentDirective->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent\n\nPropertyGridComponent\n\nPropertyGridModule -->\n\nPropertyGridComponent->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent \n\nPropertyGridComponent \n\nPropertyGridComponent  -->\n\nPropertyGridModule->PropertyGridComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            meta   (projects/.../property-item-meta.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-property-grid/src/lib/property-item-meta.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            meta\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (itemMeta: PropertyItemMeta) =>\n    (target: any, key: PropertyKey) => {\n\n        // region [adjust]\n        (itemMeta as any).key = key;\n        if (typeof itemMeta.type === 'string') {\n\n        } else {\n\n        }\n        if (!itemMeta.type) {\n            itemMeta.type = 'text';\n        }\n\n        if (itemMeta.type === 'number' && !itemMeta.valueConvert) {\n            itemMeta.valueConvert = parseInt;\n        }\n\n        if (!itemMeta.initState) {\n            itemMeta.initState = 'hidden';\n        }\n        if (!itemMeta.order) {\n            itemMeta.order = Number.MAX_VALUE;\n        }\n        if (itemMeta.showHelp === undefined) {\n            itemMeta.showHelp = true;\n        }\n        // endregion\n\n        let __meta__ = target.__meta__;\n        if (!__meta__) {\n            __meta__ = {};\n            target.__meta__ = __meta__;\n        } else if (target.__proto__.__meta__ === __meta__) {\n            const subMeta = Object.create(Object.getPrototypeOf(__meta__));\n            Object.getOwnPropertyNames(__meta__).forEach(name => {\n                Object.defineProperty(subMeta, name, Object.getOwnPropertyDescriptor(__meta__, name));\n            });\n            __meta__ = subMeta;\n            target.__meta__ = __meta__;\n        }\n\n        Object.defineProperty(__meta__, key, {\n            enumerable: true,\n            get: () => itemMeta,\n            set: (v) => itemMeta = v\n        });\n    }\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
