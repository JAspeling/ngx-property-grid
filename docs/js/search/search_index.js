var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.119,1,0.812]],["body/components/AppComponent.html",[0,0.207,1,1.29,2,0.37,3,0.436,4,0.606,5,1.528,6,1.528,7,0.256,8,1.34,9,1.34,10,1.446,11,2.19,12,2.144,13,2.144,14,2.144,15,2.144,16,2.144,17,0.432,18,0.799,19,1.638,20,2.684,21,1.714,22,1.511,23,1.455,24,3.587,25,2.27,26,0.651,27,0.047,28,0.649,29,0.649,30,0.877,31,1.057,32,2.557,33,1.528,34,2.144,35,2.557,36,2.557,37,0.504,38,1.701,39,0.37,40,0.877,41,0.7,42,1.184,43,1.528,44,1.88,45,1.34,46,1.88,47,1.34,48,0.45,49,0.189,50,0.649,51,1.528,52,2.11,53,1.052,54,0.499,55,1.05,56,1.701,57,1.125,58,1.725,59,1.701,60,0.932,61,1.05,62,1.511,63,1.052,64,1.52,65,0.911,66,1.34,67,1.34,68,2.737,69,1.34,70,1.472,71,1.308,72,1.88,73,0.932,74,1.03,75,1.34,76,1.34,77,1.88,78,1.88,79,1.308,80,2.171,81,1.308,82,1.66,83,1.34,84,2.171,85,1.34,86,0.801,87,0.734,88,1.88,89,1.34,90,1.34,91,1.34,92,1.34,93,2.144,94,2.479,95,2.827,96,1.528,97,1.844,98,1.34,99,1.34,100,1.528,101,1.528,102,0.932,103,1.528,104,2.144,105,0.932,106,1.528,107,2.476,108,2.144,109,1.528,110,1.528,111,2.476,112,1.528,113,0.828,114,1.05,115,1.05,116,0.801,117,2.916,118,3.587,119,1.66,120,1.05,121,1.88,122,1.472,123,2.144,124,2.684,125,1.528,126,1.528,127,0.734,128,0.828,129,1.528,130,0.734,131,0.734,132,1.528,133,1.528,134,0.029,135,0.029]],["title/components/CustomComponent.html",[0,0.119,127,0.812]],["body/components/CustomComponent.html",[0,0.23,1,0.679,2,0.342,3,0.287,4,0.573,5,1.412,6,1.412,7,0.237,9,1.238,10,1.372,11,1.57,17,0.399,18,0.67,21,0.765,22,0.862,23,1.774,26,0.658,27,0.047,29,0.712,30,0.461,33,1.412,37,0.413,38,1.884,39,0.342,41,0.846,48,0.397,49,0.1,50,1.279,52,0.97,53,0.6,54,0.662,55,1.779,57,1.067,63,1.007,86,0.968,87,1.139,120,0.97,121,1.778,122,1.392,123,2.027,124,2.591,125,1.412,126,1.412,127,1.245,128,1.285,129,1.412,130,0.679,131,0.679,132,1.412,133,1.412,134,0.027,135,0.027,136,1.23,137,1.412,138,2.736,139,2.297,140,1.779,141,2.99,142,2.99,143,2.99,144,2.339,145,2.99,146,2.99,147,3.392,148,2.99,149,3.392,150,1.548,151,2.99,152,2.363,153,3.295,154,3.392,155,2.272,156,2.363,157,2.363,158,3.392,159,1.921,160,2.363,161,2.136,162,2.363,163,2.339,164,3.394,165,2.363,166,2.363,167,2.339,168,2.363,169,2.736,170,2.757,171,2.363,172,2.363,173,2.363,174,1.412,175,2.339,176,2.363,177,1.921,178,2.363,179,1.921,180,1.836,181,2.339,182,1.57,183,1.094,184,1.63,185,1.412,186,0.97,187,1.094,188,2.99,189,2.736,190,1.63,191,1.094,192,1.63,193,1.63,194,1.63,195,1.63,196,1.63,197,1.63,198,1.63,199,1.63,200,0.974,201,1.63,202,1.63,203,1.63,204,0.679,205,1.63,206,1.63,207,1.63,208,1.63,209,1.63,210,1.63,211,1.63,212,1.63,213,1.63,214,1.63,215,2.339,216,1.63,217,1.63,218,0.758,219,1.238,220,1.238,221,1.63]],["title/classes/ExampleEditorOptions.html",[49,0.119,56,1.16]],["body/classes/ExampleEditorOptions.html",[0,0.176,1,0.747,2,0.376,3,0.509,4,0.44,7,0.26,8,1.364,10,1.043,11,1.681,12,1.555,13,1.555,14,1.555,15,1.555,16,1.555,17,0.44,18,0.614,19,1.324,20,1.555,21,1.597,22,0.949,23,1.597,25,1.936,26,0.664,27,0.047,28,1.252,29,0.758,30,0.816,31,1.171,34,1.555,37,0.509,38,1.717,39,0.376,40,1.037,41,0.709,42,1.204,43,1.555,44,1.903,45,1.364,46,1.903,47,1.364,48,0.453,49,0.201,50,0.661,51,1.555,52,2.077,53,0.922,54,0.508,55,1.068,56,1.858,57,1.063,58,1.882,59,1.717,60,0.949,61,1.068,62,1.65,63,1.062,64,1.525,65,0.922,66,1.903,67,1.903,68,2.748,69,1.364,70,1.49,71,1.324,72,2.495,73,1.324,74,1.043,75,2.372,76,1.903,77,2.495,78,1.903,79,1.525,80,2.584,81,1.324,82,1.681,83,1.364,84,2.584,85,1.364,86,0.811,87,0.747,88,2.192,89,1.364,90,1.364,91,1.364,92,1.364,93,2.17,94,2.495,95,2.845,96,1.555,97,1.858,98,1.364,99,1.364,100,1.555,101,1.555,102,0.949,103,1.555,104,2.17,105,0.949,106,1.555,107,2.499,108,2.17,109,1.555,110,1.555,111,1.555,112,1.555,113,0.843,114,1.068,115,1.068,134,0.029,135,0.029,174,2.947,222,2.602,223,2.602,224,1.176,225,2.602,226,2.602,227,2.602,228,2.602]],["title/classes/ExampleStudentOptions.html",[25,1.308,49,0.119]],["body/classes/ExampleStudentOptions.html",[0,0.176,1,0.746,2,0.376,3,0.441,4,0.439,7,0.26,8,1.362,10,1.042,11,1.679,12,1.553,13,1.553,14,1.553,15,1.553,16,1.553,17,0.439,18,0.613,19,1.323,20,1.553,21,1.596,22,0.948,23,1.596,25,2.094,26,0.668,27,0.047,28,1.208,29,0.746,30,0.883,31,1.171,34,1.553,37,0.508,38,1.716,39,0.376,40,1.036,41,0.708,42,1.203,43,1.553,44,1.901,45,1.362,46,1.901,47,1.362,48,0.453,49,0.201,50,0.66,51,1.553,52,2.18,53,0.921,54,0.507,55,1.067,56,2.023,57,1.153,58,1.735,59,1.716,60,0.948,61,1.067,62,1.524,63,1.061,64,1.525,65,0.921,66,1.362,67,1.362,68,2.747,69,1.362,70,1.489,71,1.323,72,1.901,73,0.948,74,1.042,75,1.362,76,1.362,77,1.901,78,1.901,79,1.323,80,2.19,81,1.323,82,1.679,83,1.362,84,2.19,85,1.362,86,0.81,87,0.746,88,1.901,89,1.362,90,1.362,91,1.362,92,1.362,93,2.843,94,2.494,95,2.843,96,1.553,97,1.857,98,1.362,99,1.901,100,2.168,101,2.168,102,0.948,103,2.168,104,2.843,105,0.948,106,2.168,107,2.945,108,2.843,109,1.553,110,1.553,111,2.168,112,1.553,113,0.842,114,1.067,115,1.067,134,0.029,135,0.029,174,2.945,224,1.175,229,2.599,230,2.599,231,2.599,232,2.599,233,2.599,234,2.599]],["title/interfaces/ICustomDynamicComponent.html",[41,0.552,218,0.631]],["body/interfaces/ICustomDynamicComponent.html",[0,0.224,2,0.452,3,0.38,4,0.528,7,0.313,10,0.897,17,0.528,18,0.695,26,0.594,27,0.048,29,0.767,30,0.61,37,0.5,38,2.137,39,0.452,41,0.953,48,0.46,49,0.132,50,1.044,54,0.61,55,2.081,63,0.793,87,0.897,127,0.897,128,1.012,134,0.033,135,0.033,136,0.698,137,1.867,138,2.835,139,2.178,140,1.687,141,2.155,142,2.155,143,2.155,145,2.155,146,2.155,148,2.155,150,1.581,151,2.835,153,3.168,161,2.003,163,2.155,164,3.168,167,2.155,169,2.835,175,2.155,180,1.903,181,2.835,182,1.903,183,1.446,184,2.155,185,1.867,186,1.283,187,1.446,188,3.366,189,3.168,190,2.155,191,1.446,192,2.155,193,2.155,194,2.155,195,2.155,196,2.155,197,2.155,198,2.155,199,2.155,200,1.181,201,2.155,202,2.155,203,2.155,204,0.897,205,2.155,206,2.155,207,2.155,208,2.155,209,2.155,210,2.155,211,2.155,212,2.155,213,2.155,214,2.155,215,2.835,216,2.155,217,2.155,218,1.026,219,1.637,220,1.637,221,3.168]],["title/classes/InternalGroup.html",[49,0.119,235,1.481]],["body/classes/InternalGroup.html",[0,0.114,2,0.252,3,0.212,4,0.559,7,0.174,10,0.5,17,0.294,18,0.899,19,1.987,22,0.635,23,1.207,26,0.574,27,0.048,28,0.685,29,0.478,30,0.645,31,1.114,37,0.453,39,0.252,40,0.868,48,0.331,49,0.157,50,1.266,54,0.34,57,0.953,58,0.635,64,1.321,65,0.84,73,0.635,74,1.158,86,0.603,102,0.635,105,0.635,113,1.207,115,1.357,116,1.163,119,0.806,130,0.5,131,0.95,134,0.022,135,0.022,136,0.9,139,1.529,140,1.529,150,1.441,155,0.913,161,1.655,180,2.129,186,1.357,187,0.806,191,0.806,200,1.278,204,1.571,224,0.874,235,1.733,236,1.47,237,1.041,238,1.47,239,1.741,240,2.7,241,1.759,242,1.741,243,1.741,244,1.862,245,1.862,246,1.862,247,1.201,248,1.862,249,2.28,250,1.862,251,1.201,252,1.862,253,1.415,254,2.569,255,1.201,256,1.201,257,1.201,258,1.201,259,1.862,260,1.201,261,1.201,262,1.201,263,3.068,264,2.28,265,3.171,266,1.201,267,1.613,268,1.201,269,2.78,270,1.862,271,3.256,272,3.327,273,2.569,274,1.201,275,1.201,276,1.201,277,1.201,278,1.201,279,2.28,280,0.806,281,0.564,282,1.201,283,1.201,284,2.28,285,2.78,286,2.569,287,1.201,288,2.28,289,1.201,290,1.201,291,1.201,292,2.569,293,2.569,294,2.28,295,2.569,296,3.171,297,2.569,298,1.201,299,1.862,300,1.201,301,1.201,302,1.201,303,2.28,304,1.201,305,1.201,306,1.25,307,2.28,308,1.862,309,2.569,310,1.201,311,1.862,312,2.78,313,1.201,314,1.201,315,1.862,316,1.201,317,1.201,318,1.201,319,1.201,320,1.201,321,1.201,322,1.201,323,1.201,324,1.201,325,1.201,326,0.715,327,1.201,328,1.201,329,1.201,330,1.201,331,1.862,332,1.201,333,1.201,334,1.862,335,1.862,336,1.862,337,1.201,338,1.201,339,1.201,340,1.415,341,1.201,342,1.201,343,1.201,344,1.201,345,1.201,346,1.201,347,1.201,348,1.201,349,1.862,350,1.862,351,1.201,352,1.201,353,1.201,354,1.201,355,1.201,356,1.201,357,1.201,358,1.201,359,1.201,360,1.25,361,1.201,362,1.201,363,1.862,364,1.201,365,2.28,366,1.201,367,1.201,368,1.201,369,1.201,370,1.862,371,1.862,372,1.201,373,1.201,374,2.28,375,1.201,376,1.201,377,1.201,378,1.201,379,1.201,380,1.201,381,1.201,382,1.201,383,1.201,384,1.201,385,1.201,386,1.201,387,1.201,388,1.201,389,1.201,390,1.201,391,1.201,392,1.201,393,1.201,394,1.201,395,1.201,396,1.201,397,1.862,398,1.862,399,1.201,400,1.862,401,1.862,402,1.201,403,1.201,404,1.201,405,1.201]],["title/interfaces/InternalPropertyItemMeta.html",[218,0.631,241,1.031]],["body/interfaces/InternalPropertyItemMeta.html",[0,0.129,2,0.442,3,0.372,7,0.306,17,0.517,18,0.906,21,0.991,26,0.613,27,0.048,28,1.029,29,0.586,31,1.212,37,0.589,39,0.442,40,0.597,41,0.791,48,0.455,54,0.597,57,0.906,59,1.664,60,1.478,61,1.256,62,1.116,63,0.777,64,1.165,65,1.314,70,1.256,71,1.478,74,0.879,79,1.116,81,1.116,86,0.906,87,0.879,97,1.664,113,0.991,114,1.256,116,1.016,122,1.256,128,1.313,134,0.033,135,0.033,136,0.684,150,0.991,182,1.877,183,1.417,200,1.165,204,0.879,218,1.016,220,2.125,224,1.473,236,1.116,238,1.116,241,1.658,253,1.604,280,1.417,281,0.991,306,1.877,326,1.987,406,1.829,407,1.987,408,3.569,409,1.417,410,1.417,411,2.11,412,2.11,413,2.11,414,2.796,415,2.11,416,2.11,417,2.11,418,2.488,419,2.11,420,2.11,421,2.11,422,2.11,423,2.11,424,2.11,425,2.11,426,2.796,427,2.796,428,2.11,429,2.796,430,2.796,431,3.339,432,3.136,433,2.11,434,2.11,435,2.11,436,2.796,437,2.796,438,2.796,439,2.11,440,2.11]],["title/components/PropertyGridComponent.html",[0,0.119,130,0.812]],["body/components/PropertyGridComponent.html",[0,0.139,1,0.339,2,0.171,3,0.144,4,0.641,5,0.705,6,0.705,7,0.118,9,0.618,10,1.026,11,0.913,17,0.199,18,0.909,19,1.942,21,0.382,22,0.43,23,1.689,26,0.62,27,0.048,28,0.645,29,0.429,30,0.496,31,0.978,33,0.705,37,0.361,39,0.171,40,0.874,48,0.254,49,0.107,50,1.295,52,0.484,53,0.3,54,0.385,57,0.978,58,0.719,64,1.141,65,0.645,73,0.719,74,1.224,86,1,102,0.43,105,0.719,113,1.228,115,1.219,116,1.185,119,0.546,120,0.484,121,1.034,122,0.809,123,1.178,124,1.774,125,0.705,126,0.705,127,0.339,128,0.382,129,0.705,130,0.853,131,1.026,132,0.705,133,0.705,134,0.016,135,0.016,136,1.17,139,1.75,140,1.219,144,1.36,150,1.337,155,2.083,161,1.838,174,1.178,180,2.073,186,1.043,187,0.546,191,0.546,200,1.089,204,1.59,224,0.962,235,1.034,236,1.911,237,0.705,238,0.719,241,1.695,244,1.752,245,1.752,246,2.048,247,1.36,248,2.048,249,2.614,250,1.752,251,1.36,252,1.36,253,1.556,254,2.278,255,0.814,256,0.814,257,0.814,258,0.814,259,2.463,260,1.752,261,1.752,262,1.752,263,3.205,264,2.463,265,3.299,266,1.36,267,1.774,268,1.36,269,2.939,270,2.048,271,3.375,272,3.439,273,2.741,274,1.36,275,1.36,276,1.36,277,1.36,278,1.36,279,2.463,280,0.913,281,0.639,282,1.36,283,1.36,284,2.463,285,2.939,286,2.741,287,1.36,288,2.614,289,1.36,290,1.36,291,1.36,292,2.741,293,2.741,294,2.463,295,2.741,296,3.299,297,2.741,298,1.36,299,2.048,300,1.36,301,1.36,302,1.36,303,2.463,304,1.36,305,1.36,306,1.374,307,2.463,308,2.048,309,2.741,310,1.36,311,2.048,312,2.939,313,0.814,314,0.814,315,1.36,316,0.814,317,0.814,318,0.814,319,0.814,320,0.814,321,0.814,322,0.814,323,2.048,324,2.048,325,2.048,326,1.043,327,1.752,328,1.752,329,1.36,330,0.814,331,1.36,332,0.814,333,0.814,334,1.36,335,1.36,336,1.36,337,0.814,338,2.048,339,0.814,340,1.556,341,1.36,342,1.752,343,0.814,344,0.814,345,2.048,346,0.814,347,0.814,348,0.814,349,1.36,350,1.36,351,0.814,352,2.048,353,0.814,354,1.36,355,0.814,356,0.814,357,0.814,358,0.814,359,1.36,360,1.529,361,0.814,362,2.048,363,1.36,364,1.36,365,2.278,366,0.814,367,0.814,368,0.814,369,2.048,370,1.36,371,1.36,372,0.814,373,0.814,374,1.752,375,0.814,376,0.814,377,0.814,378,0.814,379,0.814,380,0.814,381,0.814,382,0.814,383,0.814,384,0.814,385,0.814,386,0.814,387,0.814,388,0.814,389,0.814,390,0.814,391,0.814,392,0.814,393,0.814,394,0.814,395,1.36,396,0.814,397,1.36,398,1.36,399,1.36,400,1.36,401,1.36,402,0.814,403,0.814,404,0.814,405,0.814,441,1.972,442,1.972,443,1.972,444,1.972,445,1.972,446,1.18,447,1.18,448,1.972,449,1.972,450,1.18,451,1.18,452,1.18,453,1.18,454,1.18,455,1.18,456,1.18,457,1.18,458,1.18,459,1.18,460,1.18,461,1.18,462,1.18,463,1.18,464,1.18,465,1.18,466,1.18,467,1.18,468,1.18,469,1.18,470,1.18,471,1.18,472,1.18,473,1.18]],["title/injectables/PropertyGridControlProvider.html",[474,1.689,475,1.481]],["body/injectables/PropertyGridControlProvider.html",[0,0.213,2,0.498,3,0.419,7,0.345,17,0.582,18,0.74,19,2.023,23,1.64,26,0.68,27,0.047,28,1.112,29,0.633,30,0.939,31,1.194,37,0.419,39,0.498,48,0.438,49,0.145,50,1.222,57,0.978,63,1.286,86,0.978,116,1.168,134,0.035,135,0.035,136,1.168,139,1.976,140,1.976,144,3.019,155,2.294,161,1.414,200,0.989,236,1.906,281,1.693,340,2.522,409,1.594,474,2.876,475,2.522,476,2.375,477,5.065,478,4.378,479,4.378,480,4.378,481,3.445,482,4.378,483,3.445,484,5.228,485,3.445,486,3.445,487,3.445,488,3.445,489,3.445]],["title/modules/PropertyGridModule.html",[490,1.16,491,1.308]],["body/modules/PropertyGridModule.html",[2,0.522,3,0.439,4,0.61,7,0.362,18,0.871,27,0.046,37,0.675,39,0.522,40,0.88,41,0.88,48,0.549,49,0.152,116,0.807,120,1.482,127,1.553,130,1.641,131,1.037,134,0.036,135,0.036,136,0.807,238,1.317,281,1.17,360,1.672,407,1.482,409,2.088,410,2.385,411,3.111,475,2.364,490,1.852,491,2.589,492,1.672,493,2.94,494,2.491,495,2.936,496,2.936,497,2.936,498,3.111,499,2.491,500,2.158,501,3.612,502,3.667,503,4.511,504,4.511,505,3.612,506,3.667,507,4.511,508,4.511,509,2.936,510,2.936,511,3.111,512,3.612]],["title/interfaces/PropertyItemMeta.html",[218,0.631,407,1.16]],["body/interfaces/PropertyItemMeta.html",[0,0.115,2,0.394,3,0.331,7,0.273,17,0.46,18,0.882,21,0.882,26,0.689,27,0.048,28,0.952,29,0.542,31,1.253,37,0.562,39,0.394,40,0.532,41,0.732,48,0.429,54,0.532,57,1.081,59,1.987,60,1.367,61,1.895,62,0.993,63,1.172,64,1.39,65,1.345,70,1.895,71,1.367,74,0.782,79,0.993,81,0.993,86,1.272,87,1.326,97,1.987,113,0.882,114,1.895,116,0.957,122,1.118,128,1.214,134,0.03,135,0.03,136,0.608,150,0.882,170,3.047,182,1.735,183,1.261,200,1.077,204,0.782,218,0.957,220,1.428,224,1.568,236,0.993,238,0.993,241,1.367,253,1.428,280,1.261,281,0.882,306,1.735,326,2.143,406,1.628,407,1.895,408,2.955,409,1.261,410,1.261,411,1.879,412,1.879,413,1.879,414,2.585,415,1.879,416,1.879,417,1.879,418,2.215,419,1.879,420,1.879,421,1.879,422,1.879,423,1.879,424,1.879,425,1.879,426,2.585,427,2.585,428,1.879,429,2.585,430,2.585,431,3.183,432,2.955,433,1.879,434,1.879,435,1.879,436,2.585,437,2.585,438,2.585,439,1.879,440,1.879]],["title/classes/PropertyValue.html",[49,0.119,360,1.308]],["body/classes/PropertyValue.html",[0,0.115,2,0.254,3,0.214,4,0.563,7,0.176,10,0.506,17,0.297,18,0.901,19,1.954,22,0.642,23,1.214,26,0.493,27,0.048,29,0.394,30,0.65,31,0.957,33,1.052,37,0.456,39,0.254,40,0.976,48,0.333,49,0.158,50,1.286,54,0.344,57,0.744,58,0.642,64,1.283,65,0.845,73,0.642,74,1.164,86,0.744,102,0.642,105,0.642,113,1.214,115,1.367,116,1.166,119,0.815,130,0.506,131,0.956,134,0.022,135,0.022,136,0.905,139,1.538,140,1.118,150,1.447,155,1.427,161,1.758,177,1.431,179,1.431,180,2.136,186,1.367,187,0.815,191,0.815,200,1.283,204,1.573,224,0.882,235,1.427,236,1.477,237,1.052,238,0.993,241,1.823,244,1.878,245,1.878,246,1.878,247,1.214,248,1.878,249,2.296,250,1.878,251,1.214,252,1.878,253,1.427,254,2.584,255,1.214,256,1.214,257,1.214,258,1.214,259,1.878,260,1.214,261,1.214,262,1.214,263,3.081,264,2.296,265,3.183,266,1.214,267,1.627,268,1.214,269,2.794,270,1.878,271,3.267,272,3.337,273,2.584,274,1.214,275,1.214,276,1.214,277,1.214,278,1.214,279,2.296,280,0.815,281,0.57,282,1.214,283,1.214,284,2.296,285,2.794,286,2.584,287,1.214,288,2.296,289,1.214,290,1.214,291,1.214,292,2.584,293,2.584,294,2.296,295,2.584,296,3.183,297,2.584,298,1.214,299,1.878,300,1.214,301,1.214,302,1.214,303,2.296,304,1.214,305,1.214,306,1.26,307,2.296,308,1.878,309,2.584,310,1.214,311,1.878,312,2.794,313,1.214,314,1.214,315,1.878,316,1.214,317,1.214,318,1.214,319,1.214,320,1.214,321,1.214,322,1.214,323,1.214,324,1.214,325,1.214,326,0.723,327,1.214,328,1.214,329,1.214,330,1.214,331,1.878,332,1.214,333,1.214,334,1.878,335,1.878,336,1.878,337,1.214,338,1.214,339,1.214,340,1.427,341,1.214,342,1.214,343,1.214,344,1.214,345,1.214,346,1.214,347,1.214,348,1.214,349,1.878,350,1.878,351,1.214,352,1.214,353,1.214,354,1.214,355,1.214,356,1.214,357,1.214,358,1.214,359,1.214,360,1.541,361,1.214,362,1.214,363,1.878,364,1.214,365,2.584,366,1.214,367,1.214,368,1.214,369,1.214,370,1.878,371,1.878,372,1.214,373,1.214,374,2.296,375,1.214,376,1.214,377,1.214,378,1.214,379,1.214,380,1.214,381,1.214,382,1.214,383,1.214,384,1.214,385,1.214,386,1.214,387,1.214,388,1.214,389,1.214,390,1.214,391,1.214,392,1.214,393,1.214,394,1.214,395,1.214,396,1.214,397,1.878,398,1.878,399,1.214,400,1.878,401,1.878,402,1.214,403,1.214,404,1.878,405,1.214,513,1.76,514,1.76,515,1.76,516,1.76,517,1.76]],["title/interfaces/PropertyValueAccess.html",[218,0.631,219,1.481]],["body/interfaces/PropertyValueAccess.html",[0,0.225,2,0.462,3,0.389,4,0.54,7,0.32,10,0.918,26,0.508,27,0.048,29,0.712,30,0.624,37,0.508,38,2.021,39,0.462,41,0.907,48,0.465,49,0.135,50,1.059,54,0.624,55,1.713,63,0.812,87,0.918,127,0.918,128,1.035,134,0.034,135,0.034,136,0.714,137,1.91,138,2.877,139,2.19,140,1.713,141,2.204,142,2.204,143,2.204,145,2.204,146,2.204,148,2.204,150,1.595,151,2.877,153,3.203,161,2.021,163,2.204,164,3.203,167,2.204,169,2.877,175,2.204,180,1.931,181,2.877,182,2.15,183,1.48,184,2.204,185,1.91,186,1.312,187,1.48,188,3.396,189,3.203,190,2.204,191,1.48,192,2.204,193,2.204,194,2.204,195,2.204,196,2.204,197,2.204,198,2.204,199,2.204,200,1.198,201,2.204,202,2.204,203,2.204,204,0.918,205,2.204,206,2.204,207,2.204,208,2.204,209,2.204,210,2.204,211,2.204,212,2.204,213,2.204,214,2.204,215,2.877,216,2.204,217,2.204,218,1.037,219,2.187,220,2.187,221,2.204]],["title/modules/ShowcaseModule.html",[490,1.16,518,1.689]],["body/modules/ShowcaseModule.html",[1,1.623,2,0.495,3,0.417,4,0.579,7,0.343,27,0.046,37,0.688,39,0.495,42,1.587,44,2.517,45,2.517,46,2.517,47,2.287,48,0.437,49,0.144,53,1.394,116,0.766,120,1.407,131,1.254,134,0.035,135,0.035,183,1.587,410,2.02,490,1.791,491,2.47,492,1.587,493,2.87,494,3.312,498,3.01,499,2.364,500,2.048,502,3.548,506,3.548,509,3.548,510,2.786,511,3.01,518,3.359,519,2.786,520,2.786,521,3.428,522,2.786,523,3.428,524,4.802,525,4.364,526,4.802,527,4.364,528,2.786,529,3.428,530,4.364,531,4.364,532,4.364,533,4.364,534,4.364,535,4.364,536,4.364,537,4.364,538,4.364,539,4.364,540,3.428,541,3.428]],["title/components/SimpleTextEditorComponent.html",[0,0.119,53,0.718]],["body/components/SimpleTextEditorComponent.html",[0,0.209,1,1.057,2,0.383,3,0.448,4,0.622,5,1.585,6,1.585,7,0.265,8,1.39,9,1.39,10,1.461,11,2.219,12,1.585,13,1.585,14,1.585,15,1.585,16,1.585,17,0.448,18,0.714,19,1.341,20,1.585,21,1.68,22,0.967,23,1.192,25,1.956,26,0.655,27,0.047,28,0.673,29,0.735,30,0.891,31,1.071,34,1.585,37,0.514,38,2.036,39,0.383,40,0.891,41,0.824,42,1.227,43,1.585,44,1.928,45,1.39,46,1.928,47,1.39,48,0.457,49,0.192,50,0.673,51,1.585,52,2.161,53,1.217,54,0.718,55,1.873,56,1.734,57,1.136,58,1.748,59,1.734,60,0.967,61,1.088,62,1.54,63,1.073,64,1.531,65,0.934,66,1.39,67,1.39,68,2.76,69,1.39,70,1.51,71,1.341,72,1.928,73,0.967,74,1.057,75,1.39,76,1.39,77,1.928,78,1.928,79,1.341,80,2.214,81,1.341,82,1.703,83,1.39,84,2.214,85,1.39,86,0.822,87,0.762,88,1.928,89,1.39,90,1.39,91,1.39,92,1.39,93,2.198,94,2.512,95,2.864,96,1.585,97,1.873,98,1.39,99,1.39,100,1.585,101,1.585,102,0.967,103,1.585,104,2.198,105,0.967,106,1.585,107,2.525,108,2.198,109,1.585,110,1.585,111,1.585,112,1.585,113,0.859,114,1.088,115,1.088,120,1.088,121,1.928,122,1.51,123,2.198,124,2.727,125,1.585,126,1.585,127,0.762,128,0.859,129,1.585,130,0.762,131,0.762,132,1.585,133,1.585,134,0.03,135,0.03,542,2.652,543,2.652]],["title/coverage.html",[544,3.125]],["body/coverage.html",[0,0.213,1,0.988,7,0.344,8,2.653,25,1.592,26,0.418,27,0.047,30,0.671,40,0.671,41,0.671,49,0.213,53,0.873,56,1.412,116,0.977,127,0.988,130,0.988,134,0.035,135,0.035,136,1.256,137,2.874,204,1.66,218,1.13,219,1.802,235,1.802,236,2.003,237,2.874,238,1.754,241,1.254,267,2.055,281,1.417,360,1.592,406,2.874,407,1.412,409,1.592,474,2.055,475,1.802,476,3.016,544,2.795,545,2.795,546,3.439,547,3.439,548,3.439,549,4.809,550,5.427,551,4.374,552,3.684,553,3.439,554,3.439,555,3.439,556,3.439,557,4.374,558,2.795,559,3.555,560,2.795,561,3.555,562,2.795,563,2.795,564,3.439]],["title/dependencies.html",[492,1.572,565,2.367]],["body/dependencies.html",[4,0.762,27,0.044,131,1.295,134,0.041,135,0.041,492,2.088,566,4.51]],["title/index.html",[17,0.4,567,1.632,568,1.632]],["body/index.html",[0,0.156,3,0.325,4,0.716,9,2.518,18,0.937,21,1.482,26,0.656,27,0.046,28,0.938,29,0.661,31,1.073,37,0.516,40,0.521,41,0.521,42,1.235,48,0.37,49,0.112,52,1.878,53,0.678,54,0.521,56,1.095,57,1.073,58,1.752,59,2.092,60,1.946,61,1.517,62,1.668,63,1.076,64,1.515,65,1.22,66,1.399,67,1.399,68,2.518,69,1.399,70,1.517,71,1.347,72,1.399,73,0.973,74,1.314,75,1.399,76,1.399,77,1.937,78,1.937,79,1.546,80,2.222,81,1.668,82,1.71,83,1.399,84,2.222,85,1.399,86,1.16,87,0.766,88,1.937,89,1.399,90,2.222,91,1.399,92,1.399,94,1.399,97,1.74,114,1.095,116,1.11,117,2.169,119,2.301,121,1.399,122,1.517,128,1.373,131,1.061,134,0.034,135,0.03,150,1.197,182,1.235,185,1.595,186,1.095,218,0.596,224,1.482,280,1.962,306,1.962,326,1.878,340,1.399,407,1.095,412,2.548,413,2.548,414,3.155,415,2.548,416,2.548,417,1.84,419,2.548,420,2.548,421,2.548,422,2.548,423,2.548,424,1.84,425,1.84,491,1.235,492,1.235,493,1.595,511,1.84,567,1.84,568,1.84,569,2.669,570,2.669,571,4.239,572,2.669,573,2.669,574,2.669,575,2.669,576,2.669,577,2.669,578,2.669,579,2.669,580,2.669,581,2.669,582,2.669,583,2.669,584,2.669,585,4.575,586,2.669,587,2.669,588,2.669,589,2.169,590,2.669,591,2.669,592,2.669,593,2.669,594,2.169,595,2.169,596,3.695,597,2.669,598,2.669,599,2.669,600,2.669,601,2.669,602,2.669,603,2.669]],["title/license.html",[567,1.632,568,1.632,604,1.924]],["body/license.html",[7,0.38,27,0.037,60,1.696,81,1.384,82,2.328,99,1.989,134,0.037,135,0.037,159,3.085,410,1.757,500,2.268,545,3.085,589,3.085,594,3.085,604,3.085,605,3.796,606,5.03,607,3.796,608,3.796,609,4.652,610,3.796,611,3.796,612,3.796,613,3.796,614,4.652,615,3.796,616,5.243,617,5.641,618,3.796,619,4.652,620,5.03,621,3.796,622,4.652,623,3.796,624,3.796,625,3.796,626,3.796,627,3.796,628,3.796,629,3.796,630,3.796,631,3.796,632,3.796,633,3.796,634,3.796,635,4.652,636,4.652,637,3.796,638,3.796,639,4.652,640,3.796,641,3.796,642,3.796,643,3.796,644,3.796,645,3.796,646,3.796,647,3.796,648,3.796,649,3.796,650,3.796,651,3.796,652,3.796,653,3.796,654,3.796,655,3.796,656,3.796,657,3.796,658,3.796,659,3.796]],["title/modules.html",[490,1.578]],["body/modules.html",[27,0.041,134,0.041,135,0.041,490,1.828,491,2.061,518,2.661,528,4.157,595,4.157,660,5.114,661,5.114]],["title/overview.html",[662,3.125]],["body/overview.html",[0,0.166,1,1.605,27,0.046,48,0.394,49,0.166,53,1.298,98,2.679,102,1.436,105,1.436,120,1.617,127,1.468,130,1.605,134,0.038,135,0.038,218,0.88,410,1.823,474,2.354,490,1.953,491,2.609,492,1.823,493,2.354,494,2.717,495,3.202,496,3.202,497,3.202,498,3.281,499,2.717,500,2.354,518,3.391,519,3.202,520,3.202,522,3.202,662,3.202]],["title/miscellaneous/variables.html",[552,2.342,663,1.924]],["body/miscellaneous/variables.html",[17,0.576,26,0.583,27,0.048,28,1.324,29,0.754,30,0.666,31,0.762,40,0.935,62,1.244,65,0.866,71,1.244,79,1.586,116,0.972,119,2.336,134,0.035,135,0.035,136,0.972,200,0.98,204,0.98,224,1.105,236,1.586,238,1.586,241,1.244,281,1.409,326,1.4,406,2.6,407,1.4,408,3,409,2.218,426,2.352,427,3,428,2.352,429,3,430,3,431,3.48,432,3.304,433,2.352,434,2.352,435,2.352,436,3,437,3,438,3,439,2.352,440,2.352,475,1.787,476,3,552,2.352,558,2.773,559,4.333,560,2.773,561,2.773,562,3.894,563,3.894,663,2.773,664,4.351,665,4.351,666,3.411,667,3.411,668,3.411,669,3.411,670,4.351]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":204,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.07",{"_index":322,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["0.1",{"_index":297,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["0/1",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["08",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["1",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"overview.html":{}}}],["1.0.4",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":296,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["10px",{"_index":302,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["12",{"_index":305,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["120px",{"_index":329,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["12px",{"_index":287,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["14",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["18px",{"_index":304,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["19",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["1px",{"_index":265,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["2",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"overview.html":{}}}],["2018",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"license.html":{}}}],["20px",{"_index":311,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["2px",{"_index":284,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["3",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["3px",{"_index":294,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["4",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"overview.html":{}}}],["51f41c",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["5px",{"_index":272,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["616161",{"_index":277,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["6px",{"_index":301,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["8px",{"_index":278,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["95b8e7",{"_index":266,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["_controlvaluechangefn",{"_index":141,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["_map",{"_index":477,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["_meta",{"_index":324,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["_option",{"_index":323,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["_valu",{"_index":142,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["a.ord",{"_index":388,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["abov",{"_index":589,"title":{},"body":{"index.html":{},"license.html":{}}}],["accessor",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["action",{"_index":654,"title":{},"body":{"license.html":{}}}],["actual_compon",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["addit",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["aftercontentinit",{"_index":244,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["afterviewinit",{"_index":245,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["ag",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["and/or",{"_index":629,"title":{},"body":{"license.html":{}}}],["angular",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":257,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["angular/common",{"_index":505,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["angular/cor",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{}}}],["angular/form",{"_index":183,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{}}}],["angular/materi",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{}}}],["angular/platform",{"_index":509,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{}}}],["angular2",{"_index":583,"title":{},"body":{"index.html":{}}}],["angularj",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["anim",{"_index":252,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["animate('400m",{"_index":319,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["app.compon",{"_index":529,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["app.component.html",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["app.component.scss",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/PropertyGridComponent.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["aris",{"_index":658,"title":{},"body":{"license.html":{}}}],["array",{"_index":340,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["associ",{"_index":618,"title":{},"body":{"license.html":{}}}],["author",{"_index":648,"title":{},"body":{"license.html":{}}}],["b",{"_index":387,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["b.order",{"_index":389,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["backbon",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["backbone.j",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["background",{"_index":273,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["basic",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["belong",{"_index":415,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["bezier(0.86",{"_index":321,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["birth",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["bold",{"_index":276,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["boolean",{"_index":326,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":494,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"overview.html":{}}}],["border",{"_index":263,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["both",{"_index":420,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["bottom",{"_index":279,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["box",{"_index":292,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["brows",{"_index":661,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":528,"title":{},"body":{"modules/ShowcaseModule.html":{},"modules.html":{}}}],["browser/anim",{"_index":510,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{}}}],["browseranimationsmodul",{"_index":508,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["browsermodul",{"_index":527,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["buildcompon",{"_index":145,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["c",{"_index":607,"title":{},"body":{"license.html":{}}}],["card",{"_index":299,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["case",{"_index":599,"title":{},"body":{"index.html":{}}}],["catch",{"_index":206,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ccc",{"_index":283,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["cdr",{"_index":342,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["changedetectorref",{"_index":246,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["charg",{"_index":613,"title":{},"body":{"license.html":{}}}],["checkbox",{"_index":585,"title":{},"body":{"index.html":{}}}],["claim",{"_index":651,"title":{},"body":{"license.html":{}}}],["class",{"_index":49,"title":{"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["cluster_propertygridmodul",{"_index":495,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["cluster_propertygridmodule_declar",{"_index":496,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["cluster_propertygridmodule_export",{"_index":497,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["cluster_showcasemodul",{"_index":519,"title":{},"body":{"modules/ShowcaseModule.html":{},"overview.html":{}}}],["cluster_showcasemodule_bootstrap",{"_index":522,"title":{},"body":{"modules/ShowcaseModule.html":{},"overview.html":{}}}],["cluster_showcasemodule_declar",{"_index":520,"title":{},"body":{"modules/ShowcaseModule.html":{},"overview.html":{}}}],["cluster_showcasemodule_import",{"_index":521,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["code",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["color",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["colspan2",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["column",{"_index":421,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["commonmodul",{"_index":504,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component'},{'nam",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["component.instance.registeronchang",{"_index":211,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.registeronchange(this._controlvaluechangefn",{"_index":212,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.valu",{"_index":210,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.valuechang",{"_index":213,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.valuechange.subscribe(this._controlvaluechangefn",{"_index":214,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component_templ",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["componentfactori",{"_index":201,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["componentfactoryresolv",{"_index":153,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["componentopt",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["componentref",{"_index":164,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["components/properti",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["componenttyp",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["condit",{"_index":634,"title":{},"body":{"license.html":{}}}],["connect",{"_index":659,"title":{},"body":{"license.html":{}}}],["console.error(",{"_index":209,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["console.error('load",{"_index":207,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["const",{"_index":200,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{}}}],["constructor(componentfactoryresolv",{"_index":152,"title":{},"body":{"components/CustomComponent.html":{}}}],["constructor(el",{"_index":341,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["constructor(nam",{"_index":239,"title":{},"body":{"classes/InternalGroup.html":{}}}],["constructor(o",{"_index":513,"title":{},"body":{"classes/PropertyValue.html":{}}}],["constructor(priv",{"_index":191,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["constructor(publ",{"_index":405,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["contain",{"_index":600,"title":{},"body":{"index.html":{}}}],["contentchildren",{"_index":247,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["contentchildren(ngxtempl",{"_index":339,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["context",{"_index":562,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continu",{"_index":374,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["contract",{"_index":655,"title":{},"body":{"license.html":{}}}],["control",{"_index":281,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlvalueaccessor",{"_index":182,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["convert",{"_index":424,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["convertvalu",{"_index":441,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["convertvalue(meta",{"_index":364,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["copi",{"_index":616,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":606,"title":{},"body":{"license.html":{}}}],["coverag",{"_index":544,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":580,"title":{},"body":{"index.html":{}}}],["cubic",{"_index":320,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["custom",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["custom.compon",{"_index":411,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{}}}],["custom_elements_schema",{"_index":526,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["customcompon",{"_index":127,"title":{"components/CustomComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["damag",{"_index":652,"title":{},"body":{"license.html":{}}}],["data",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["date",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["dbdbdb",{"_index":270,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["deal",{"_index":619,"title":{},"body":{"license.html":{}}}],["declar",{"_index":493,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"index.html":{},"overview.html":{}}}],["decor",{"_index":174,"title":{},"body":{"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/PropertyGridComponent.html":{}}}],["default",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultprovid",{"_index":409,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultprovider.compon",{"_index":503,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["defaultprovider.getcomponenttype('checkbox",{"_index":434,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["defaultprovider.getcomponenttype('text",{"_index":433,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["defaultprovider.getcomponenttype(m.typ",{"_index":435,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["defaulttempl",{"_index":338,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["defin",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{}}}],["demo",{"_index":587,"title":{},"body":{"index.html":{}}}],["depend",{"_index":492,"title":{"dependencies.html":{}},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["describ",{"_index":591,"title":{},"body":{"index.html":{}}}],["descript",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["destroycompon",{"_index":146,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["direct",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["display",{"_index":306,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["distribut",{"_index":627,"title":{},"body":{"license.html":{}}}],["document",{"_index":545,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["dot",{"_index":282,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["dropdown",{"_index":597,"title":{},"body":{"index.html":{}}}],["e",{"_index":169,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["each",{"_index":592,"title":{},"body":{"index.html":{}}}],["edit",{"_index":578,"title":{},"body":{"index.html":{}}}],["editor",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["eg",{"_index":425,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["el",{"_index":446,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["el.nativeelement.parentelement.classlist.contains('intern",{"_index":344,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["element",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["elementref",{"_index":248,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["entri",{"_index":143,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["entrycompon",{"_index":502,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{}}}],["environ",{"_index":559,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":208,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["event",{"_index":159,"title":{},"body":{"components/CustomComponent.html":{},"license.html":{}}}],["eventemitt",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{}}}],["exampl",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["example/index.html",{"_index":603,"title":{},"body":{"index.html":{}}}],["exampleeditoropt",{"_index":56,"title":{"classes/ExampleEditorOptions.html":{}},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"index.html":{}}}],["examplestudentopt",{"_index":25,"title":{"classes/ExampleStudentOptions.html":{}},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{}}}],["excel",{"_index":574,"title":{},"body":{"index.html":{}}}],["export",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":641,"title":{},"body":{"license.html":{}}}],["extend",{"_index":220,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{}}}],["f5f5f5",{"_index":290,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["fals",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["femal",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["fff",{"_index":300,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"license.html":{}}}],["fit",{"_index":644,"title":{},"body":{"license.html":{}}}],["flex",{"_index":307,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["flow",{"_index":308,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["follow",{"_index":594,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["fontcolor",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["fontsiz",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["formsmodul",{"_index":538,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["framework",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["free",{"_index":612,"title":{},"body":{"license.html":{}}}],["function",{"_index":170,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/PropertyItemMeta.html":{}}}],["furnish",{"_index":632,"title":{},"body":{"license.html":{}}}],["g",{"_index":390,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["g.items.foreach(o",{"_index":393,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["g.name",{"_index":391,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["gender",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["get",{"_index":567,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getcomponenttyp",{"_index":478,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["getcomponenttype(typ",{"_index":480,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["getdata",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["getmeta",{"_index":468,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["getopt",{"_index":471,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["gettempl",{"_index":442,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["gettemplate(typ",{"_index":354,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["getvalu",{"_index":177,"title":{},"body":{"components/CustomComponent.html":{},"classes/PropertyValue.html":{}}}],["give",{"_index":576,"title":{},"body":{"index.html":{}}}],["grant",{"_index":611,"title":{},"body":{"license.html":{}}}],["grid",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"modules/ShowcaseModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["grid'},{'nam",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["grid.compon",{"_index":507,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["grid.component.t",{"_index":237,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"coverage.html":{}}}],["grid.component.ts:169",{"_index":463,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:170",{"_index":462,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:171",{"_index":465,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:174",{"_index":451,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:177",{"_index":450,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:180",{"_index":452,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:184",{"_index":447,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:187",{"_index":448,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:192",{"_index":469,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:197",{"_index":449,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:204",{"_index":472,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:208",{"_index":464,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:209",{"_index":467,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:211",{"_index":466,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:212",{"_index":445,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:218",{"_index":457,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:230",{"_index":456,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:236",{"_index":454,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:244",{"_index":460,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:248",{"_index":461,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:252",{"_index":453,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:256",{"_index":455,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:298",{"_index":458,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:311",{"_index":459,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:317",{"_index":516,"title":{},"body":{"classes/PropertyValue.html":{}}}],["grid.component.ts:321",{"_index":517,"title":{},"body":{"classes/PropertyValue.html":{}}}],["grid.component.ts:323",{"_index":514,"title":{},"body":{"classes/PropertyValue.html":{}}}],["grid.component.ts:325",{"_index":515,"title":{},"body":{"classes/PropertyValue.html":{}}}],["grid.component.ts:330",{"_index":242,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:331",{"_index":240,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:333",{"_index":243,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid/custom.component.t",{"_index":137,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["grid/custom.component.ts:20",{"_index":171,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:21",{"_index":172,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:23",{"_index":176,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:24",{"_index":173,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:26",{"_index":157,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:29",{"_index":156,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:32",{"_index":158,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:38",{"_index":178,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:43",{"_index":154,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:50",{"_index":166,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:54",{"_index":168,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:59",{"_index":160,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:76",{"_index":165,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:90",{"_index":162,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/index",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["grid/index.t",{"_index":501,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["grid/properti",{"_index":236,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["group.items.push(v",{"_index":384,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["groups.find(o",{"_index":379,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["groups.foreach(o",{"_index":385,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["groups.push(group",{"_index":383,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["header",{"_index":289,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["height",{"_index":315,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["herebi",{"_index":610,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["hidden/vis",{"_index":417,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["hint",{"_index":413,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["holder",{"_index":649,"title":{},"body":{"license.html":{}}}],["html",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["icustomdynamiccompon",{"_index":41,"title":{"interfaces/ICustomDynamicComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"index.html":{}}}],["identifi",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["impli",{"_index":642,"title":{},"body":{"license.html":{}}}],["import",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["includ",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"license.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{}}}],["inform",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["init",{"_index":418,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{}}}],["initcompon",{"_index":147,"title":{},"body":{"components/CustomComponent.html":{}}}],["initcomponent(compon",{"_index":163,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["initmeta",{"_index":369,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["initst",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["inject",{"_index":474,"title":{"injectables/PropertyGridControlProvider.html":{}},"body":{"injectables/PropertyGridControlProvider.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":150,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["interfac",{"_index":218,"title":{"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{}},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["intern",{"_index":285,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["internalgroup",{"_index":235,"title":{"classes/InternalGroup.html":{}},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"coverage.html":{}}}],["internalgroup(undefin",{"_index":372,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["internalgroup(v.group",{"_index":382,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["internalpropertyitemmeta",{"_index":241,"title":{"interfaces/InternalPropertyItemMeta.html":{}},"body":{"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isintern",{"_index":325,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["it'",{"_index":590,"title":{},"body":{"index.html":{}}}],["item",{"_index":238,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["item.nam",{"_index":260,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["item.templ",{"_index":350,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["jqueri",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["json",{"_index":540,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["json.parse(json.stringify(this.stud",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["key",{"_index":408,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":640,"title":{},"body":{"license.html":{}}}],["label",{"_index":280,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["labelwidth",{"_index":328,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["left",{"_index":291,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["legend",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"overview.html":{}}}],["liabil",{"_index":653,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":650,"title":{},"body":{"license.html":{}}}],["licens",{"_index":604,"title":{"license.html":{}},"body":{"license.html":{}}}],["lili",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["limit",{"_index":622,"title":{},"body":{"license.html":{}}}],["list",{"_index":598,"title":{},"body":{"index.html":{}}}],["live",{"_index":586,"title":{},"body":{"index.html":{}}}],["m",{"_index":427,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["male",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["map",{"_index":484,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["margin",{"_index":286,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["match",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matcheckbox",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{}}}],["matcheckboxmodul",{"_index":531,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["matdatepick",{"_index":524,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["matdatepickermodul",{"_index":533,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["matinputmodul",{"_index":537,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["matnativedatemodul",{"_index":535,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["matradiomodul",{"_index":536,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["matslid",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{}}}],["matslidermodul",{"_index":532,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["matslidetoggl",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{}}}],["matslidetogglemodul",{"_index":534,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["merchant",{"_index":643,"title":{},"body":{"license.html":{}}}],["merg",{"_index":625,"title":{},"body":{"license.html":{}}}],["meta",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["meta(v",{"_index":330,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["meta({nam",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["meta.hasownproperty(i",{"_index":373,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["meta.t",{"_index":406,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meta.valueconvert",{"_index":367,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["meta.valueconvert(v",{"_index":368,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["meta[i",{"_index":375,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["method",{"_index":144,"title":{},"body":{"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{}}}],["miscellan",{"_index":663,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":605,"title":{},"body":{"license.html":{}}}],["modernizr",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["modifi",{"_index":624,"title":{},"body":{"license.html":{}}}],["modul",{"_index":490,"title":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"modules.html":{}},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["name/label",{"_index":422,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["new",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngaftercontentinit",{"_index":352,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["ngafterviewinit",{"_index":345,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["ngmodul",{"_index":506,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{}}}],["ngoninit",{"_index":148,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ngx",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ngxjsonviewermodul",{"_index":539,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["ngxpropertygrid",{"_index":569,"title":{},"body":{"index.html":{}}}],["ngxtemplat",{"_index":258,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["ngxtemplatemodul",{"_index":511,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"index.html":{}}}],["none",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["noninfring",{"_index":647,"title":{},"body":{"license.html":{}}}],["noopanimationsmodul",{"_index":530,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["notic",{"_index":635,"title":{},"body":{"license.html":{}}}],["null",{"_index":358,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["number",{"_index":224,"title":{},"body":{"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["o",{"_index":404,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["o.items.sort((a",{"_index":386,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["o.nam",{"_index":380,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["object",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["object.assign(component.inst",{"_index":216,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["obtain",{"_index":615,"title":{},"body":{"license.html":{}}}],["omit",{"_index":416,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["oninit",{"_index":138,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["onlin",{"_index":582,"title":{},"body":{"index.html":{}}}],["onvaluechang",{"_index":149,"title":{},"body":{"components/CustomComponent.html":{}}}],["onvaluechange(",{"_index":167,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["option",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["optionlabel",{"_index":443,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["optionlabel(opt",{"_index":262,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["optionlabel(v",{"_index":395,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["options(v",{"_index":333,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["optionvalu",{"_index":444,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["optionvalue(v",{"_index":399,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["order",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["otherwis",{"_index":657,"title":{},"body":{"license.html":{}}}],["out",{"_index":500,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":151,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["overflow",{"_index":316,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["overview",{"_index":662,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.valu",{"_index":261,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["packag",{"_index":565,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":271,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["page",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["paramet",{"_index":155,"title":{},"body":{"components/CustomComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"classes/PropertyValue.html":{}}}],["parseint",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["particular",{"_index":645,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":609,"title":{},"body":{"license.html":{}}}],["permit",{"_index":631,"title":{},"body":{"license.html":{}}}],["person",{"_index":614,"title":{},"body":{"license.html":{}}}],["play",{"_index":581,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["pojo",{"_index":573,"title":{},"body":{"index.html":{}}}],["portion",{"_index":638,"title":{},"body":{"license.html":{}}}],["prefer",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["privat",{"_index":139,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["pro",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["product",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properti",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["propertygridcompon",{"_index":130,"title":{"components/PropertyGridComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["propertygridcontrolprovid",{"_index":475,"title":{"injectables/PropertyGridControlProvider.html":{}},"body":{"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["propertygridmodul",{"_index":491,"title":{"modules/PropertyGridModule.html":{}},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["propertyitemmeta",{"_index":407,"title":{"interfaces/PropertyItemMeta.html":{}},"body":{"interfaces/InternalPropertyItemMeta.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propertyvalu",{"_index":360,"title":{"classes/PropertyValue.html":{}},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{},"coverage.html":{}}}],["propertyvalue(meta",{"_index":359,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["propertyvalue(this.opt",{"_index":361,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["propertyvalueaccess",{"_index":219,"title":{"interfaces/PropertyValueAccess.html":{}},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["proprti",{"_index":593,"title":{},"body":{"index.html":{}}}],["provid",{"_index":410,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"modules/ShowcaseModule.html":{},"license.html":{},"overview.html":{}}}],["provider.t",{"_index":476,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["provider.ts:12",{"_index":481,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["provider.ts:6",{"_index":485,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["provider.ts:7",{"_index":486,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["provider.ts:8",{"_index":483,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["public",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{}}}],["publish",{"_index":626,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":646,"title":{},"body":{"license.html":{}}}],["querylist",{"_index":249,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["read",{"_index":185,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["readonli",{"_index":140,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["regist",{"_index":479,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["register(typ",{"_index":482,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["requir",{"_index":563,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":499,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"overview.html":{}}}],["restrict",{"_index":621,"title":{},"body":{"license.html":{}}}],["result",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{}}}],["rgba(0",{"_index":303,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["rgba(10",{"_index":295,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["right",{"_index":623,"title":{},"body":{"license.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["root'},{'nam",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["row",{"_index":309,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["row.nam",{"_index":259,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["rows.push(g",{"_index":392,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["rows.push(o",{"_index":394,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["schema",{"_index":525,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["see",{"_index":602,"title":{},"body":{"index.html":{}}}],["seen",{"_index":588,"title":{},"body":{"index.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{}}}],["sell",{"_index":630,"title":{},"body":{"license.html":{}}}],["set",{"_index":186,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["setmeta(v",{"_index":470,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["setoptions(v",{"_index":473,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["setvalue(v",{"_index":179,"title":{},"body":{"components/CustomComponent.html":{},"classes/PropertyValue.html":{}}}],["sex",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["shadow",{"_index":293,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["shall",{"_index":636,"title":{},"body":{"license.html":{}}}],["showcasemodul",{"_index":518,"title":{"modules/ShowcaseModule.html":{}},"body":{"modules/ShowcaseModule.html":{},"modules.html":{},"overview.html":{}}}],["simpl",{"_index":571,"title":{},"body":{"index.html":{}}}],["simpletexteditorcompon",{"_index":53,"title":{"components/SimpleTextEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/PropertyGridComponent.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["size",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["small",{"_index":570,"title":{},"body":{"index.html":{}}}],["softwar",{"_index":617,"title":{},"body":{"license.html":{}}}],["solid",{"_index":264,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["space",{"_index":268,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["span",{"_index":414,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["spec\\.t",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../properti",{"_index":665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/components/properti",{"_index":136,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/showcase/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{}}}],["src/app/showcase/app.component.ts:11",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/showcase/app.component.ts:16",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/showcase/app.component.ts:20",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/showcase/app.component.ts:28",{"_index":542,"title":{},"body":{"components/SimpleTextEditorComponent.html":{}}}],["src/app/showcase/app.component.ts:29",{"_index":543,"title":{},"body":{"components/SimpleTextEditorComponent.html":{}}}],["src/app/showcase/app.component.ts:37",{"_index":222,"title":{},"body":{"classes/ExampleEditorOptions.html":{}}}],["src/app/showcase/app.component.ts:40",{"_index":225,"title":{},"body":{"classes/ExampleEditorOptions.html":{}}}],["src/app/showcase/app.component.ts:43",{"_index":223,"title":{},"body":{"classes/ExampleEditorOptions.html":{}}}],["src/app/showcase/app.component.ts:46",{"_index":227,"title":{},"body":{"classes/ExampleEditorOptions.html":{}}}],["src/app/showcase/app.component.ts:54",{"_index":228,"title":{},"body":{"classes/ExampleEditorOptions.html":{}}}],["src/app/showcase/app.component.ts:62",{"_index":226,"title":{},"body":{"classes/ExampleEditorOptions.html":{}}}],["src/app/showcase/app.component.ts:69",{"_index":230,"title":{},"body":{"classes/ExampleStudentOptions.html":{}}}],["src/app/showcase/app.component.ts:72",{"_index":233,"title":{},"body":{"classes/ExampleStudentOptions.html":{}}}],["src/app/showcase/app.component.ts:75",{"_index":229,"title":{},"body":{"classes/ExampleStudentOptions.html":{}}}],["src/app/showcase/app.component.ts:78",{"_index":234,"title":{},"body":{"classes/ExampleStudentOptions.html":{}}}],["src/app/showcase/app.component.ts:81",{"_index":232,"title":{},"body":{"classes/ExampleStudentOptions.html":{}}}],["src/app/showcase/app.component.ts:84",{"_index":231,"title":{},"body":{"classes/ExampleStudentOptions.html":{}}}],["src/app/showcase/showcase.module.t",{"_index":523,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["src/environments/environment.prod.t",{"_index":558,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":560,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":561,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":568,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":253,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{}}}],["state('hidden",{"_index":314,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["state('vis",{"_index":317,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["statement",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["style",{"_index":254,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["styleurl",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["subitem",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{}}}],["subitems.push(v",{"_index":378,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["subject",{"_index":633,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":628,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":637,"title":{},"body":{"license.html":{}}}],["support",{"_index":595,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":660,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":426,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["tabl",{"_index":267,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":428,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["target.__meta__",{"_index":430,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["target.__meta__[key",{"_index":440,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["telephon",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"dependencies.html":{},"index.html":{}}}],["templatemap",{"_index":327,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["templateref",{"_index":250,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["text",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["textarea",{"_index":423,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["textbox",{"_index":596,"title":{},"body":{"index.html":{}}}],["that'",{"_index":579,"title":{},"body":{"index.html":{}}}],["this._controlvaluechangefn",{"_index":192,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this._map.get(typ",{"_index":489,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["this._map.set(typ",{"_index":487,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["this._meta",{"_index":331,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this._opt",{"_index":334,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this._valu",{"_index":188,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.buildcompon",{"_index":194,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.cdr.detectchang",{"_index":351,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.compon",{"_index":189,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.component.destroy",{"_index":217,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.component.instance.valu",{"_index":190,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(this.componenttyp",{"_index":202,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.componentopt",{"_index":215,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.components.push(componenttyp",{"_index":488,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["this.componenttyp",{"_index":196,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.defaulttempl",{"_index":346,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.defaulttemplates.foreach((item",{"_index":347,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.destroycompon",{"_index":198,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.entry.clear",{"_index":199,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.entry.createcomponent(componentfactori",{"_index":203,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.initcomponent(compon",{"_index":205,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.initmeta",{"_index":332,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.isintern",{"_index":343,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.meta",{"_index":336,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.meta.valueconvert",{"_index":402,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.meta.valueconvert(v",{"_index":403,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.o[this.meta.key",{"_index":401,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.onvaluechange(valu",{"_index":193,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.options[meta.key",{"_index":366,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.row",{"_index":370,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.stat",{"_index":363,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.subitem",{"_index":371,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap",{"_index":355,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap.hasownproperty(item.nam",{"_index":348,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap['default",{"_index":357,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap[item.nam",{"_index":349,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap[typ",{"_index":356,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.templates.foreach((item",{"_index":353,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.valuechange.emit(",{"_index":195,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["toggl",{"_index":362,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["tooltip",{"_index":412,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["top",{"_index":269,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["tort",{"_index":656,"title":{},"body":{"license.html":{}}}],["transit",{"_index":255,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["transition('vis",{"_index":318,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["tri",{"_index":197,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["trigger",{"_index":256,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["trigger('internalpropertygrid",{"_index":313,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["true",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["true/fals",{"_index":419,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["tvalu",{"_index":221,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["type",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":396,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["unedit",{"_index":601,"title":{},"body":{"index.html":{}}}],["unset",{"_index":312,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["us",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"license.html":{}}}],["usag",{"_index":584,"title":{},"body":{"index.html":{}}}],["user",{"_index":577,"title":{},"body":{"index.html":{}}}],["usevalu",{"_index":512,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["v",{"_index":180,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["v.__meta__",{"_index":335,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["v.group",{"_index":381,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["v.hidden",{"_index":376,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["v.label",{"_index":398,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["v.text",{"_index":397,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["v.type",{"_index":377,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["v.valu",{"_index":400,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["val",{"_index":365,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["valu",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value(v",{"_index":187,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["valuechang",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{}}}],["valueconvert",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["var",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["variabl",{"_index":552,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["view/edit",{"_index":572,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":175,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["viewchild('contain",{"_index":184,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["viewchildren",{"_index":251,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["viewchildren(ngxtempl",{"_index":337,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["viewcontainerref",{"_index":181,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["viewer",{"_index":541,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["visibl",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{}}}],["void",{"_index":161,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["want",{"_index":575,"title":{},"body":{"index.html":{}}}],["warranti",{"_index":639,"title":{},"body":{"license.html":{}}}],["webkit",{"_index":298,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["weight",{"_index":275,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["whether",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"license.html":{}}}],["white",{"_index":274,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["width",{"_index":288,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["without",{"_index":620,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":310,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["xmeta",{"_index":429,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["xmeta.componenttyp",{"_index":431,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["xmeta.initst",{"_index":437,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["xmeta.key",{"_index":439,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["xmeta.ord",{"_index":438,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["xmeta.typ",{"_index":432,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["xmeta.valueconvert",{"_index":436,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["yish",{"_index":608,"title":{},"body":{"license.html":{}}}],["zoom",{"_index":498,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/showcase/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                student\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/showcase/app.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            student\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        student:     ExampleStudentOptions\n\n                    \n                \n                    \n                        \n                            Type :     ExampleStudentOptions\n\n                        \n                    \n                    \n                        \n                            Default value : new ExampleStudentOptions()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        text:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/showcase/app.component.ts:16\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, EventEmitter} from '@angular/core';\nimport {meta, ICustomDynamicComponent} from '../components/property-grid/index';\nimport {MatCheckbox, MatSlider, MatSlideToggle} from '@angular/material';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    public student: ExampleStudentOptions = new ExampleStudentOptions();\n\n    constructor() {\n    }\n\n    public get data(): string {\n        return JSON.parse(JSON.stringify(this.student));\n    }\n\n    text: string;\n}\n\n@Component({\n    selector: 'app-text-editor',\n    template: ``\n})\nexport class SimpleTextEditorComponent implements ICustomDynamicComponent {\n    value: string;\n    valueChange: EventEmitter = new EventEmitter();\n}\n\nexport class ExampleEditorOptions {\n    @meta({\n        name: 'Font', description: 'The font editor to use', colSpan2: false,\n        componentType: SimpleTextEditorComponent, group: 'Editor', hidden: false\n    })\n    font = 'Source Code Pro';\n\n    @meta({name: 'Font size', group: 'Editor', valueConvert: parseInt, type: 'fontSize'})\n    fontSize = 14;\n\n    @meta({name: 'Font color', group: 'Editor', type: 'color'})\n    fontColor = '#51f41c';\n\n    @meta({name: 'jQuery', group: 'Plugins', componentType: MatCheckbox})\n    jQuery = true;\n\n    @meta({\n        name: 'modernizr',\n        description: 'Whether or not to include modernizr on the page',\n        group: 'Plugins',\n        componentType: MatSlideToggle\n    })\n    modernizr = false;\n\n    @meta({\n        name: 'Framework',\n        description: 'Whether to include any additional framework',\n        type: 'options',\n        componentOptions: {options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]}\n    })\n    framework = 'None';\n\n}\n\nexport class ExampleStudentOptions {\n\n    @meta({name: 'Birth', group: 'Basic Information', type: 'date', order: 4})\n    birth = '2018-05-08';\n\n    @meta({name: 'Name', group: 'Basic Information', type: 'text', order: 1})\n    name = 'Lily';\n\n    @meta({name: 'Age', group: 'Basic Information', valueConvert: parseInt, type: 'text', order: 2})\n    age = 19;\n\n    @meta({name: 'Telephone', type: 'telephone', group: 'Basic Information', hidden: true})\n    telephone;\n\n    @meta({name: 'Gender', group: 'Basic Information', type: 'sex', order: 3})\n    gender = 'male';\n\n    @meta({name: 'Editor Preference', type: 'subItems', initState: 'visible'})\n    editor: ExampleEditorOptions = new ExampleEditorOptions();\n}\n\n    \n\n    \n        \n    Property Grid Example\n    \n\n        \n            \n                \n            \n            \n                \n                字体大小-->\n            \n\n            \n                \n                \n                \n            \n\n            \n                \n                    male\n                    female\n                \n            \n        \n\n        \n             The Object： \n\n            \n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Property Grid Example                                                                                                字体大小-->                                                                                                                                    male                    female                                                         The Object：                         '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomComponent', 'selector': 'custom-component'},{'name': 'PropertyGridComponent', 'selector': 'ngx-property-grid'},{'name': 'SimpleTextEditorComponent', 'selector': 'app-text-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CustomComponent.html":{"url":"components/CustomComponent.html","title":"component - CustomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CustomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/property-grid/custom.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ICustomDynamicComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                custom-component\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _controlValueChangeFn\n                            \n                            \n                                    Private\n                                _value\n                            \n                            \n                                    Private\n                                component\n                            \n                            \n                                entry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildComponent\n                            \n                            \n                                    Private\n                                destroyComponent\n                            \n                            \n                                    Private\n                                initComponent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                onValueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                componentOptions\n                            \n                            \n                                componentType\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/property-grid/custom.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        componentOptions\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        componentType\n                    \n                    \n                            \n                            Type:    Type\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:32\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:43\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            buildComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildComponent()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroyComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        destroyComponent()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:90\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initComponent(component: ComponentRef)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    ComponentRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onValueChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onValueChange(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _controlValueChangeFn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _controlValueChangeFn:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _value:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            component\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        component:     ComponentRef>\n\n                    \n                \n                    \n                        \n                            Type :     ComponentRef>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entry:     \n\n                    \n                \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/custom.component.ts:38\n                                \n                            \n\n                \n                    \n                        setvalue(v: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/custom.component.ts:32\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    Type,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\n\n@Component({\n    selector: 'custom-component',\n    template: '',\n})\nexport class CustomComponent implements OnInit, ICustomDynamicComponent {\n    private readonly _controlValueChangeFn: (value: any) => void;\n    private _value: any;\n\n    @ViewChild('container', { read: ViewContainerRef }) entry;\n    private component: ComponentRef>;\n\n    @Input() componentType: Type;\n\n    @Input()\n    componentOptions: any;\n\n    @Input()\n    set value(v: any) {\n        this._value = v;\n        if (this.component) {\n            this.component.instance.value =  v;\n        }\n    }\n    get value(): any {\n        return this._value;\n    }\n\n    @Output()\n    readonly valueChange: EventEmitter = new EventEmitter();\n\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n        this._controlValueChangeFn = (value: any) => this.onValueChange(value);\n    }\n\n    ngOnInit() {\n        this.buildComponent();\n    }\n\n    private onValueChange(e: any): void {\n        this._value = e;\n        this.valueChange.emit(e);\n    }\n\n    private buildComponent(): void {\n        if (!this.componentType) {\n            return;\n        }\n        try {\n            this.destroyComponent();\n            // this.entry.clear();\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\n            const component = this.entry.createComponent(componentFactory, 0);\n            this.initComponent(component);\n            this.component = component;\n        } catch (e) {\n            console.error('load component error.');\n            console.error(e);\n        }\n    }\n\n    private initComponent(component: ComponentRef) {\n        component.instance.value = this._value;\n        if (component.instance.registerOnChange) {\n            component.instance.registerOnChange(this._controlValueChangeFn);\n        }\n        if (component.instance.valueChange) {\n            component.instance.valueChange.subscribe(this._controlValueChangeFn);\n        }\n\n        if (this.componentOptions) {\n            Object.assign(component.instance, this.componentOptions);\n        }\n    }\n\n    private destroyComponent(): void {\n        if (this.component) {\n            this.component.destroy();\n        }\n    }\n}\n\nexport interface PropertyValueAccess extends ControlValueAccessor, ICustomDynamicComponent {\n}\n\nexport interface ICustomDynamicComponent {\n    value: TValue;\n    valueChange: EventEmitter;\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomComponent', 'selector': 'custom-component'},{'name': 'PropertyGridComponent', 'selector': 'ngx-property-grid'},{'name': 'SimpleTextEditorComponent', 'selector': 'app-text-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CustomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExampleEditorOptions.html":{"url":"classes/ExampleEditorOptions.html","title":"class - ExampleEditorOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExampleEditorOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/showcase/app.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                font\n                            \n                            \n                                fontColor\n                            \n                            \n                                fontSize\n                            \n                            \n                                framework\n                            \n                            \n                                jQuery\n                            \n                            \n                                modernizr\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            font\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        font:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Source Code Pro'\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fontColor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fontColor:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '#51f41c'\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fontSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fontSize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 14\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            framework\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        framework:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'None'\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        jQuery:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modernizr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modernizr:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Component, EventEmitter} from '@angular/core';\nimport {meta, ICustomDynamicComponent} from '../components/property-grid/index';\nimport {MatCheckbox, MatSlider, MatSlideToggle} from '@angular/material';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    public student: ExampleStudentOptions = new ExampleStudentOptions();\n\n    constructor() {\n    }\n\n    public get data(): string {\n        return JSON.parse(JSON.stringify(this.student));\n    }\n\n    text: string;\n}\n\n@Component({\n    selector: 'app-text-editor',\n    template: ``\n})\nexport class SimpleTextEditorComponent implements ICustomDynamicComponent {\n    value: string;\n    valueChange: EventEmitter = new EventEmitter();\n}\n\nexport class ExampleEditorOptions {\n    @meta({\n        name: 'Font', description: 'The font editor to use', colSpan2: false,\n        componentType: SimpleTextEditorComponent, group: 'Editor', hidden: false\n    })\n    font = 'Source Code Pro';\n\n    @meta({name: 'Font size', group: 'Editor', valueConvert: parseInt, type: 'fontSize'})\n    fontSize = 14;\n\n    @meta({name: 'Font color', group: 'Editor', type: 'color'})\n    fontColor = '#51f41c';\n\n    @meta({name: 'jQuery', group: 'Plugins', componentType: MatCheckbox})\n    jQuery = true;\n\n    @meta({\n        name: 'modernizr',\n        description: 'Whether or not to include modernizr on the page',\n        group: 'Plugins',\n        componentType: MatSlideToggle\n    })\n    modernizr = false;\n\n    @meta({\n        name: 'Framework',\n        description: 'Whether to include any additional framework',\n        type: 'options',\n        componentOptions: {options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]}\n    })\n    framework = 'None';\n\n}\n\nexport class ExampleStudentOptions {\n\n    @meta({name: 'Birth', group: 'Basic Information', type: 'date', order: 4})\n    birth = '2018-05-08';\n\n    @meta({name: 'Name', group: 'Basic Information', type: 'text', order: 1})\n    name = 'Lily';\n\n    @meta({name: 'Age', group: 'Basic Information', valueConvert: parseInt, type: 'text', order: 2})\n    age = 19;\n\n    @meta({name: 'Telephone', type: 'telephone', group: 'Basic Information', hidden: true})\n    telephone;\n\n    @meta({name: 'Gender', group: 'Basic Information', type: 'sex', order: 3})\n    gender = 'male';\n\n    @meta({name: 'Editor Preference', type: 'subItems', initState: 'visible'})\n    editor: ExampleEditorOptions = new ExampleEditorOptions();\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExampleStudentOptions.html":{"url":"classes/ExampleStudentOptions.html","title":"class - ExampleStudentOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExampleStudentOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/showcase/app.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                birth\n                            \n                            \n                                editor\n                            \n                            \n                                gender\n                            \n                            \n                                name\n                            \n                            \n                                telephone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        age:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 19\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        birth:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '2018-05-08'\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     ExampleEditorOptions\n\n                    \n                \n                    \n                        \n                            Type :     ExampleEditorOptions\n\n                        \n                    \n                    \n                        \n                            Default value : new ExampleEditorOptions()\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gender:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'male'\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Lily'\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            telephone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        telephone:     \n\n                    \n                \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:78\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Component, EventEmitter} from '@angular/core';\nimport {meta, ICustomDynamicComponent} from '../components/property-grid/index';\nimport {MatCheckbox, MatSlider, MatSlideToggle} from '@angular/material';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    public student: ExampleStudentOptions = new ExampleStudentOptions();\n\n    constructor() {\n    }\n\n    public get data(): string {\n        return JSON.parse(JSON.stringify(this.student));\n    }\n\n    text: string;\n}\n\n@Component({\n    selector: 'app-text-editor',\n    template: ``\n})\nexport class SimpleTextEditorComponent implements ICustomDynamicComponent {\n    value: string;\n    valueChange: EventEmitter = new EventEmitter();\n}\n\nexport class ExampleEditorOptions {\n    @meta({\n        name: 'Font', description: 'The font editor to use', colSpan2: false,\n        componentType: SimpleTextEditorComponent, group: 'Editor', hidden: false\n    })\n    font = 'Source Code Pro';\n\n    @meta({name: 'Font size', group: 'Editor', valueConvert: parseInt, type: 'fontSize'})\n    fontSize = 14;\n\n    @meta({name: 'Font color', group: 'Editor', type: 'color'})\n    fontColor = '#51f41c';\n\n    @meta({name: 'jQuery', group: 'Plugins', componentType: MatCheckbox})\n    jQuery = true;\n\n    @meta({\n        name: 'modernizr',\n        description: 'Whether or not to include modernizr on the page',\n        group: 'Plugins',\n        componentType: MatSlideToggle\n    })\n    modernizr = false;\n\n    @meta({\n        name: 'Framework',\n        description: 'Whether to include any additional framework',\n        type: 'options',\n        componentOptions: {options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]}\n    })\n    framework = 'None';\n\n}\n\nexport class ExampleStudentOptions {\n\n    @meta({name: 'Birth', group: 'Basic Information', type: 'date', order: 4})\n    birth = '2018-05-08';\n\n    @meta({name: 'Name', group: 'Basic Information', type: 'text', order: 1})\n    name = 'Lily';\n\n    @meta({name: 'Age', group: 'Basic Information', valueConvert: parseInt, type: 'text', order: 2})\n    age = 19;\n\n    @meta({name: 'Telephone', type: 'telephone', group: 'Basic Information', hidden: true})\n    telephone;\n\n    @meta({name: 'Gender', group: 'Basic Information', type: 'sex', order: 3})\n    gender = 'male';\n\n    @meta({name: 'Editor Preference', type: 'subItems', initState: 'visible'})\n    editor: ExampleEditorOptions = new ExampleEditorOptions();\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICustomDynamicComponent.html":{"url":"interfaces/ICustomDynamicComponent.html","title":"interface - ICustomDynamicComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICustomDynamicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/property-grid/custom.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        valueChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     TValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueChange\n                                    \n                                \n                                \n                                    \n                                        valueChange:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    Type,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\n\n@Component({\n    selector: 'custom-component',\n    template: '',\n})\nexport class CustomComponent implements OnInit, ICustomDynamicComponent {\n    private readonly _controlValueChangeFn: (value: any) => void;\n    private _value: any;\n\n    @ViewChild('container', { read: ViewContainerRef }) entry;\n    private component: ComponentRef>;\n\n    @Input() componentType: Type;\n\n    @Input()\n    componentOptions: any;\n\n    @Input()\n    set value(v: any) {\n        this._value = v;\n        if (this.component) {\n            this.component.instance.value =  v;\n        }\n    }\n    get value(): any {\n        return this._value;\n    }\n\n    @Output()\n    readonly valueChange: EventEmitter = new EventEmitter();\n\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n        this._controlValueChangeFn = (value: any) => this.onValueChange(value);\n    }\n\n    ngOnInit() {\n        this.buildComponent();\n    }\n\n    private onValueChange(e: any): void {\n        this._value = e;\n        this.valueChange.emit(e);\n    }\n\n    private buildComponent(): void {\n        if (!this.componentType) {\n            return;\n        }\n        try {\n            this.destroyComponent();\n            // this.entry.clear();\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\n            const component = this.entry.createComponent(componentFactory, 0);\n            this.initComponent(component);\n            this.component = component;\n        } catch (e) {\n            console.error('load component error.');\n            console.error(e);\n        }\n    }\n\n    private initComponent(component: ComponentRef) {\n        component.instance.value = this._value;\n        if (component.instance.registerOnChange) {\n            component.instance.registerOnChange(this._controlValueChangeFn);\n        }\n        if (component.instance.valueChange) {\n            component.instance.valueChange.subscribe(this._controlValueChangeFn);\n        }\n\n        if (this.componentOptions) {\n            Object.assign(component.instance, this.componentOptions);\n        }\n    }\n\n    private destroyComponent(): void {\n        if (this.component) {\n            this.component.destroy();\n        }\n    }\n}\n\nexport interface PropertyValueAccess extends ControlValueAccessor, ICustomDynamicComponent {\n}\n\nexport interface ICustomDynamicComponent {\n    value: TValue;\n    valueChange: EventEmitter;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InternalGroup.html":{"url":"classes/InternalGroup.html","title":"class - InternalGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  InternalGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/property-grid/property-grid.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                items\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/property-grid/property-grid.component.ts:331\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     InternalPropertyItemMeta[]\n\n                    \n                \n                    \n                        \n                            Type :     InternalPropertyItemMeta[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:330\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:333\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'group'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:331\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    AfterContentInit, AfterViewInit, ChangeDetectorRef,\n    Component,\n    ContentChildren, ElementRef,\n    Input,\n    QueryList,\n    TemplateRef, ViewChildren\n} from '@angular/core';\nimport {InternalPropertyItemMeta} from './property-item-meta';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {NgxTemplate} from 'ngx-template';\n\n@Component({\n    selector: 'ngx-property-grid',\n    template: `\n        \n            \n                \n                    \n                    \n\n                        -->\n                        {{row.name}}\n                        \n                            {{row.name}}\n                            [?]\n                        \n                        \n                            \n                            \n                            \n                            \n                        \n                    \n                    \n                \n            \n\n            \n                {{item.name}}\n                \n                \n            \n        \n        \n            \n                \n            \n\n            \n                \n            \n\n            \n                \n            \n\n            \n                {{p.value}}\n            \n\n            \n                \n            \n\n            \n                \n                    \n                        {{optionLabel(option)}}\n                    \n                \n            \n        \n    `,\n    styles: [\n            `\n            .property-grid {\n                /*border: solid 1px #95B8E7;*/\n            }\n\n            .property-grid-table {\n                border-spacing: 0;\n                border-top: 1px solid #dbdbdb;\n                padding: 5px\n            }\n\n            .property-grid-group {\n                background-color: white;\n                font-weight: bold;\n                color: #616161;\n                padding-top: 8px;\n                padding-bottom: 5px;\n            }\n\n            .property-grid-label, .property-grid-control {\n                border: dotted 1px #ccc;\n                padding: 2px 5px;\n            }\n\n            .internal-property-grid {\n                margin-top: 12px;\n            }\n\n            .internal-property-grid .property-grid {\n                border-width: 0;\n            }\n\n            .internal-property-grid .property-grid-header {\n                margin-bottom: 5px;\n                background-color: #f5f5f5;\n                padding-bottom: 5px;\n                padding-top: 5px;\n                padding-left: 5px;\n                box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n                -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n            }\n\n            .internal-property-grid .property-grid-table {\n                border-width: 0;\n                /*border-top: 1px solid #dbdbdb;*/\n            }\n\n            .card {\n                background-color: #fff;\n                box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n                display: flex;\n                flex-flow: row wrap;\n                /*margin: 5px 20px;*/\n                padding: 0;\n            }\n            .internal-property-grid ngx-property-grid .card {\n                background-color: unset;\n                box-shadow: unset;\n                display: unset;\n                flex-flow: unset;\n                /*margin: 5px 20px;*/\n                padding: unset;\n            }\n        `\n    ],\n    animations: [\n        trigger('internalPropertyGrid', [\n            state('hidden', style({\n                height: '0',\n                // overflow: 'hidden'\n            })),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible  hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n        ])\n    ]\n})\nexport class PropertyGridComponent implements AfterContentInit, AfterViewInit {\n    private _options: any;\n    private _meta: any;\n    public readonly isInternal: boolean;\n\n    @Input()\n    public templateMap: any = {};\n\n    @Input()\n    public state = 'visible';\n\n    @Input()\n    width: string | number;\n\n\n    @Input()\n    labelWidth: string | number = '120px';\n\n    @Input()\n    public set meta(v: any) {\n        this._meta = v;\n        this.initMeta();\n    }\n\n    public get meta(): any {\n        return this._meta;\n    }\n\n    @Input()\n    public set options(v: any) {\n        this._options = v;\n        if (v.__meta__) {\n            this.meta = v.__meta__;\n        }\n    }\n\n    public get options(): any {\n        return this._options;\n    }\n\n    @ViewChildren(NgxTemplate) defaultTemplates: QueryList;\n    @ContentChildren(NgxTemplate) templates: QueryList;\n\n    public rows: Array;\n    public subItems: InternalPropertyItemMeta[];\n\n    constructor(el: ElementRef, private cdr: ChangeDetectorRef) {\n        this.isInternal = el.nativeElement.parentElement.classList.contains('internal-property-grid');\n    }\n\n    ngAfterViewInit(): void {\n        if (this.defaultTemplates) {\n            this.defaultTemplates.forEach((item) => {\n                if (!this.templateMap.hasOwnProperty(item.name)) {\n                    this.templateMap[item.name] = item.template;\n                }\n            });\n\n            this.cdr.detectChanges();\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this.templates.forEach((item) => {\n            this.templateMap[item.name] = item.template;\n        });\n    }\n\n    public getTemplate(type: string): TemplateRef {\n        if (this.templateMap) {\n            return type ? this.templateMap[type] : this.templateMap['default'];\n        } else {\n            return null;\n        }\n    }\n\n    public propertyValue(meta: InternalPropertyItemMeta): PropertyValue {\n        return new PropertyValue(this.options, meta);\n    }\n\n    public toggle(): void {\n        this.state = this.state === 'visible' ? 'hidden' : 'visible';\n    }\n\n    public convertValue(meta: InternalPropertyItemMeta, val: any): void {\n        this.options[meta.key] = meta.valueConvert ? meta.valueConvert(val) : val;\n    }\n\n    private initMeta(): void {\n        const meta: object = this.meta;\n        if (!meta) {\n            this.rows = [];\n            this.subItems = [];\n            return;\n        }\n\n        const groups: InternalGroup[] = [new InternalGroup(undefined)];\n        const subItems: InternalPropertyItemMeta[] = [];\n        for (const i in meta) {\n            if (!meta.hasOwnProperty(i)) {\n                continue;\n            }\n            const v: InternalPropertyItemMeta = meta[i];\n            if (v.hidden) {\n                continue;\n            }\n            if (v.type === 'subItems') {\n                subItems.push(v);\n                continue;\n            }\n\n            let group = groups.find(o => o.name === v.group);\n            if (!group) {\n                group = new InternalGroup(v.group);\n                groups.push(group);\n            }\n            group.items.push(v);\n        }\n        groups.forEach(o => o.items.sort((a, b) => a.order - b.order));\n        const rows: Array = [];\n        for (const g of groups) {\n            if (g.name) {\n                rows.push(g);\n            }\n            g.items.forEach(o => rows.push(o));\n        }\n        this.rows = rows;\n        this.subItems = subItems;\n    }\n\n    optionLabel(v: any): string {\n        if (typeof v === 'string') {\n            return v;\n        }\n        if (v.text) {\n            return v.text;\n        }\n        if (v.label) {\n            return v.label;\n        }\n        return v;\n    }\n\n    optionValue(v: any): any {\n        return v && v.value ? v.value : v;\n    }\n}\n\nexport class PropertyValue {\n    public get value(): any {\n        return this.o[this.meta.key];\n    }\n\n    public set value(val: any) {\n        this.o[this.meta.key] = this.meta.valueConvert ? this.meta.valueConvert(val) : val;\n    }\n\n    constructor(private o: any, public meta: InternalPropertyItemMeta) {\n    }\n}\n\nexport class InternalGroup {\n    public readonly items: InternalPropertyItemMeta[] = [];\n    public type = 'group';\n\n    constructor(public name: string) {\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InternalPropertyItemMeta.html":{"url":"interfaces/InternalPropertyItemMeta.html","title":"interface - InternalPropertyItemMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InternalPropertyItemMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/property-grid/property-item-meta.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PropertyItemMeta\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | \n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Type} from '@angular/core';\nimport {defaultProvider} from './property-grid-control-provider';\nimport {ICustomDynamicComponent} from './custom.component';\nimport {ControlValueAccessor} from '@angular/forms';\n\nexport interface PropertyItemMeta {\n    name: string; // The display name of the property in the grid\n    description?: string; // A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\n    order?: number; // The display order.\n    group?: string; //  The group this property belongs to\n    hidden?: boolean; // Whether this property should be hidden in the grid, default is false (can be omitted).\n    initState?: string; // - hidden/visible. If hidden then subItems should init by hidden state. default is hidden\n    componentType?: Type>; // an custom component should be implement\n    // ControlValueAccessor or ICustomDynamicComponent\n    componentOptions?: any;\n    colSpan2?: boolean; //  - true/false. If true then property input will span both columns and will have no name/label\n    // (useful for textarea custom type)\n    type?: string; // options: boolean number options label color\n    valueConvert?: (value: any) => any; // convert the value, eg. parseInt\n}\n\nexport interface InternalPropertyItemMeta extends PropertyItemMeta {\n    key: string | symbol;\n}\n\nexport const meta = (m: PropertyItemMeta) =>\n    (target: any, key: string | symbol) => {\n        const xMeta = m as InternalPropertyItemMeta;\n        if (!target.__meta__) {\n            target.__meta__ = {};\n        }\n        if (!xMeta.componentType) {\n            if (!xMeta.type) {\n                xMeta.componentType = defaultProvider.getComponentType('text');\n            } else if (xMeta.type === 'boolean') {\n                xMeta.componentType = defaultProvider.getComponentType('checkbox');\n            } else {\n                xMeta.componentType = defaultProvider.getComponentType(m.type);\n            }\n\n            if (xMeta.type === 'number' && !xMeta.valueConvert) {\n                xMeta.valueConvert = parseInt;\n            }\n        }\n        if (!xMeta.initState) {\n            xMeta.initState = 'hidden';\n        }\n        if (!xMeta.order) {\n            xMeta.order = 0;\n        }\n        xMeta.key = key;\n        target.__meta__[key] = xMeta;\n    };\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PropertyGridComponent.html":{"url":"components/PropertyGridComponent.html","title":"component - PropertyGridComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PropertyGridComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/property-grid/property-grid.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterContentInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-property-grid\n            \n\n\n            \n                styles\n                \n            .property-grid {\n                /*border: solid 1px #95B8E7;*/\n            }\n\n            .property-grid-table {\n                border-spacing: 0;\n                border-top: 1px solid #dbdbdb;\n                padding: 5px\n            }\n\n            .property-grid-group {\n                background-color: white;\n                font-weight: bold;\n                color: #616161;\n                padding-top: 8px;\n                padding-bottom: 5px;\n            }\n\n            .property-grid-label, .property-grid-control {\n                border: dotted 1px #ccc;\n                padding: 2px 5px;\n            }\n\n            .internal-property-grid {\n                margin-top: 12px;\n            }\n\n            .internal-property-grid .property-grid {\n                border-width: 0;\n            }\n\n            .internal-property-grid .property-grid-header {\n                margin-bottom: 5px;\n                background-color: #f5f5f5;\n                padding-bottom: 5px;\n                padding-top: 5px;\n                padding-left: 5px;\n                box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n                -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n            }\n\n            .internal-property-grid .property-grid-table {\n                border-width: 0;\n                /*border-top: 1px solid #dbdbdb;*/\n            }\n\n            .card {\n                background-color: #fff;\n                box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n                display: flex;\n                flex-flow: row wrap;\n                /*margin: 5px 20px;*/\n                padding: 0;\n            }\n            .internal-property-grid ngx-property-grid .card {\n                background-color: unset;\n                box-shadow: unset;\n                display: unset;\n                flex-flow: unset;\n                /*margin: 5px 20px;*/\n                padding: unset;\n            }\n        \n            \n\n            \n                template\n                \n    \n        \n            \n            \n\n                -->\n                {{row.name}}\n                \n                    {{row.name}}\n                    [?]\n                \n                \n                    \n                    \n                    \n                    \n                \n            \n            \n        \n    \n\n    \n        {{item.name}}\n        \n        \n    \n\n\n    \n        \n    \n\n    \n        \n    \n\n    \n        \n    \n\n    \n        {{p.value}}\n    \n\n    \n        \n    \n\n    \n        \n            \n                {{optionLabel(option)}}\n            \n        \n    \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _meta\n                            \n                            \n                                    Private\n                                _options\n                            \n                            \n                                defaultTemplates\n                            \n                            \n                                    Public\n                                    Readonly\n                                isInternal\n                            \n                            \n                                    Public\n                                rows\n                            \n                            \n                                    Public\n                                subItems\n                            \n                            \n                                templates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                convertValue\n                            \n                            \n                                    Public\n                                getTemplate\n                            \n                            \n                                    Private\n                                initMeta\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                optionLabel\n                            \n                            \n                                optionValue\n                            \n                            \n                                    Public\n                                propertyValue\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                labelWidth\n                            \n                            \n                                meta\n                            \n                            \n                                options\n                            \n                            \n                                state\n                            \n                            \n                                templateMap\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/property-grid/property-grid.component.ts:212\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        labelWidth\n                    \n                    \n                            \n                            Type:    string | number\n\n                            \n                        \n                            Default value: '120px'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:184\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        meta\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:187\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:197\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                    \n                        \n                            Default value: 'visible'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:177\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        templateMap\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:174\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                    \n                            \n                            Type:    string | number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:180\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            convertValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        convertValue(meta: InternalPropertyItemMeta, val: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:252\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        meta\n                                                        \n                                                                    InternalPropertyItemMeta\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        val\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTemplate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTemplate(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:236\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TemplateRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initMeta\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initMeta()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:256\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterContentInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterContentInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:230\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:218\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \noptionLabel(v: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:298\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        v\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionValue\n                            \n                            \n                        \n                    \n                \n                \n                    \noptionValue(v: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:311\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        v\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            propertyValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        propertyValue(meta: InternalPropertyItemMeta)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:244\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        meta\n                                                        \n                                                                    InternalPropertyItemMeta\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     PropertyValue\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:248\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _meta\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _meta:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:170\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _options:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:169\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultTemplates\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultTemplates:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChildren\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:208\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            isInternal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInternal:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:171\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rows\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rows:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:211\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subItems:     InternalPropertyItemMeta[]\n\n                    \n                \n                    \n                        \n                            Type :     InternalPropertyItemMeta[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:212\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templates\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        templates:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ContentChildren\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:209\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        meta\n                    \n                \n\n                \n                    \n                        getmeta()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:192\n                                \n                            \n\n                \n                    \n                        setmeta(v: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:187\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:204\n                                \n                            \n\n                \n                    \n                        setoptions(v: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:197\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n    AfterContentInit, AfterViewInit, ChangeDetectorRef,\n    Component,\n    ContentChildren, ElementRef,\n    Input,\n    QueryList,\n    TemplateRef, ViewChildren\n} from '@angular/core';\nimport {InternalPropertyItemMeta} from './property-item-meta';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {NgxTemplate} from 'ngx-template';\n\n@Component({\n    selector: 'ngx-property-grid',\n    template: `\n        \n            \n                \n                    \n                    \n\n                        -->\n                        {{row.name}}\n                        \n                            {{row.name}}\n                            [?]\n                        \n                        \n                            \n                            \n                            \n                            \n                        \n                    \n                    \n                \n            \n\n            \n                {{item.name}}\n                \n                \n            \n        \n        \n            \n                \n            \n\n            \n                \n            \n\n            \n                \n            \n\n            \n                {{p.value}}\n            \n\n            \n                \n            \n\n            \n                \n                    \n                        {{optionLabel(option)}}\n                    \n                \n            \n        \n    `,\n    styles: [\n            `\n            .property-grid {\n                /*border: solid 1px #95B8E7;*/\n            }\n\n            .property-grid-table {\n                border-spacing: 0;\n                border-top: 1px solid #dbdbdb;\n                padding: 5px\n            }\n\n            .property-grid-group {\n                background-color: white;\n                font-weight: bold;\n                color: #616161;\n                padding-top: 8px;\n                padding-bottom: 5px;\n            }\n\n            .property-grid-label, .property-grid-control {\n                border: dotted 1px #ccc;\n                padding: 2px 5px;\n            }\n\n            .internal-property-grid {\n                margin-top: 12px;\n            }\n\n            .internal-property-grid .property-grid {\n                border-width: 0;\n            }\n\n            .internal-property-grid .property-grid-header {\n                margin-bottom: 5px;\n                background-color: #f5f5f5;\n                padding-bottom: 5px;\n                padding-top: 5px;\n                padding-left: 5px;\n                box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n                -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n            }\n\n            .internal-property-grid .property-grid-table {\n                border-width: 0;\n                /*border-top: 1px solid #dbdbdb;*/\n            }\n\n            .card {\n                background-color: #fff;\n                box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n                display: flex;\n                flex-flow: row wrap;\n                /*margin: 5px 20px;*/\n                padding: 0;\n            }\n            .internal-property-grid ngx-property-grid .card {\n                background-color: unset;\n                box-shadow: unset;\n                display: unset;\n                flex-flow: unset;\n                /*margin: 5px 20px;*/\n                padding: unset;\n            }\n        `\n    ],\n    animations: [\n        trigger('internalPropertyGrid', [\n            state('hidden', style({\n                height: '0',\n                // overflow: 'hidden'\n            })),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible  hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n        ])\n    ]\n})\nexport class PropertyGridComponent implements AfterContentInit, AfterViewInit {\n    private _options: any;\n    private _meta: any;\n    public readonly isInternal: boolean;\n\n    @Input()\n    public templateMap: any = {};\n\n    @Input()\n    public state = 'visible';\n\n    @Input()\n    width: string | number;\n\n\n    @Input()\n    labelWidth: string | number = '120px';\n\n    @Input()\n    public set meta(v: any) {\n        this._meta = v;\n        this.initMeta();\n    }\n\n    public get meta(): any {\n        return this._meta;\n    }\n\n    @Input()\n    public set options(v: any) {\n        this._options = v;\n        if (v.__meta__) {\n            this.meta = v.__meta__;\n        }\n    }\n\n    public get options(): any {\n        return this._options;\n    }\n\n    @ViewChildren(NgxTemplate) defaultTemplates: QueryList;\n    @ContentChildren(NgxTemplate) templates: QueryList;\n\n    public rows: Array;\n    public subItems: InternalPropertyItemMeta[];\n\n    constructor(el: ElementRef, private cdr: ChangeDetectorRef) {\n        this.isInternal = el.nativeElement.parentElement.classList.contains('internal-property-grid');\n    }\n\n    ngAfterViewInit(): void {\n        if (this.defaultTemplates) {\n            this.defaultTemplates.forEach((item) => {\n                if (!this.templateMap.hasOwnProperty(item.name)) {\n                    this.templateMap[item.name] = item.template;\n                }\n            });\n\n            this.cdr.detectChanges();\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this.templates.forEach((item) => {\n            this.templateMap[item.name] = item.template;\n        });\n    }\n\n    public getTemplate(type: string): TemplateRef {\n        if (this.templateMap) {\n            return type ? this.templateMap[type] : this.templateMap['default'];\n        } else {\n            return null;\n        }\n    }\n\n    public propertyValue(meta: InternalPropertyItemMeta): PropertyValue {\n        return new PropertyValue(this.options, meta);\n    }\n\n    public toggle(): void {\n        this.state = this.state === 'visible' ? 'hidden' : 'visible';\n    }\n\n    public convertValue(meta: InternalPropertyItemMeta, val: any): void {\n        this.options[meta.key] = meta.valueConvert ? meta.valueConvert(val) : val;\n    }\n\n    private initMeta(): void {\n        const meta: object = this.meta;\n        if (!meta) {\n            this.rows = [];\n            this.subItems = [];\n            return;\n        }\n\n        const groups: InternalGroup[] = [new InternalGroup(undefined)];\n        const subItems: InternalPropertyItemMeta[] = [];\n        for (const i in meta) {\n            if (!meta.hasOwnProperty(i)) {\n                continue;\n            }\n            const v: InternalPropertyItemMeta = meta[i];\n            if (v.hidden) {\n                continue;\n            }\n            if (v.type === 'subItems') {\n                subItems.push(v);\n                continue;\n            }\n\n            let group = groups.find(o => o.name === v.group);\n            if (!group) {\n                group = new InternalGroup(v.group);\n                groups.push(group);\n            }\n            group.items.push(v);\n        }\n        groups.forEach(o => o.items.sort((a, b) => a.order - b.order));\n        const rows: Array = [];\n        for (const g of groups) {\n            if (g.name) {\n                rows.push(g);\n            }\n            g.items.forEach(o => rows.push(o));\n        }\n        this.rows = rows;\n        this.subItems = subItems;\n    }\n\n    optionLabel(v: any): string {\n        if (typeof v === 'string') {\n            return v;\n        }\n        if (v.text) {\n            return v.text;\n        }\n        if (v.label) {\n            return v.label;\n        }\n        return v;\n    }\n\n    optionValue(v: any): any {\n        return v && v.value ? v.value : v;\n    }\n}\n\nexport class PropertyValue {\n    public get value(): any {\n        return this.o[this.meta.key];\n    }\n\n    public set value(val: any) {\n        this.o[this.meta.key] = this.meta.valueConvert ? this.meta.valueConvert(val) : val;\n    }\n\n    constructor(private o: any, public meta: InternalPropertyItemMeta) {\n    }\n}\n\nexport class InternalGroup {\n    public readonly items: InternalPropertyItemMeta[] = [];\n    public type = 'group';\n\n    constructor(public name: string) {\n    }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    -->                {{row.name}}                                    {{row.name}}                    [?]                                                                                                                                                                                {{item.name}}                                                                                {{p.value}}                                                            {{optionLabel(option)}}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomComponent', 'selector': 'custom-component'},{'name': 'PropertyGridComponent', 'selector': 'ngx-property-grid'},{'name': 'SimpleTextEditorComponent', 'selector': 'app-text-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PropertyGridComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PropertyGridControlProvider.html":{"url":"injectables/PropertyGridControlProvider.html","title":"injectable - PropertyGridControlProvider","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  PropertyGridControlProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/property-grid/property-grid-control-provider.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _map\n                            \n                            \n                                    Public\n                                components\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getComponentType\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getComponentType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getComponentType(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid-control-provider.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        register(type: string, componentType: Type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid-control-provider.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        componentType\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _map:     Map>\n\n                    \n                \n                    \n                        \n                            Type :     Map>\n\n                        \n                    \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid-control-provider.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            components\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        components:     Array>\n\n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid-control-provider.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, Type} from '@angular/core';\n\n\n@Injectable()\nexport class PropertyGridControlProvider {\n    private readonly _map: Map> = new Map>();\n    public components: Array> = [];\n    public register(type: string, componentType: Type) {\n        this._map.set(type, componentType);\n        this.components.push(componentType);\n    }\n    public getComponentType(type: string) {\n        return this._map.get(type);\n    }\n}\n\nexport const defaultProvider = new PropertyGridControlProvider();\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PropertyGridModule.html":{"url":"modules/PropertyGridModule.html","title":"module - PropertyGridModule","body":"\n                   \n\n\n\n\n  Modules\n  PropertyGridModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyGridModule\n\n\n\ncluster_PropertyGridModule_declarations\n\n\n\ncluster_PropertyGridModule_exports\n\n\n\n\nCustomComponent\n\nCustomComponent\n\n\n\nPropertyGridModule\n\nPropertyGridModule\n\nPropertyGridModule -->\n\nCustomComponent->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent\n\nPropertyGridComponent\n\nPropertyGridModule -->\n\nPropertyGridComponent->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent \n\nPropertyGridComponent \n\nPropertyGridComponent  -->\n\nPropertyGridModule->PropertyGridComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/property-grid/index.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CustomComponent\n                            \n                            \n                                PropertyGridComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                defaultProvider.components\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    PropertyGridComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {CustomComponent, ICustomDynamicComponent} from './custom.component';\nimport {PropertyGridComponent} from './property-grid.component';\nimport {defaultProvider, PropertyGridControlProvider} from './property-grid-control-provider';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {NgxTemplateModule} from 'ngx-template';\n\nexport {ICustomDynamicComponent} from './custom.component';\nexport {PropertyGridComponent, PropertyValue} from './property-grid.component';\nexport {meta, PropertyItemMeta} from './property-item-meta';\n\n@NgModule({\n    imports: [\n        CommonModule, BrowserAnimationsModule, NgxTemplateModule\n    ],\n    entryComponents: defaultProvider.components,\n    declarations: [\n        PropertyGridComponent,\n        CustomComponent,\n    ],\n    providers: [{provide: PropertyGridControlProvider, useValue: defaultProvider}],\n    exports: [\n        PropertyGridComponent\n    ]\n})\nexport class PropertyGridModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PropertyItemMeta.html":{"url":"interfaces/PropertyItemMeta.html","title":"interface - PropertyItemMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PropertyItemMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/property-grid/property-item-meta.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        colSpan2\n                                \n                                \n                                            Optional\n                                        componentOptions\n                                \n                                \n                                            Optional\n                                        componentType\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        group\n                                \n                                \n                                            Optional\n                                        hidden\n                                \n                                \n                                            Optional\n                                        initState\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        order\n                                \n                                \n                                            Optional\n                                        type\n                                \n                                \n                                            Optional\n                                        valueConvert\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colSpan2\n                                    \n                                \n                                \n                                    \n                                        colSpan2:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        componentOptions\n                                    \n                                \n                                \n                                    \n                                        componentOptions:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        componentType\n                                    \n                                \n                                \n                                    \n                                        componentType:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initState\n                                    \n                                \n                                \n                                    \n                                        initState:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueConvert\n                                    \n                                \n                                \n                                    \n                                        valueConvert:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Type} from '@angular/core';\nimport {defaultProvider} from './property-grid-control-provider';\nimport {ICustomDynamicComponent} from './custom.component';\nimport {ControlValueAccessor} from '@angular/forms';\n\nexport interface PropertyItemMeta {\n    name: string; // The display name of the property in the grid\n    description?: string; // A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\n    order?: number; // The display order.\n    group?: string; //  The group this property belongs to\n    hidden?: boolean; // Whether this property should be hidden in the grid, default is false (can be omitted).\n    initState?: string; // - hidden/visible. If hidden then subItems should init by hidden state. default is hidden\n    componentType?: Type>; // an custom component should be implement\n    // ControlValueAccessor or ICustomDynamicComponent\n    componentOptions?: any;\n    colSpan2?: boolean; //  - true/false. If true then property input will span both columns and will have no name/label\n    // (useful for textarea custom type)\n    type?: string; // options: boolean number options label color\n    valueConvert?: (value: any) => any; // convert the value, eg. parseInt\n}\n\nexport interface InternalPropertyItemMeta extends PropertyItemMeta {\n    key: string | symbol;\n}\n\nexport const meta = (m: PropertyItemMeta) =>\n    (target: any, key: string | symbol) => {\n        const xMeta = m as InternalPropertyItemMeta;\n        if (!target.__meta__) {\n            target.__meta__ = {};\n        }\n        if (!xMeta.componentType) {\n            if (!xMeta.type) {\n                xMeta.componentType = defaultProvider.getComponentType('text');\n            } else if (xMeta.type === 'boolean') {\n                xMeta.componentType = defaultProvider.getComponentType('checkbox');\n            } else {\n                xMeta.componentType = defaultProvider.getComponentType(m.type);\n            }\n\n            if (xMeta.type === 'number' && !xMeta.valueConvert) {\n                xMeta.valueConvert = parseInt;\n            }\n        }\n        if (!xMeta.initState) {\n            xMeta.initState = 'hidden';\n        }\n        if (!xMeta.order) {\n            xMeta.order = 0;\n        }\n        xMeta.key = key;\n        target.__meta__[key] = xMeta;\n    };\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PropertyValue.html":{"url":"classes/PropertyValue.html","title":"class - PropertyValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  PropertyValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/property-grid/property-grid.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(o: any, meta: InternalPropertyItemMeta)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/property-grid/property-grid.component.ts:323\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        o\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                    InternalPropertyItemMeta\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            meta\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        meta:     InternalPropertyItemMeta\n\n                    \n                \n                    \n                        \n                            Type :     InternalPropertyItemMeta\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:325\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:317\n                                \n                            \n\n                \n                    \n                        setvalue(val: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:321\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {\n    AfterContentInit, AfterViewInit, ChangeDetectorRef,\n    Component,\n    ContentChildren, ElementRef,\n    Input,\n    QueryList,\n    TemplateRef, ViewChildren\n} from '@angular/core';\nimport {InternalPropertyItemMeta} from './property-item-meta';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {NgxTemplate} from 'ngx-template';\n\n@Component({\n    selector: 'ngx-property-grid',\n    template: `\n        \n            \n                \n                    \n                    \n\n                        -->\n                        {{row.name}}\n                        \n                            {{row.name}}\n                            [?]\n                        \n                        \n                            \n                            \n                            \n                            \n                        \n                    \n                    \n                \n            \n\n            \n                {{item.name}}\n                \n                \n            \n        \n        \n            \n                \n            \n\n            \n                \n            \n\n            \n                \n            \n\n            \n                {{p.value}}\n            \n\n            \n                \n            \n\n            \n                \n                    \n                        {{optionLabel(option)}}\n                    \n                \n            \n        \n    `,\n    styles: [\n            `\n            .property-grid {\n                /*border: solid 1px #95B8E7;*/\n            }\n\n            .property-grid-table {\n                border-spacing: 0;\n                border-top: 1px solid #dbdbdb;\n                padding: 5px\n            }\n\n            .property-grid-group {\n                background-color: white;\n                font-weight: bold;\n                color: #616161;\n                padding-top: 8px;\n                padding-bottom: 5px;\n            }\n\n            .property-grid-label, .property-grid-control {\n                border: dotted 1px #ccc;\n                padding: 2px 5px;\n            }\n\n            .internal-property-grid {\n                margin-top: 12px;\n            }\n\n            .internal-property-grid .property-grid {\n                border-width: 0;\n            }\n\n            .internal-property-grid .property-grid-header {\n                margin-bottom: 5px;\n                background-color: #f5f5f5;\n                padding-bottom: 5px;\n                padding-top: 5px;\n                padding-left: 5px;\n                box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n                -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n            }\n\n            .internal-property-grid .property-grid-table {\n                border-width: 0;\n                /*border-top: 1px solid #dbdbdb;*/\n            }\n\n            .card {\n                background-color: #fff;\n                box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n                display: flex;\n                flex-flow: row wrap;\n                /*margin: 5px 20px;*/\n                padding: 0;\n            }\n            .internal-property-grid ngx-property-grid .card {\n                background-color: unset;\n                box-shadow: unset;\n                display: unset;\n                flex-flow: unset;\n                /*margin: 5px 20px;*/\n                padding: unset;\n            }\n        `\n    ],\n    animations: [\n        trigger('internalPropertyGrid', [\n            state('hidden', style({\n                height: '0',\n                // overflow: 'hidden'\n            })),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible  hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n        ])\n    ]\n})\nexport class PropertyGridComponent implements AfterContentInit, AfterViewInit {\n    private _options: any;\n    private _meta: any;\n    public readonly isInternal: boolean;\n\n    @Input()\n    public templateMap: any = {};\n\n    @Input()\n    public state = 'visible';\n\n    @Input()\n    width: string | number;\n\n\n    @Input()\n    labelWidth: string | number = '120px';\n\n    @Input()\n    public set meta(v: any) {\n        this._meta = v;\n        this.initMeta();\n    }\n\n    public get meta(): any {\n        return this._meta;\n    }\n\n    @Input()\n    public set options(v: any) {\n        this._options = v;\n        if (v.__meta__) {\n            this.meta = v.__meta__;\n        }\n    }\n\n    public get options(): any {\n        return this._options;\n    }\n\n    @ViewChildren(NgxTemplate) defaultTemplates: QueryList;\n    @ContentChildren(NgxTemplate) templates: QueryList;\n\n    public rows: Array;\n    public subItems: InternalPropertyItemMeta[];\n\n    constructor(el: ElementRef, private cdr: ChangeDetectorRef) {\n        this.isInternal = el.nativeElement.parentElement.classList.contains('internal-property-grid');\n    }\n\n    ngAfterViewInit(): void {\n        if (this.defaultTemplates) {\n            this.defaultTemplates.forEach((item) => {\n                if (!this.templateMap.hasOwnProperty(item.name)) {\n                    this.templateMap[item.name] = item.template;\n                }\n            });\n\n            this.cdr.detectChanges();\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this.templates.forEach((item) => {\n            this.templateMap[item.name] = item.template;\n        });\n    }\n\n    public getTemplate(type: string): TemplateRef {\n        if (this.templateMap) {\n            return type ? this.templateMap[type] : this.templateMap['default'];\n        } else {\n            return null;\n        }\n    }\n\n    public propertyValue(meta: InternalPropertyItemMeta): PropertyValue {\n        return new PropertyValue(this.options, meta);\n    }\n\n    public toggle(): void {\n        this.state = this.state === 'visible' ? 'hidden' : 'visible';\n    }\n\n    public convertValue(meta: InternalPropertyItemMeta, val: any): void {\n        this.options[meta.key] = meta.valueConvert ? meta.valueConvert(val) : val;\n    }\n\n    private initMeta(): void {\n        const meta: object = this.meta;\n        if (!meta) {\n            this.rows = [];\n            this.subItems = [];\n            return;\n        }\n\n        const groups: InternalGroup[] = [new InternalGroup(undefined)];\n        const subItems: InternalPropertyItemMeta[] = [];\n        for (const i in meta) {\n            if (!meta.hasOwnProperty(i)) {\n                continue;\n            }\n            const v: InternalPropertyItemMeta = meta[i];\n            if (v.hidden) {\n                continue;\n            }\n            if (v.type === 'subItems') {\n                subItems.push(v);\n                continue;\n            }\n\n            let group = groups.find(o => o.name === v.group);\n            if (!group) {\n                group = new InternalGroup(v.group);\n                groups.push(group);\n            }\n            group.items.push(v);\n        }\n        groups.forEach(o => o.items.sort((a, b) => a.order - b.order));\n        const rows: Array = [];\n        for (const g of groups) {\n            if (g.name) {\n                rows.push(g);\n            }\n            g.items.forEach(o => rows.push(o));\n        }\n        this.rows = rows;\n        this.subItems = subItems;\n    }\n\n    optionLabel(v: any): string {\n        if (typeof v === 'string') {\n            return v;\n        }\n        if (v.text) {\n            return v.text;\n        }\n        if (v.label) {\n            return v.label;\n        }\n        return v;\n    }\n\n    optionValue(v: any): any {\n        return v && v.value ? v.value : v;\n    }\n}\n\nexport class PropertyValue {\n    public get value(): any {\n        return this.o[this.meta.key];\n    }\n\n    public set value(val: any) {\n        this.o[this.meta.key] = this.meta.valueConvert ? this.meta.valueConvert(val) : val;\n    }\n\n    constructor(private o: any, public meta: InternalPropertyItemMeta) {\n    }\n}\n\nexport class InternalGroup {\n    public readonly items: InternalPropertyItemMeta[] = [];\n    public type = 'group';\n\n    constructor(public name: string) {\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PropertyValueAccess.html":{"url":"interfaces/PropertyValueAccess.html","title":"interface - PropertyValueAccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PropertyValueAccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/property-grid/custom.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ControlValueAccessor\n            \n\n\n\n\n    \n\n\n    \n        import {\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    Type,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\n\n@Component({\n    selector: 'custom-component',\n    template: '',\n})\nexport class CustomComponent implements OnInit, ICustomDynamicComponent {\n    private readonly _controlValueChangeFn: (value: any) => void;\n    private _value: any;\n\n    @ViewChild('container', { read: ViewContainerRef }) entry;\n    private component: ComponentRef>;\n\n    @Input() componentType: Type;\n\n    @Input()\n    componentOptions: any;\n\n    @Input()\n    set value(v: any) {\n        this._value = v;\n        if (this.component) {\n            this.component.instance.value =  v;\n        }\n    }\n    get value(): any {\n        return this._value;\n    }\n\n    @Output()\n    readonly valueChange: EventEmitter = new EventEmitter();\n\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n        this._controlValueChangeFn = (value: any) => this.onValueChange(value);\n    }\n\n    ngOnInit() {\n        this.buildComponent();\n    }\n\n    private onValueChange(e: any): void {\n        this._value = e;\n        this.valueChange.emit(e);\n    }\n\n    private buildComponent(): void {\n        if (!this.componentType) {\n            return;\n        }\n        try {\n            this.destroyComponent();\n            // this.entry.clear();\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\n            const component = this.entry.createComponent(componentFactory, 0);\n            this.initComponent(component);\n            this.component = component;\n        } catch (e) {\n            console.error('load component error.');\n            console.error(e);\n        }\n    }\n\n    private initComponent(component: ComponentRef) {\n        component.instance.value = this._value;\n        if (component.instance.registerOnChange) {\n            component.instance.registerOnChange(this._controlValueChangeFn);\n        }\n        if (component.instance.valueChange) {\n            component.instance.valueChange.subscribe(this._controlValueChangeFn);\n        }\n\n        if (this.componentOptions) {\n            Object.assign(component.instance, this.componentOptions);\n        }\n    }\n\n    private destroyComponent(): void {\n        if (this.component) {\n            this.component.destroy();\n        }\n    }\n}\n\nexport interface PropertyValueAccess extends ControlValueAccessor, ICustomDynamicComponent {\n}\n\nexport interface ICustomDynamicComponent {\n    value: TValue;\n    valueChange: EventEmitter;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ShowcaseModule.html":{"url":"modules/ShowcaseModule.html","title":"module - ShowcaseModule","body":"\n                   \n\n\n\n\n  Modules\n  ShowcaseModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ShowcaseModule\n\n\n\ncluster_ShowcaseModule_declarations\n\n\n\ncluster_ShowcaseModule_imports\n\n\n\ncluster_ShowcaseModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nShowcaseModule\n\nShowcaseModule\n\nShowcaseModule -->\n\nAppComponent->ShowcaseModule\n\n\n\n\n\nSimpleTextEditorComponent\n\nSimpleTextEditorComponent\n\nShowcaseModule -->\n\nSimpleTextEditorComponent->ShowcaseModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nShowcaseModule->AppComponent \n\n\n\n\n\nPropertyGridModule\n\nPropertyGridModule\n\nShowcaseModule -->\n\nPropertyGridModule->ShowcaseModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/showcase/showcase.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                SimpleTextEditorComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                MatCheckbox\n                            \n                            \n                                MatDatepicker\n                            \n                            \n                                MatSlideToggle\n                            \n                            \n                                MatSlider\n                            \n                            \n                                SimpleTextEditorComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    PropertyGridModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Schemas\n                    \n                            \n                                CUSTOM_ELEMENTS_SCHEMA\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\n\nimport {AppComponent, SimpleTextEditorComponent} from './app.component';\nimport {PropertyGridModule} from '../components/property-grid';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {\n    MatCheckboxModule,\n    MatSlider,\n    MatSliderModule,\n    MatDatepickerModule,\n    MatDatepicker,\n    MatSlideToggleModule,\n    MatSlideToggle, MatNativeDateModule, MatRadioModule, MatInputModule\n} from '@angular/material';\nimport {MatCheckbox} from '@angular/material';\nimport {FormsModule} from '@angular/forms';\nimport {NgxJsonViewerModule} from 'ngx-json-viewer';\nimport {NgxTemplateModule} from 'ngx-template';\n\n@NgModule({\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\n    imports: [\n        BrowserModule, FormsModule, NoopAnimationsModule, PropertyGridModule, NgxTemplateModule,\n        NgxJsonViewerModule,\n        MatCheckboxModule, MatSliderModule, MatDatepickerModule, MatSlideToggleModule,\n        MatNativeDateModule, MatRadioModule, MatInputModule\n    ],\n    entryComponents: [SimpleTextEditorComponent, MatCheckbox, MatSlider, MatDatepicker, MatSlideToggle],\n    declarations: [\n        AppComponent, SimpleTextEditorComponent\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class ShowcaseModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleTextEditorComponent.html":{"url":"components/SimpleTextEditorComponent.html","title":"component - SimpleTextEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimpleTextEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/showcase/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                ICustomDynamicComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-editor\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueChange:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter} from '@angular/core';\nimport {meta, ICustomDynamicComponent} from '../components/property-grid/index';\nimport {MatCheckbox, MatSlider, MatSlideToggle} from '@angular/material';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    public student: ExampleStudentOptions = new ExampleStudentOptions();\n\n    constructor() {\n    }\n\n    public get data(): string {\n        return JSON.parse(JSON.stringify(this.student));\n    }\n\n    text: string;\n}\n\n@Component({\n    selector: 'app-text-editor',\n    template: ``\n})\nexport class SimpleTextEditorComponent implements ICustomDynamicComponent {\n    value: string;\n    valueChange: EventEmitter = new EventEmitter();\n}\n\nexport class ExampleEditorOptions {\n    @meta({\n        name: 'Font', description: 'The font editor to use', colSpan2: false,\n        componentType: SimpleTextEditorComponent, group: 'Editor', hidden: false\n    })\n    font = 'Source Code Pro';\n\n    @meta({name: 'Font size', group: 'Editor', valueConvert: parseInt, type: 'fontSize'})\n    fontSize = 14;\n\n    @meta({name: 'Font color', group: 'Editor', type: 'color'})\n    fontColor = '#51f41c';\n\n    @meta({name: 'jQuery', group: 'Plugins', componentType: MatCheckbox})\n    jQuery = true;\n\n    @meta({\n        name: 'modernizr',\n        description: 'Whether or not to include modernizr on the page',\n        group: 'Plugins',\n        componentType: MatSlideToggle\n    })\n    modernizr = false;\n\n    @meta({\n        name: 'Framework',\n        description: 'Whether to include any additional framework',\n        type: 'options',\n        componentOptions: {options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]}\n    })\n    framework = 'None';\n\n}\n\nexport class ExampleStudentOptions {\n\n    @meta({name: 'Birth', group: 'Basic Information', type: 'date', order: 4})\n    birth = '2018-05-08';\n\n    @meta({name: 'Name', group: 'Basic Information', type: 'text', order: 1})\n    name = 'Lily';\n\n    @meta({name: 'Age', group: 'Basic Information', valueConvert: parseInt, type: 'text', order: 2})\n    age = 19;\n\n    @meta({name: 'Telephone', type: 'telephone', group: 'Basic Information', hidden: true})\n    telephone;\n\n    @meta({name: 'Gender', group: 'Basic Information', type: 'sex', order: 3})\n    gender = 'male';\n\n    @meta({name: 'Editor Preference', type: 'subItems', initState: 'visible'})\n    editor: ExampleEditorOptions = new ExampleEditorOptions();\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomComponent', 'selector': 'custom-component'},{'name': 'PropertyGridComponent', 'selector': 'ngx-property-grid'},{'name': 'SimpleTextEditorComponent', 'selector': 'app-text-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SimpleTextEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/components/property-grid/custom.component.ts\n            \n            \n                component\n            \n            \n                CustomComponent\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/custom.component.ts\n            \n            \n                interface\n            \n            \n                ICustomDynamicComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/custom.component.ts\n            \n            \n                interface\n            \n            \n                PropertyValueAccess\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-grid-control-provider.ts\n            \n            \n                injectable\n            \n            \n                PropertyGridControlProvider\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-grid-control-provider.ts\n            \n            \n                variable\n            \n            \n                defaultProvider\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-grid.component.ts\n            \n            \n                component\n            \n            \n                PropertyGridComponent\n            \n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-grid.component.ts\n            \n            \n                class\n            \n            \n                InternalGroup\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-grid.component.ts\n            \n            \n                class\n            \n            \n                PropertyValue\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-item-meta.ts\n            \n            \n                interface\n            \n            \n                InternalPropertyItemMeta\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-item-meta.ts\n            \n            \n                interface\n            \n            \n                PropertyItemMeta\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-item-meta.ts\n            \n            \n                variable\n            \n            \n                meta\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/showcase/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/showcase/app.component.ts\n            \n            \n                component\n            \n            \n                SimpleTextEditorComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/showcase/app.component.ts\n            \n            \n                class\n            \n            \n                ExampleEditorOptions\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/showcase/app.component.ts\n            \n            \n                class\n            \n            \n                ExampleStudentOptions\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            ngx-template : ^1.0.4\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgxPropertyGrid\n\n\n\nA small and simple property grid in angular to view/edit POJOs, excellent if you have a \"settings\" object you want to give the user to edit (that's why I have created it). Play online.\nDependencies\n\nangular2+\nngx-template\n\nUsage\n\nImport\n import {PropertyGridModule} from '../components/property-grid';\n\n import {NgxTemplateModule} from 'ngx-template';\nGetting Started\n\nHtml\nBasic  \nTemplate  \n      \n          \n      \n      \n          \n      \n  \n\n\nObject options\n  export class ExampleEditorOptions {\n      @meta({name: 'Font', description: 'The font editor to use', componentType: SimpleTextEditorComponent, group: 'Editor', hidden: false})\n      font = 'Source Code Pro';\n\n      @meta({name: 'Font size', group: 'Editor', type: 'number', valueConvert: parseInt})\n      fontSize = 14;\n\n      @meta({name: 'Font color', group: 'Editor', type: 'color'})\n      fontColor = '#51f41c';\n\n      @meta({name: 'jQuery', group: 'Plugins', type: 'checkbox'})\n      jQuery = true;\n\n      @meta({name: 'modernizr', description: 'Whether or not to include modernizr on the page', group: 'Plugins', type: 'checkbox'})\n      modernizr = false;\n\n      @meta({\n          name: 'Framework',\n          description: 'Whether to include any additional framework',\n          type: 'options',\n          options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]\n      })\n      framework = 'None';\n  }\n\n\nThe metadata options declare\n export interface PropertyItemMeta {\n     name: string; // The display name of the property in the grid\n     description?: string; // A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\n     order?: number; // The display order.\n     group?: string; //  The group this property belongs to\n     hidden?: boolean; // Whether this property should be hidden in the grid, default is false (can be omitted).\n     initState?: string; // - hidden/visible.\n     componentType?: Type>; // an custom component should be implement\n     // ControlValueAccessor or ICustomDynamicComponent\n     componentOptions?: any;\n     colSpan2?: boolean; //  - true/false. If true then property input will span both columns and will have no name/label\n     // (useful for textarea custom type)\n     type?: string; // boolean number options label color\n     valueConvert?: (value: any) => any; // convert the value, eg. parseInt\n }\nThe result would be (live demo):\n\n\n\nThe metadata object\nAs seen from the example above the metadata object can be used (it's optional) in order to describe the object properties.\nEach proprty in the metadata object could have the following:\n\nname - The display name of the property in the grid\ndescription - A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\nhidden - Whether this property should be hidden in the grid, default is false (can be omitted).\ngroup - The group this property belongs to\ntype - The type of the property, supported are:\nboolean or checkbox - A checkbox would be used\nnumber -  simple textbox\ncolor - simple textbox\noptions - A dropdown list would be used in case the metadata contains the options array property\nlabel - A label will be used, useful for uneditable / read-only properties\n\n\ncomponentType - An angular component\ncolspan2 - true/false. If true then property input will span both columns and will have no name/label (useful for textarea custom type, see example/index.html)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 YISH\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        PropertyGridModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ShowcaseModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyGridModule\n\n\n\ncluster_PropertyGridModule_declarations\n\n\n\ncluster_PropertyGridModule_exports\n\n\n\ncluster_ShowcaseModule\n\n\n\ncluster_ShowcaseModule_declarations\n\n\n\ncluster_ShowcaseModule_bootstrap\n\n\n\n\nCustomComponent\n\nCustomComponent\n\n\n\nPropertyGridModule\n\nPropertyGridModule\n\nPropertyGridModule -->\n\nCustomComponent->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent\n\nPropertyGridComponent\n\nPropertyGridModule -->\n\nPropertyGridComponent->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent \n\nPropertyGridComponent \n\nPropertyGridComponent  -->\n\nPropertyGridModule->PropertyGridComponent \n\n\n\n\n\nShowcaseModule\n\nShowcaseModule\n\nShowcaseModule -->\n\nPropertyGridModule->ShowcaseModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nShowcaseModule -->\n\nAppComponent->ShowcaseModule\n\n\n\n\n\nSimpleTextEditorComponent\n\nSimpleTextEditorComponent\n\nShowcaseModule -->\n\nSimpleTextEditorComponent->ShowcaseModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nShowcaseModule->AppComponent \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            2 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        4 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 injectable\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            defaultProvider   (src/.../property-grid-control-provider.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            meta   (src/.../property-item-meta.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/components/property-grid/property-grid-control-provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultProvider:     \n\n                    \n                \n                    \n                        \n                            Default value : new PropertyGridControlProvider()\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/property-grid/property-item-meta.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            meta\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        meta:     \n\n                    \n                \n                    \n                        \n                            Default value : (m: PropertyItemMeta) =>\n    (target: any, key: string | symbol) => {\n        const xMeta = m as InternalPropertyItemMeta;\n        if (!target.__meta__) {\n            target.__meta__ = {};\n        }\n        if (!xMeta.componentType) {\n            if (!xMeta.type) {\n                xMeta.componentType = defaultProvider.getComponentType('text');\n            } else if (xMeta.type === 'boolean') {\n                xMeta.componentType = defaultProvider.getComponentType('checkbox');\n            } else {\n                xMeta.componentType = defaultProvider.getComponentType(m.type);\n            }\n\n            if (xMeta.type === 'number' && !xMeta.valueConvert) {\n                xMeta.valueConvert = parseInt;\n            }\n        }\n        if (!xMeta.initState) {\n            xMeta.initState = 'hidden';\n        }\n        if (!xMeta.order) {\n            xMeta.order = 0;\n        }\n        xMeta.key = key;\n        target.__meta__[key] = xMeta;\n    }\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
