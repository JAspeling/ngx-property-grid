var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/directives/DynamicComponentLoadDirective.html",[0,1.057,1,0.881]],["body/directives/DynamicComponentLoadDirective.html",[0,1.095,1,0.913,2,1.671,3,0.503,4,0.412,5,0.412,6,0.878,7,0.696,8,2.313,9,1.144,10,1.056,11,1.588,12,2.35,13,2.35,14,2.35,15,1.3,16,1.588,17,2.614,18,0.503,19,0.913,20,2.919,21,1.579,22,2.35,23,1.374,24,1.956,25,2.614,26,2.614,27,2.513,28,2.513,29,2.614,30,2.614,31,2.513,32,1.316,33,1.956,34,2.35,35,1.056,36,1.671,37,2.614,38,3.055,39,2.769,40,2.513,41,1.909,42,0.072,43,1.097,44,1.055,45,1.316,46,1.956,47,0.599,48,1.671,49,1.671,50,2.392,51,2.236,52,1.671,53,1.956,54,2.945,55,1.671,56,1.956,57,2.614,58,1.671,59,1.671,60,1.671,61,1.671,62,1.3,63,1.671,64,1.671,65,1.671,66,1.671,67,1.671,68,0.889,69,1.095,70,0.503,71,1.314,72,0.874,73,0.503,74,0.62,75,0.829,76,0.913,77,0.874,78,0.412,79,0.331,80,1.314,81,1.3,82,1.3,83,0.874,84,1.056,85,1.3,86,1.956,87,1.3,88,1.3,89,0.874,90,1.3,91,1.056,92,1.3,93,1.956,94,1.3,95,1.3,96,1.3,97,1.095,98,1.3,99,1.3,100,1.3,101,0.874,102,1.3,103,1.956,104,1.3,105,1.3,106,1.3,107,1.3,108,1.3,109,1.3,110,1.3,111,1.3,112,1.3,113,1.3,114,1.956,115,1.3,116,1.3,117,0.331,118,0.874,119,1.3,120,0.025,121,0.037,122,0.025]],["title/interfaces/IDynamicComponent.html",[76,0.881,117,0.481]],["body/interfaces/IDynamicComponent.html",[3,1.022,4,0.838,5,0.838,6,0.674,7,0.526,8,1.775,18,1.022,19,1.477,42,0.069,44,1.003,68,0.838,70,1.022,75,1.113,76,1.477,78,0.838,117,0.674,120,0.05,121,0.06,122,0.05,123,1.775,124,2.642,125,4.511,126,4.352,127,4.511]],["title/classes/InternalGroup.html",[79,0.481,128,1.534]],["body/classes/InternalGroup.html",[3,0.299,4,0.245,5,0.245,6,0.634,7,0.684,9,0.409,11,0.627,16,0.627,18,0.299,19,0.603,20,1.759,21,1.308,23,0.603,24,1.292,32,0.433,35,0.627,39,1.901,41,0.627,42,0.073,43,1.011,44,0.91,45,0.433,47,0.664,50,0.627,51,1.67,68,0.686,69,1.565,70,0.299,73,0.299,74,0.742,75,0.617,78,0.409,79,0.329,80,2.08,83,2.32,89,1.119,91,1.049,97,1.212,101,2.288,120,0.015,121,0.024,122,0.015,128,1.58,129,0.627,130,1.16,131,0.772,132,2.139,133,1.759,134,2.782,135,0.993,136,2.013,137,0.993,138,1.119,139,0.993,140,0.993,141,1.573,142,0.993,143,1.901,144,0.993,145,0.993,146,1.66,147,1.66,148,1.66,149,0.993,150,1.66,151,2.139,152,2.139,153,0.993,154,0.993,155,2.139,156,1.66,157,0.993,158,0.993,159,0.993,160,1.119,161,1.455,162,2.633,163,0.993,164,1.66,165,0.993,166,0.993,167,0.993,168,0.993,169,0.993,170,3.348,171,2.139,172,3.348,173,0.993,174,0.993,175,1.292,176,0.993,177,3.479,178,3.775,179,2.501,180,1.759,181,0.993,182,0.772,183,0.993,184,0.993,185,0.993,186,2.501,187,0.993,188,2.139,189,0.627,190,0.993,191,0.993,192,0.993,193,2.139,194,3.008,195,3.194,196,0.993,197,2.782,198,1.66,199,0.993,200,1.66,201,2.501,202,2.501,203,2.139,204,2.501,205,3.348,206,2.501,207,0.993,208,1.66,209,0.993,210,3.008,211,0.993,212,1.66,213,0.993,214,0.993,215,0.993,216,2.139,217,0.772,218,0.993,219,0.993,220,0.772,221,1.049,222,2.139,223,1.66,224,0.993,225,0.993,226,1.66,227,0.993,228,0.993,229,0.993,230,1.66,231,0.993,232,1.308,233,0.993,234,0.993,235,0.993,236,0.993,237,0.993,238,0.993,239,0.772,240,0.993,241,0.993,242,2.139,243,0.993,244,0.993,245,0.993,246,1.66,247,0.993,248,0.519,249,0.993,250,0.993,251,0.993,252,1.352,253,0.993,254,1.049,255,2.139,256,0.993,257,0.993,258,0.627,259,1.58,260,0.868,261,0.993,262,0.993,263,0.993,264,0.993,265,0.772,266,0.868,267,0.993,268,1.66,269,2.116,270,0.993,271,0.993,272,1.66,273,1.66,274,0.993,275,0.993,276,0.993,277,0.993,278,1.66,279,1.58,280,0.993,281,0.993,282,2.139,283,0.993,284,0.993,285,0.993,286,0.993,287,0.993,288,0.993,289,0.993,290,1.66,291,1.66,292,0.993,293,0.993,294,2.139,295,0.993,296,0.993,297,0.772,298,0.993,299,0.993,300,0.993,301,1.049,302,0.993,303,0.993,304,0.627,305,0.993,306,1.66,307,1.66,308,0.993,309,0.993,310,0.993,311,0.993,312,0.993,313,2.501,314,0.993,315,0.772,316,1.66,317,0.993,318,0.993,319,2.139,320,0.993,321,0.993,322,0.993,323,0.993,324,0.993,325,0.993,326,0.993,327,0.993,328,0.993,329,0.993,330,0.993,331,0.993,332,0.993,333,0.993,334,0.993,335,0.993,336,0.993,337,0.993,338,0.993,339,1.66,340,1.66,341,0.993,342,1.66,343,0.993]],["title/modules/PropertyGridModule.html",[344,1.534,345,1.057]],["body/modules/PropertyGridModule.html",[1,1.641,3,0.883,4,0.723,5,0.723,6,0.582,7,0.575,9,0.723,42,0.071,68,1.114,70,0.883,72,1.533,77,1.533,78,0.723,79,0.582,120,0.043,121,0.055,122,0.043,130,1.065,160,1.533,161,1.533,248,2.497,344,1.853,345,2.042,346,1.853,347,1.278,348,2.282,349,3.173,350,2.282,351,2.282,352,3.173,353,2.282,354,2.282,355,2.282,356,2.891,357,2.282,358,1.853,359,2.933,360,3.715,361,2.282,362,3.715,363,2.933,364,2.933,365,2.891,366,3.715,367,2.933]],["title/interfaces/PropertyItemMeta.html",[47,0.481,117,0.481]],["body/interfaces/PropertyItemMeta.html",[3,0.49,4,0.402,5,0.402,6,0.323,7,0.581,9,0.608,18,0.49,19,0.895,21,0.852,32,1.823,42,0.073,43,1.414,44,1.145,45,2.029,47,0.59,62,1.918,68,0.734,69,0.71,70,0.49,71,1.289,72,0.852,73,0.49,74,0.402,75,0.608,76,0.592,77,0.852,78,0.608,97,1.074,117,0.323,120,0.024,121,0.036,122,0.024,123,0.852,130,0.592,133,1.029,136,2.34,138,1.555,141,1.734,143,2.252,162,1.558,180,2.096,189,1.029,221,1.558,232,2.253,252,1.029,254,2.644,258,2.46,259,1.88,260,1.863,265,2.581,266,0.852,269,1.558,279,1.029,297,2.772,301,1.029,304,1.029,368,1.029,369,2.581,370,2.772,371,2.581,372,2.772,373,2.581,374,2.581,375,2.314,376,2.314,377,2.252,378,1.629,379,1.629,380,1.267,381,1.267,382,1.267,383,1.267,384,1.918,385,1.267,386,1.029,387,1.267,388,1.267,389,1.267,390,1.918,391,1.267,392,1.267,393,1.267,394,1.267,395,1.267,396,1.267,397,1.267,398,1.267,399,1.267,400,1.267,401,1.558,402,1.629,403,2.581,404,1.267,405,1.267,406,1.267,407,1.267,408,2.581,409,1.918,410,1.918,411,1.918,412,1.267,413,1.918,414,1.267,415,3.029,416,2.314,417,1.267,418,1.918,419,1.267,420,1.267,421,1.267,422,1.267,423,1.267,424,1.267]],["title/classes/PropertyValue.html",[23,0.881,79,0.481]],["body/classes/PropertyValue.html",[3,0.863,4,0.707,5,0.707,6,0.871,7,0.696,18,0.863,19,1.33,23,1.33,33,2.85,35,1.812,39,2.687,41,2.314,42,0.071,43,1.33,44,0.995,45,1.596,47,0.871,50,1.812,51,1.499,68,0.707,73,0.863,74,1.108,75,0.995,78,0.707,79,0.569,80,1.499,83,2.297,84,1.812,120,0.042,121,0.054,122,0.042,129,1.812,130,1.595,266,1.499,425,2.231,426,2.867,427,2.867,428,3.662,429,2.867,430,2.867,431,2.867,432,2.867,433,2.867,434,3.662,435,3.662,436,2.867,437,2.867,438,2.867]],["title/interfaces/PropertyValueAccess.html",[117,0.481,118,1.269]],["body/interfaces/PropertyValueAccess.html",[0,1.395,1,0.85,3,0.705,4,0.578,5,0.578,6,0.464,7,0.565,8,1.224,9,1.047,10,1.48,11,1.48,12,2.492,13,2.492,14,2.492,16,1.48,17,1.822,20,2.835,21,1.224,22,1.822,23,1.326,25,1.822,26,1.822,29,1.822,30,1.822,32,1.02,34,1.822,37,2.492,38,2.84,42,0.073,44,0.9,46,1.822,47,0.635,51,2.149,53,1.822,54,2.84,56,1.822,57,2.492,68,1.014,69,1.395,70,0.705,71,1.909,72,1.224,73,0.705,74,0.79,75,0.968,76,1.163,77,1.224,78,0.578,79,0.464,80,1.675,81,1.822,82,1.822,83,1.224,84,1.48,85,1.822,86,2.492,87,1.822,88,1.822,89,1.224,90,1.822,91,1.48,92,1.822,93,2.492,94,1.822,95,1.822,96,1.822,97,1.395,98,1.822,99,1.822,100,1.822,101,1.224,102,1.822,103,2.492,104,1.822,105,1.822,106,1.822,107,1.822,108,1.822,109,1.822,110,1.822,111,1.822,112,1.822,113,1.822,114,2.492,115,1.822,116,1.822,117,0.464,118,1.675,119,2.492,120,0.034,121,0.047,122,0.034,123,1.224]],["title/coverage.html",[439,2.553]],["body/coverage.html",[0,1.301,1,1.084,5,0.736,6,0.924,7,0.722,8,2.149,9,1.014,10,2.374,23,1.084,42,0.07,44,0.736,47,0.592,73,1.131,74,0.736,76,1.084,79,0.745,89,1.561,101,2.436,117,0.815,118,1.561,120,0.044,121,0.055,122,0.044,124,2.323,128,1.887,130,1.615,131,2.923,175,2.323,248,1.561,368,2.374,425,2.323,439,2.323,440,2.323,441,2.985,442,2.985,443,2.985,444,3.757,445,3.757,446,2.985,447,2.985,448,2.985,449,2.985,450,2.985]],["title/dependencies.html",[347,1.268,451,2.042]],["body/dependencies.html",[42,0.069,70,1.103,120,0.054,121,0.063,122,0.054,160,1.915,161,1.915,347,1.853,361,2.851,452,3.663,453,3.663,454,4.252]],["title/index.html",[18,0.615,455,1.29,456,1.29]],["body/index.html",[4,0.44,7,0.694,9,0.44,15,2.882,19,0.958,32,1.891,42,0.071,43,1.345,44,1.095,45,0.777,47,0.354,68,0.856,69,1.15,71,0.933,74,0.44,75,0.856,78,0.651,79,0.354,117,0.354,120,0.039,121,0.039,122,0.026,133,1.128,136,1.814,138,1.642,141,1.642,143,2.658,160,1.642,161,1.642,162,2.45,180,2.341,182,2.882,189,1.985,217,1.388,221,1.985,232,2.199,252,2.193,254,2.193,259,1.128,260,1.814,279,1.128,315,3.017,345,0.777,347,0.777,365,1.388,369,2.053,370,3.122,371,1.388,372,2.444,373,2.053,375,1.388,376,2.882,377,2.341,380,3.017,381,2.053,382,2.053,383,2.053,384,2.7,385,2.053,386,2.193,387,2.053,388,1.388,389,1.388,390,2.444,391,1.388,392,1.388,393,2.053,394,2.053,395,2.053,396,2.053,397,2.444,398,2.053,399,1.388,400,1.388,401,1.668,455,1.128,456,1.128,457,1.784,458,1.784,459,3.14,460,2.639,461,1.784,462,1.784,463,1.784,464,1.784,465,1.784,466,1.784,467,1.784,468,1.784,469,1.784,470,1.784,471,1.784,472,1.784,473,1.784,474,1.784,475,1.784,476,1.784,477,1.784,478,1.784,479,1.784,480,1.784,481,1.784,482,3.703,483,3.47,484,1.388,485,1.784,486,1.784,487,1.784,488,1.784,489,1.784,490,1.784,491,1.784,492,2.639,493,2.639,494,3.14,495,2.639,496,1.784,497,3.14,498,1.784,499,2.639,500,1.784,501,1.784,502,1.784,503,1.784,504,1.784,505,1.784,506,1.784,507,1.784,508,1.388,509,1.784,510,1.784,511,1.784,512,1.784,513,1.388,514,1.784,515,2.639,516,1.784,517,1.784,518,1.784,519,1.784,520,1.784,521,1.784,522,1.784]],["title/license.html",[455,1.29,456,1.29,523,1.589]],["body/license.html",[42,0.055,120,0.043,121,0.055,122,0.043,358,1.853,386,1.853,440,2.282,484,2.891,508,2.282,513,2.282,523,2.282,524,2.933,525,4.077,526,2.933,527,2.933,528,2.933,529,3.715,530,2.933,531,2.933,532,2.933,533,2.933,534,2.933,535,2.933,536,3.715,537,4.687,538,2.933,539,2.933,540,2.933,541,4.077,542,2.933,543,3.715,544,2.933,545,2.933,546,2.933,547,2.933,548,2.933,549,2.933,550,2.933,551,2.933,552,2.933,553,3.715,554,2.933,555,2.933,556,2.933,557,2.933,558,2.933,559,3.715,560,3.715,561,2.933,562,2.933,563,2.933,564,2.933,565,2.933,566,2.933,567,2.933,568,2.933,569,2.933,570,2.933,571,2.933,572,2.933,573,2.933,574,2.933,575,2.933,576,2.933,577,2.933,578,2.933,579,2.933,580,2.933,581,2.933,582,2.933,583,2.933,584,2.933,585,2.933,586,2.933,587,2.933,588,2.933,589,2.933]],["title/modules.html",[346,2.074]],["body/modules.html",[42,0.063,120,0.055,121,0.063,122,0.055,345,1.632,346,2.367,590,3.746,591,3.746,592,3.746,593,3.746]],["title/overview.html",[594,2.553]],["body/overview.html",[0,1.45,1,1.567,9,0.821,42,0.068,120,0.049,121,0.059,122,0.049,123,1.74,129,2.103,220,2.589,239,3.357,248,2.465,344,2.539,345,2.054,347,1.45,348,2.589,349,2.589,350,2.589,351,2.589,352,2.589,353,2.589,354,2.589,355,2.589,356,3.125,357,2.589,358,2.103,594,2.589,595,3.327]],["title/miscellaneous/variables.html",[596,1.589,597,2.265]],["body/miscellaneous/variables.html",[6,0.533,7,0.416,18,0.809,42,0.073,43,1.276,47,0.533,73,1.057,74,0.866,75,0.663,97,1.171,120,0.04,121,0.052,122,0.04,130,0.976,136,1.406,138,1.406,141,1.837,232,1.406,258,2.473,260,1.406,266,1.406,269,2.22,301,1.699,304,1.699,368,2.22,374,2.092,377,1.699,401,1.699,403,3.228,404,2.092,405,2.092,406,2.092,407,2.092,408,3.228,409,2.733,410,2.733,411,2.733,412,2.092,413,2.733,414,2.092,415,3.5,416,3.044,417,2.092,418,2.733,419,2.092,420,2.092,421,2.092,422,2.092,423,2.092,424,2.092,596,2.092,597,2.092,598,2.688]]],"invertedIndex":[["",{"_index":42,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":101,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["0.07",{"_index":238,"title":{},"body":{"classes/InternalGroup.html":{}}}],["0.1",{"_index":206,"title":{},"body":{"classes/InternalGroup.html":{}}}],["0/1",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":239,"title":{},"body":{"classes/InternalGroup.html":{},"overview.html":{}}}],["1.1.1",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":205,"title":{},"body":{"classes/InternalGroup.html":{}}}],["100",{"_index":208,"title":{},"body":{"classes/InternalGroup.html":{}}}],["10px",{"_index":215,"title":{},"body":{"classes/InternalGroup.html":{}}}],["12",{"_index":219,"title":{},"body":{"classes/InternalGroup.html":{}}}],["120px",{"_index":262,"title":{},"body":{"classes/InternalGroup.html":{}}}],["12px",{"_index":196,"title":{},"body":{"classes/InternalGroup.html":{}}}],["14",{"_index":217,"title":{},"body":{"classes/InternalGroup.html":{},"index.html":{}}}],["18px",{"_index":218,"title":{},"body":{"classes/InternalGroup.html":{}}}],["1px",{"_index":172,"title":{},"body":{"classes/InternalGroup.html":{}}}],["2",{"_index":220,"title":{},"body":{"classes/InternalGroup.html":{},"overview.html":{}}}],["2020",{"_index":527,"title":{},"body":{"license.html":{}}}],["20px",{"_index":226,"title":{},"body":{"classes/InternalGroup.html":{}}}],["2px",{"_index":193,"title":{},"body":{"classes/InternalGroup.html":{}}}],["3",{"_index":595,"title":{},"body":{"overview.html":{}}}],["3px",{"_index":203,"title":{},"body":{"classes/InternalGroup.html":{}}}],["51f41c",{"_index":491,"title":{},"body":{"index.html":{}}}],["5px",{"_index":178,"title":{},"body":{"classes/InternalGroup.html":{}}}],["616161",{"_index":185,"title":{},"body":{"classes/InternalGroup.html":{}}}],["6px",{"_index":214,"title":{},"body":{"classes/InternalGroup.html":{}}}],["8px",{"_index":187,"title":{},"body":{"classes/InternalGroup.html":{}}}],["9.1.4",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["95b8e7",{"_index":173,"title":{},"body":{"classes/InternalGroup.html":{}}}],["__meta__",{"_index":415,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["_blank",{"_index":299,"title":{},"body":{"classes/InternalGroup.html":{}}}],["_controlvaluechangefn",{"_index":22,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["_meta",{"_index":250,"title":{},"body":{"classes/InternalGroup.html":{}}}],["_options",{"_index":249,"title":{},"body":{"classes/InternalGroup.html":{}}}],["_templateloaded",{"_index":251,"title":{},"body":{"classes/InternalGroup.html":{}}}],["a.order",{"_index":333,"title":{},"body":{"classes/InternalGroup.html":{}}}],["above",{"_index":508,"title":{},"body":{"index.html":{},"license.html":{}}}],["accessors",{"_index":33,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/PropertyValue.html":{}}}],["action",{"_index":583,"title":{},"body":{"license.html":{}}}],["additional",{"_index":498,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":406,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["aftercontentinit",{"_index":146,"title":{},"body":{"classes/InternalGroup.html":{}}}],["afterviewinit",{"_index":147,"title":{},"body":{"classes/InternalGroup.html":{}}}],["and/or",{"_index":551,"title":{},"body":{"license.html":{}}}],["angular",{"_index":460,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":158,"title":{},"body":{"classes/InternalGroup.html":{}}}],["angular/common",{"_index":361,"title":{},"body":{"modules/PropertyGridModule.html":{},"dependencies.html":{}}}],["angular/core",{"_index":70,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":72,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{}}}],["angular9",{"_index":473,"title":{},"body":{"index.html":{}}}],["angularjs",{"_index":500,"title":{},"body":{"index.html":{}}}],["animate",{"_index":154,"title":{},"body":{"classes/InternalGroup.html":{}}}],["animate('400ms",{"_index":235,"title":{},"body":{"classes/InternalGroup.html":{}}}],["animate(100",{"_index":246,"title":{},"body":{"classes/InternalGroup.html":{}}}],["animation,you",{"_index":476,"title":{},"body":{"index.html":{}}}],["animations",{"_index":227,"title":{},"body":{"classes/InternalGroup.html":{}}}],["any).key",{"_index":407,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["app.module.ts",{"_index":478,"title":{},"body":{"index.html":{}}}],["arising",{"_index":587,"title":{},"body":{"license.html":{}}}],["array",{"_index":520,"title":{},"body":{"index.html":{}}}],["associated",{"_index":538,"title":{},"body":{"license.html":{}}}],["authors",{"_index":577,"title":{},"body":{"license.html":{}}}],["auto",{"_index":378,"title":{},"body":{"interfaces/PropertyItemMeta.html":{}}}],["b",{"_index":332,"title":{},"body":{"classes/InternalGroup.html":{}}}],["b.order",{"_index":334,"title":{},"body":{"classes/InternalGroup.html":{}}}],["backbone",{"_index":502,"title":{},"body":{"index.html":{}}}],["backbone.js",{"_index":501,"title":{},"body":{"index.html":{}}}],["background",{"_index":179,"title":{},"body":{"classes/InternalGroup.html":{}}}],["basic",{"_index":480,"title":{},"body":{"index.html":{}}}],["belongs",{"_index":385,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["bezier(0.86",{"_index":237,"title":{},"body":{"classes/InternalGroup.html":{}}}],["bold",{"_index":184,"title":{},"body":{"classes/InternalGroup.html":{}}}],["boolean",{"_index":254,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["bootstrap",{"_index":350,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["border",{"_index":170,"title":{},"body":{"classes/InternalGroup.html":{}}}],["both",{"_index":394,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["bottom",{"_index":188,"title":{},"body":{"classes/InternalGroup.html":{}}}],["box",{"_index":201,"title":{},"body":{"classes/InternalGroup.html":{}}}],["browse",{"_index":593,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":590,"title":{},"body":{"modules.html":{}}}],["browseranimationsmodule",{"_index":477,"title":{},"body":{"index.html":{}}}],["buildcomponent",{"_index":25,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["c",{"_index":526,"title":{},"body":{"license.html":{}}}],["card",{"_index":212,"title":{},"body":{"classes/InternalGroup.html":{}}}],["cardstyle",{"_index":263,"title":{},"body":{"classes/InternalGroup.html":{}}}],["case",{"_index":518,"title":{},"body":{"index.html":{}}}],["catch",{"_index":104,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ccc",{"_index":192,"title":{},"body":{"classes/InternalGroup.html":{}}}],["cdr",{"_index":281,"title":{},"body":{"classes/InternalGroup.html":{}}}],["changedetectorref",{"_index":148,"title":{},"body":{"classes/InternalGroup.html":{}}}],["changes",{"_index":59,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["changes.options",{"_index":87,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["charge",{"_index":533,"title":{},"body":{"license.html":{}}}],["checkbox",{"_index":376,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["claim",{"_index":580,"title":{},"body":{"license.html":{}}}],["class",{"_index":79,"title":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":129,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"overview.html":{}}}],["cluster_propertygridmodule",{"_index":353,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["cluster_propertygridmodule_declarations",{"_index":354,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["cluster_propertygridmodule_exports",{"_index":355,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["code",{"_index":486,"title":{},"body":{"index.html":{}}}],["color",{"_index":180,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["colspan2",{"_index":369,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["columns",{"_index":395,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["commonmodule",{"_index":360,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["component",{"_index":9,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component.instance.registeronchange",{"_index":110,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.registeronchange(this._controlvaluechangefn",{"_index":111,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.value",{"_index":109,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.valuechange",{"_index":112,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.valuechange.subscribe(this._controlvaluechangefn",{"_index":113,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.ts",{"_index":124,"title":{},"body":{"interfaces/IDynamicComponent.html":{},"coverage.html":{}}}],["componentfactory",{"_index":98,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["componentfactoryresolver",{"_index":38,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["componentref",{"_index":54,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["componenttype",{"_index":34,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["conditions",{"_index":558,"title":{},"body":{"license.html":{}}}],["connection",{"_index":588,"title":{},"body":{"license.html":{}}}],["console.error('load",{"_index":106,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["console.error(e",{"_index":108,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["const",{"_index":97,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":35,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["constructor(el",{"_index":280,"title":{},"body":{"classes/InternalGroup.html":{}}}],["constructor(entry",{"_index":36,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["constructor(name",{"_index":135,"title":{},"body":{"classes/InternalGroup.html":{}}}],["constructor(o",{"_index":426,"title":{},"body":{"classes/PropertyValue.html":{}}}],["constructor(private",{"_index":84,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["constructor(public",{"_index":343,"title":{},"body":{"classes/InternalGroup.html":{}}}],["contains",{"_index":519,"title":{},"body":{"index.html":{}}}],["contentchildren",{"_index":149,"title":{},"body":{"classes/InternalGroup.html":{}}}],["contentchildren(ngxtemplate",{"_index":276,"title":{},"body":{"classes/InternalGroup.html":{}}}],["continue",{"_index":319,"title":{},"body":{"classes/InternalGroup.html":{}}}],["contract",{"_index":584,"title":{},"body":{"license.html":{}}}],["control",{"_index":190,"title":{},"body":{"classes/InternalGroup.html":{}}}],["controltype(meta",{"_index":305,"title":{},"body":{"classes/InternalGroup.html":{}}}],["controlvalueaccessor",{"_index":71,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["convert",{"_index":399,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["copies",{"_index":553,"title":{},"body":{"license.html":{}}}],["copy",{"_index":536,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":525,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":439,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":470,"title":{},"body":{"index.html":{}}}],["cubic",{"_index":236,"title":{},"body":{"classes/InternalGroup.html":{}}}],["custom",{"_index":390,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["d6d6d678",{"_index":174,"title":{},"body":{"classes/InternalGroup.html":{}}}],["damages",{"_index":581,"title":{},"body":{"license.html":{}}}],["date",{"_index":375,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["dbdbdb",{"_index":211,"title":{},"body":{"classes/InternalGroup.html":{}}}],["deal",{"_index":540,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":589,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":349,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["declare",{"_index":503,"title":{},"body":{"index.html":{}}}],["default",{"_index":138,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaulttemplates",{"_index":275,"title":{},"body":{"classes/InternalGroup.html":{}}}],["defined",{"_index":39,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["demo",{"_index":505,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":347,"title":{"dependencies.html":{}},"body":{"modules/PropertyGridModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["describe",{"_index":510,"title":{},"body":{"index.html":{}}}],["description",{"_index":370,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["destroycomponent",{"_index":26,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["directive",{"_index":0,"title":{"directives/DynamicComponentLoadDirective.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":2,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["display",{"_index":221,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["distribute",{"_index":549,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":440,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dotted",{"_index":191,"title":{},"body":{"classes/InternalGroup.html":{}}}],["dropdown",{"_index":516,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":77,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{}}}],["dynamiccomponent",{"_index":306,"title":{},"body":{"classes/InternalGroup.html":{}}}],["dynamiccomponentload",{"_index":17,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["dynamiccomponentloaddirective",{"_index":1,"title":{"directives/DynamicComponentLoadDirective.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"overview.html":{}}}],["e",{"_index":105,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["each",{"_index":511,"title":{},"body":{"index.html":{}}}],["edit",{"_index":468,"title":{},"body":{"index.html":{}}}],["editor",{"_index":483,"title":{},"body":{"index.html":{}}}],["eg",{"_index":400,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["el.nativeelement.parentelement",{"_index":283,"title":{},"body":{"classes/InternalGroup.html":{}}}],["el.nativeelement.parentelement.classlist",{"_index":284,"title":{},"body":{"classes/InternalGroup.html":{}}}],["el.nativeelement.parentelement.classlist.contains('internal",{"_index":285,"title":{},"body":{"classes/InternalGroup.html":{}}}],["element",{"_index":383,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["elementref",{"_index":150,"title":{},"body":{"classes/InternalGroup.html":{}}}],["endregion",{"_index":414,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["entry",{"_index":46,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["enumerable",{"_index":424,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":107,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["event",{"_index":576,"title":{},"body":{"license.html":{}}}],["eventemitter",{"_index":127,"title":{},"body":{"interfaces/IDynamicComponent.html":{}}}],["example",{"_index":507,"title":{},"body":{"index.html":{}}}],["exampleeditoroptions",{"_index":481,"title":{},"body":{"index.html":{}}}],["excellent",{"_index":463,"title":{},"body":{"index.html":{}}}],["export",{"_index":78,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["exports",{"_index":352,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["express",{"_index":567,"title":{},"body":{"license.html":{}}}],["extends",{"_index":119,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["f5f5f5",{"_index":199,"title":{},"body":{"classes/InternalGroup.html":{}}}],["false",{"_index":252,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["fff",{"_index":213,"title":{},"body":{"classes/InternalGroup.html":{}}}],["file",{"_index":5,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["files",{"_index":539,"title":{},"body":{"license.html":{}}}],["fitness",{"_index":572,"title":{},"body":{"license.html":{}}}],["flex",{"_index":222,"title":{},"body":{"classes/InternalGroup.html":{}}}],["flow",{"_index":223,"title":{},"body":{"classes/InternalGroup.html":{}}}],["following",{"_index":513,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":182,"title":{},"body":{"classes/InternalGroup.html":{},"index.html":{}}}],["fontcolor",{"_index":490,"title":{},"body":{"index.html":{}}}],["fontsize",{"_index":489,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":366,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["found",{"_index":166,"title":{},"body":{"classes/InternalGroup.html":{}}}],["framework",{"_index":497,"title":{},"body":{"index.html":{}}}],["free",{"_index":532,"title":{},"body":{"license.html":{}}}],["function",{"_index":62,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyItemMeta.html":{}}}],["furnished",{"_index":556,"title":{},"body":{"license.html":{}}}],["generate",{"_index":379,"title":{},"body":{"interfaces/PropertyItemMeta.html":{}}}],["getcomponenttype",{"_index":66,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["gettemplate(type",{"_index":300,"title":{},"body":{"classes/InternalGroup.html":{}}}],["getting",{"_index":455,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getvalue",{"_index":430,"title":{},"body":{"classes/PropertyValue.html":{}}}],["give",{"_index":466,"title":{},"body":{"index.html":{}}}],["granted",{"_index":531,"title":{},"body":{"license.html":{}}}],["grid",{"_index":162,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["grid.component",{"_index":364,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["grid.component.ts",{"_index":131,"title":{},"body":{"classes/InternalGroup.html":{},"coverage.html":{}}}],["grid.component.ts:399",{"_index":139,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:400",{"_index":144,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:402",{"_index":142,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:404",{"_index":145,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:406",{"_index":137,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:408",{"_index":140,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.module.ts",{"_index":359,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["grid/src/lib/dynamic",{"_index":8,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["grid/src/lib/property",{"_index":130,"title":{},"body":{"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":143,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["group.items.push(v",{"_index":329,"title":{},"body":{"classes/InternalGroup.html":{}}}],["group.name",{"_index":163,"title":{},"body":{"classes/InternalGroup.html":{}}}],["groupcollapse",{"_index":264,"title":{},"body":{"classes/InternalGroup.html":{}}}],["groups",{"_index":278,"title":{},"body":{"classes/InternalGroup.html":{}}}],["groups.filter(o",{"_index":336,"title":{},"body":{"classes/InternalGroup.html":{}}}],["groups.find(o",{"_index":324,"title":{},"body":{"classes/InternalGroup.html":{}}}],["groups.foreach(o",{"_index":330,"title":{},"body":{"classes/InternalGroup.html":{}}}],["groups.push(group",{"_index":328,"title":{},"body":{"classes/InternalGroup.html":{}}}],["header",{"_index":198,"title":{},"body":{"classes/InternalGroup.html":{}}}],["height",{"_index":230,"title":{},"body":{"classes/InternalGroup.html":{}}}],["help",{"_index":402,"title":{},"body":{"interfaces/PropertyItemMeta.html":{}}}],["hereby",{"_index":530,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":232,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["hidden/visible",{"_index":388,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["hint",{"_index":382,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["holders",{"_index":578,"title":{},"body":{"license.html":{}}}],["html",{"_index":479,"title":{},"body":{"index.html":{}}}],["icustomdynamiccomponent",{"_index":392,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["identifier",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["idynamiccomponent",{"_index":76,"title":{"interfaces/IDynamicComponent.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["implement",{"_index":391,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["implements",{"_index":11,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyValueAccess.html":{}}}],["implied",{"_index":568,"title":{},"body":{"license.html":{}}}],["import",{"_index":68,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["imports",{"_index":367,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["include",{"_index":495,"title":{},"body":{"index.html":{}}}],["included",{"_index":561,"title":{},"body":{"license.html":{}}}],["including",{"_index":543,"title":{},"body":{"license.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["init",{"_index":389,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["initcomponent",{"_index":27,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["initcomponent(component",{"_index":53,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["initmeta",{"_index":314,"title":{},"body":{"classes/InternalGroup.html":{}}}],["initstate",{"_index":371,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["input",{"_index":69,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["input('dynamiccomponentload",{"_index":82,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["inputs",{"_index":31,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["instanceof",{"_index":309,"title":{},"body":{"classes/InternalGroup.html":{}}}],["interface",{"_index":117,"title":{"interfaces/IDynamicComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":123,"title":{},"body":{"interfaces/IDynamicComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"overview.html":{}}}],["internal",{"_index":194,"title":{},"body":{"classes/InternalGroup.html":{}}}],["internalgroup",{"_index":128,"title":{"classes/InternalGroup.html":{}},"body":{"classes/InternalGroup.html":{},"coverage.html":{}}}],["internalgroup(undefined",{"_index":317,"title":{},"body":{"classes/InternalGroup.html":{}}}],["internalgroup(v.group",{"_index":327,"title":{},"body":{"classes/InternalGroup.html":{}}}],["isinternal",{"_index":256,"title":{},"body":{"classes/InternalGroup.html":{}}}],["it's",{"_index":509,"title":{},"body":{"index.html":{}}}],["item",{"_index":73,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["item.name",{"_index":164,"title":{},"body":{"classes/InternalGroup.html":{}}}],["item.template",{"_index":291,"title":{},"body":{"classes/InternalGroup.html":{}}}],["item.type",{"_index":165,"title":{},"body":{"classes/InternalGroup.html":{}}}],["itemmeta",{"_index":403,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.initstate",{"_index":410,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.order",{"_index":411,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.showhelp",{"_index":413,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.type",{"_index":408,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.valueconvert",{"_index":409,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["items",{"_index":132,"title":{},"body":{"classes/InternalGroup.html":{}}}],["jquery",{"_index":492,"title":{},"body":{"index.html":{}}}],["key",{"_index":258,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":566,"title":{},"body":{"license.html":{}}}],["label",{"_index":189,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["labelwidth",{"_index":261,"title":{},"body":{"classes/InternalGroup.html":{}}}],["left",{"_index":200,"title":{},"body":{"classes/InternalGroup.html":{}}}],["legend",{"_index":348,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["liability",{"_index":582,"title":{},"body":{"license.html":{}}}],["liable",{"_index":579,"title":{},"body":{"license.html":{}}}],["license",{"_index":523,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":544,"title":{},"body":{"license.html":{}}}],["limited",{"_index":569,"title":{},"body":{"license.html":{}}}],["link",{"_index":297,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{}}}],["list",{"_index":517,"title":{},"body":{"index.html":{}}}],["live",{"_index":504,"title":{},"body":{"index.html":{}}}],["load.directive",{"_index":363,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["load.directive.ts",{"_index":10,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["load.directive.ts:18",{"_index":63,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:19",{"_index":64,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:20",{"_index":65,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:21",{"_index":67,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:25",{"_index":48,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:27",{"_index":40,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:33",{"_index":58,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:39",{"_index":61,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:43",{"_index":60,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:47",{"_index":49,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:64",{"_index":55,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:78",{"_index":52,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["margin",{"_index":195,"title":{},"body":{"classes/InternalGroup.html":{}}}],["matching",{"_index":121,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":571,"title":{},"body":{"license.html":{}}}],["merge",{"_index":547,"title":{},"body":{"license.html":{}}}],["meta",{"_index":74,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["meta(v",{"_index":267,"title":{},"body":{"classes/InternalGroup.html":{}}}],["meta({name",{"_index":482,"title":{},"body":{"index.html":{}}}],["meta.hasownproperty(i",{"_index":318,"title":{},"body":{"classes/InternalGroup.html":{}}}],["meta.ts",{"_index":368,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meta.type",{"_index":308,"title":{},"body":{"classes/InternalGroup.html":{}}}],["meta[i",{"_index":320,"title":{},"body":{"classes/InternalGroup.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"index.html":{}}}],["methods",{"_index":24,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{}}}],["miscellaneous",{"_index":596,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":524,"title":{},"body":{"license.html":{}}}],["modernizr",{"_index":494,"title":{},"body":{"index.html":{}}}],["modify",{"_index":546,"title":{},"body":{"license.html":{}}}],["module",{"_index":344,"title":{"modules/PropertyGridModule.html":{}},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["modules",{"_index":346,"title":{"modules.html":{}},"body":{"modules/PropertyGridModule.html":{},"modules.html":{}}}],["name",{"_index":43,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name/label",{"_index":396,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["need",{"_index":475,"title":{},"body":{"index.html":{}}}],["new",{"_index":89,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["ngaftercontentinit",{"_index":293,"title":{},"body":{"classes/InternalGroup.html":{}}}],["ngafterviewinit",{"_index":286,"title":{},"body":{"classes/InternalGroup.html":{}}}],["ngmodule",{"_index":362,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["ngonchanges",{"_index":28,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["ngonchanges(changes",{"_index":56,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ngondestroy",{"_index":29,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ngoninit",{"_index":30,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ngx",{"_index":160,"title":{},"body":{"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngxpropertygrid",{"_index":457,"title":{},"body":{"index.html":{}}}],["ngxtemplate",{"_index":159,"title":{},"body":{"classes/InternalGroup.html":{}}}],["ngxtemplatemodule",{"_index":365,"title":{},"body":{"modules/PropertyGridModule.html":{},"index.html":{}}}],["none",{"_index":499,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":575,"title":{},"body":{"license.html":{}}}],["notice",{"_index":559,"title":{},"body":{"license.html":{}}}],["number",{"_index":260,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["number.max_value",{"_index":412,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["o",{"_index":428,"title":{},"body":{"classes/PropertyValue.html":{}}}],["o.items.length",{"_index":337,"title":{},"body":{"classes/InternalGroup.html":{}}}],["o.items.sort((a",{"_index":331,"title":{},"body":{"classes/InternalGroup.html":{}}}],["o.name",{"_index":325,"title":{},"body":{"classes/InternalGroup.html":{}}}],["object",{"_index":315,"title":{},"body":{"classes/InternalGroup.html":{},"index.html":{}}}],["object.assign(component.instance",{"_index":115,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["object.create(object.getprototypeof(__meta__",{"_index":419,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["object.defineproperty(__meta__",{"_index":423,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["object.defineproperty(submeta",{"_index":421,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["object.getownpropertydescriptor(__meta__",{"_index":422,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["object.getownpropertynames(__meta__).foreach(name",{"_index":420,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":535,"title":{},"body":{"license.html":{}}}],["omitted",{"_index":387,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["onchanges",{"_index":14,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ondestroy",{"_index":13,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["online",{"_index":472,"title":{},"body":{"index.html":{}}}],["openlink(link",{"_index":296,"title":{},"body":{"classes/InternalGroup.html":{}}}],["optional",{"_index":45,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["optionlabel(option",{"_index":168,"title":{},"body":{"classes/InternalGroup.html":{}}}],["optionlabel(v",{"_index":338,"title":{},"body":{"classes/InternalGroup.html":{}}}],["options",{"_index":32,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["options(v",{"_index":271,"title":{},"body":{"classes/InternalGroup.html":{}}}],["optionvalue(v",{"_index":341,"title":{},"body":{"classes/InternalGroup.html":{}}}],["order",{"_index":372,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["otherwise",{"_index":586,"title":{},"body":{"license.html":{}}}],["out",{"_index":358,"title":{},"body":{"modules/PropertyGridModule.html":{},"license.html":{},"overview.html":{}}}],["overflow",{"_index":231,"title":{},"body":{"classes/InternalGroup.html":{}}}],["overview",{"_index":594,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.value",{"_index":167,"title":{},"body":{"classes/InternalGroup.html":{}}}],["package",{"_index":451,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":177,"title":{},"body":{"classes/InternalGroup.html":{}}}],["page",{"_index":496,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":41,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["parseint",{"_index":401,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["particular",{"_index":573,"title":{},"body":{"license.html":{}}}],["peer",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["permission",{"_index":529,"title":{},"body":{"license.html":{}}}],["permit",{"_index":554,"title":{},"body":{"license.html":{}}}],["person",{"_index":534,"title":{},"body":{"license.html":{}}}],["persons",{"_index":555,"title":{},"body":{"license.html":{}}}],["play",{"_index":471,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":493,"title":{},"body":{"index.html":{}}}],["pojos",{"_index":462,"title":{},"body":{"index.html":{}}}],["portions",{"_index":563,"title":{},"body":{"license.html":{}}}],["private",{"_index":20,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyValueAccess.html":{}}}],["pro",{"_index":487,"title":{},"body":{"index.html":{}}}],["projects/.../property",{"_index":598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/ngx",{"_index":6,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":19,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["property",{"_index":7,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propertygridcomponent",{"_index":248,"title":{},"body":{"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"coverage.html":{},"overview.html":{}}}],["propertygridmodule",{"_index":345,"title":{"modules/PropertyGridModule.html":{}},"body":{"modules/PropertyGridModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["propertyitemmeta",{"_index":47,"title":{"interfaces/PropertyItemMeta.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propertykey",{"_index":374,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["propertyvalue",{"_index":23,"title":{"classes/PropertyValue.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["propertyvalue(changes.options.currentvalue",{"_index":90,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["propertyvalue(meta",{"_index":311,"title":{},"body":{"classes/InternalGroup.html":{}}}],["propertyvalue(this.options",{"_index":312,"title":{},"body":{"classes/InternalGroup.html":{}}}],["propertyvalueaccess",{"_index":118,"title":{"interfaces/PropertyValueAccess.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["proprty",{"_index":512,"title":{},"body":{"index.html":{}}}],["provided",{"_index":564,"title":{},"body":{"license.html":{}}}],["providers",{"_index":351,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["public",{"_index":83,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["publish",{"_index":548,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":574,"title":{},"body":{"license.html":{}}}],["querylist",{"_index":151,"title":{},"body":{"classes/InternalGroup.html":{}}}],["read",{"_index":522,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":21,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{}}}],["region",{"_index":405,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":357,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["restriction",{"_index":542,"title":{},"body":{"license.html":{}}}],["result",{"_index":120,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":122,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":80,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["returns",{"_index":50,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["rgba(0",{"_index":216,"title":{},"body":{"classes/InternalGroup.html":{}}}],["rgba(10",{"_index":204,"title":{},"body":{"classes/InternalGroup.html":{}}}],["right",{"_index":209,"title":{},"body":{"classes/InternalGroup.html":{}}}],["rights",{"_index":545,"title":{},"body":{"license.html":{}}}],["row",{"_index":224,"title":{},"body":{"classes/InternalGroup.html":{}}}],["seen",{"_index":506,"title":{},"body":{"index.html":{}}}],["selector",{"_index":16,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyValueAccess.html":{}}}],["sell",{"_index":552,"title":{},"body":{"license.html":{}}}],["set",{"_index":266,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"miscellaneous/variables.html":{}}}],["settings",{"_index":464,"title":{},"body":{"index.html":{}}}],["setvalue(val",{"_index":432,"title":{},"body":{"classes/PropertyValue.html":{}}}],["shadow",{"_index":202,"title":{},"body":{"classes/InternalGroup.html":{}}}],["shall",{"_index":560,"title":{},"body":{"license.html":{}}}],["showhelp",{"_index":265,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{}}}],["simple",{"_index":459,"title":{},"body":{"index.html":{}}}],["simplechanges",{"_index":57,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["simpletexteditorcomponent",{"_index":485,"title":{},"body":{"index.html":{}}}],["size",{"_index":488,"title":{},"body":{"index.html":{}}}],["small",{"_index":458,"title":{},"body":{"index.html":{}}}],["software",{"_index":537,"title":{},"body":{"license.html":{}}}],["solid",{"_index":171,"title":{},"body":{"classes/InternalGroup.html":{}}}],["source",{"_index":4,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["spacing",{"_index":176,"title":{},"body":{"classes/InternalGroup.html":{}}}],["span",{"_index":384,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["started",{"_index":456,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":133,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["state('hidden",{"_index":229,"title":{},"body":{"classes/InternalGroup.html":{}}}],["state('in",{"_index":241,"title":{},"body":{"classes/InternalGroup.html":{}}}],["state('visible",{"_index":233,"title":{},"body":{"classes/InternalGroup.html":{}}}],["statements",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":136,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":155,"title":{},"body":{"classes/InternalGroup.html":{}}}],["style({transform",{"_index":242,"title":{},"body":{"classes/InternalGroup.html":{}}}],["styles",{"_index":169,"title":{},"body":{"classes/InternalGroup.html":{}}}],["subitems",{"_index":279,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["subitems.push(v",{"_index":323,"title":{},"body":{"classes/InternalGroup.html":{}}}],["subject",{"_index":557,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":550,"title":{},"body":{"license.html":{}}}],["submeta",{"_index":418,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["substantial",{"_index":562,"title":{},"body":{"license.html":{}}}],["support",{"_index":591,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":514,"title":{},"body":{"index.html":{}}}],["svg",{"_index":592,"title":{},"body":{"modules.html":{}}}],["table",{"_index":175,"title":{},"body":{"classes/InternalGroup.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":404,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["target.__meta__",{"_index":416,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["target.__proto__.__meta__",{"_index":417,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":161,"title":{},"body":{"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"dependencies.html":{},"index.html":{}}}],["templateloaded",{"_index":253,"title":{},"body":{"classes/InternalGroup.html":{}}}],["templatemap",{"_index":257,"title":{},"body":{"classes/InternalGroup.html":{}}}],["templatenotfound",{"_index":307,"title":{},"body":{"classes/InternalGroup.html":{}}}],["templateref",{"_index":152,"title":{},"body":{"classes/InternalGroup.html":{}}}],["templates",{"_index":277,"title":{},"body":{"classes/InternalGroup.html":{}}}],["text",{"_index":377,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["textarea",{"_index":398,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["textbox",{"_index":515,"title":{},"body":{"index.html":{}}}],["that's",{"_index":469,"title":{},"body":{"index.html":{}}}],["this._controlvaluechangefn",{"_index":85,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this._meta",{"_index":268,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this._options",{"_index":272,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this._templateloaded",{"_index":255,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.buildcomponent",{"_index":92,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.cdr.detectchanges",{"_index":292,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.component",{"_index":103,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.component.destroy",{"_index":116,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(this.componenttype",{"_index":99,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.componenttype",{"_index":94,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.defaulttemplates",{"_index":287,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.defaulttemplates.foreach((item",{"_index":288,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.destroycomponent",{"_index":93,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.entry.clear",{"_index":96,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.entry.createcomponent(componentfactory",{"_index":100,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.gettemplate(meta.type",{"_index":310,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.groups",{"_index":335,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.initcomponent(component",{"_index":102,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.initmeta",{"_index":270,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.isinternal",{"_index":282,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.meta",{"_index":91,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.meta.options",{"_index":114,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.meta.type",{"_index":81,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.meta.valueconvert",{"_index":437,"title":{},"body":{"classes/PropertyValue.html":{}}}],["this.meta.valueconvert(val",{"_index":438,"title":{},"body":{"classes/PropertyValue.html":{}}}],["this.o[this.meta.key",{"_index":435,"title":{},"body":{"classes/PropertyValue.html":{}}}],["this.propertyvalue",{"_index":88,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.propertyvalue.value",{"_index":86,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.state",{"_index":313,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.subitems",{"_index":316,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.templatemap",{"_index":294,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.templatemap.default",{"_index":303,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.templatemap.hasownproperty(item.name",{"_index":289,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.templatemap[item.name",{"_index":290,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.templatemap[type",{"_index":302,"title":{},"body":{"classes/InternalGroup.html":{}}}],["this.templates.foreach((item",{"_index":295,"title":{},"body":{"classes/InternalGroup.html":{}}}],["toggle",{"_index":134,"title":{},"body":{"classes/InternalGroup.html":{}}}],["tooltip",{"_index":381,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["top",{"_index":186,"title":{},"body":{"classes/InternalGroup.html":{}}}],["tort",{"_index":585,"title":{},"body":{"license.html":{}}}],["transition",{"_index":156,"title":{},"body":{"classes/InternalGroup.html":{}}}],["transition('visible",{"_index":234,"title":{},"body":{"classes/InternalGroup.html":{}}}],["transition('void",{"_index":244,"title":{},"body":{"classes/InternalGroup.html":{}}}],["translatex",{"_index":245,"title":{},"body":{"classes/InternalGroup.html":{}}}],["translatex(0",{"_index":243,"title":{},"body":{"classes/InternalGroup.html":{}}}],["translatex(100",{"_index":247,"title":{},"body":{"classes/InternalGroup.html":{}}}],["trigger",{"_index":157,"title":{},"body":{"classes/InternalGroup.html":{}}}],["trigger('collapseanimation",{"_index":228,"title":{},"body":{"classes/InternalGroup.html":{}}}],["trigger('flyinout",{"_index":240,"title":{},"body":{"classes/InternalGroup.html":{}}}],["true",{"_index":141,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["true/false",{"_index":393,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["try",{"_index":95,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["tvalue",{"_index":126,"title":{},"body":{"interfaces/IDynamicComponent.html":{}}}],["type",{"_index":44,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{}}}],["typeof",{"_index":301,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":304,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["uneditable",{"_index":521,"title":{},"body":{"index.html":{}}}],["unset",{"_index":210,"title":{},"body":{"classes/InternalGroup.html":{}}}],["usage",{"_index":474,"title":{},"body":{"index.html":{}}}],["use",{"_index":484,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":380,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["useful",{"_index":397,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["user",{"_index":467,"title":{},"body":{"index.html":{}}}],["v",{"_index":269,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["v.__meta__",{"_index":273,"title":{},"body":{"classes/InternalGroup.html":{}}}],["v.group",{"_index":326,"title":{},"body":{"classes/InternalGroup.html":{}}}],["v.hidden",{"_index":321,"title":{},"body":{"classes/InternalGroup.html":{}}}],["v.label",{"_index":340,"title":{},"body":{"classes/InternalGroup.html":{}}}],["v.text",{"_index":339,"title":{},"body":{"classes/InternalGroup.html":{}}}],["v.type",{"_index":322,"title":{},"body":{"classes/InternalGroup.html":{}}}],["v.value",{"_index":342,"title":{},"body":{"classes/InternalGroup.html":{}}}],["val",{"_index":434,"title":{},"body":{"classes/PropertyValue.html":{}}}],["value",{"_index":75,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value(val",{"_index":436,"title":{},"body":{"classes/PropertyValue.html":{}}}],["value.ts",{"_index":425,"title":{},"body":{"classes/PropertyValue.html":{},"coverage.html":{}}}],["value.ts:10",{"_index":427,"title":{},"body":{"classes/PropertyValue.html":{}}}],["value.ts:11",{"_index":429,"title":{},"body":{"classes/PropertyValue.html":{}}}],["value.ts:4",{"_index":431,"title":{},"body":{"classes/PropertyValue.html":{}}}],["value.ts:8",{"_index":433,"title":{},"body":{"classes/PropertyValue.html":{}}}],["valuechange",{"_index":125,"title":{},"body":{"interfaces/IDynamicComponent.html":{}}}],["valueconvert",{"_index":373,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["variable",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":597,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["view/edit",{"_index":461,"title":{},"body":{"index.html":{}}}],["viewchildren",{"_index":153,"title":{},"body":{"classes/InternalGroup.html":{}}}],["viewchildren(ngxtemplate",{"_index":274,"title":{},"body":{"classes/InternalGroup.html":{}}}],["viewcontainerref",{"_index":37,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["visible",{"_index":259,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["void",{"_index":51,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["want",{"_index":465,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":570,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":565,"title":{},"body":{"license.html":{}}}],["webkit",{"_index":207,"title":{},"body":{"classes/InternalGroup.html":{}}}],["weight",{"_index":183,"title":{},"body":{"classes/InternalGroup.html":{}}}],["whether",{"_index":386,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{},"license.html":{}}}],["white",{"_index":181,"title":{},"body":{"classes/InternalGroup.html":{}}}],["width",{"_index":197,"title":{},"body":{"classes/InternalGroup.html":{}}}],["window.open(link",{"_index":298,"title":{},"body":{"classes/InternalGroup.html":{}}}],["without",{"_index":541,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":225,"title":{},"body":{"classes/InternalGroup.html":{}}}],["yish",{"_index":528,"title":{},"body":{"license.html":{}}}],["zoom",{"_index":356,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"directives/DynamicComponentLoadDirective.html":{"url":"directives/DynamicComponentLoadDirective.html","title":"directive - DynamicComponentLoadDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DynamicComponentLoadDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [dynamicComponentLoad]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _controlValueChangeFn\n                            \n                            \n                                    Private\n                                component\n                            \n                            \n                                    Private\n                                propertyValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildComponent\n                            \n                            \n                                    Private\n                                destroyComponent\n                            \n                            \n                                    Private\n                                initComponent\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dynamicComponentLoad\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    componentType\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entry: ViewContainerRef, componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entry\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dynamicComponentLoad\n                    \n                \n                \n                    \n                        Type :         PropertyItemMeta\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:27\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildComponent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            destroyComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroyComponent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initComponent(component: ComponentRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                ComponentRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _controlValueChangeFn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ComponentRef>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            propertyValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PropertyValue\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        componentType\n                    \n                \n\n                \n                    \n                        getcomponentType()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:21\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef, Directive,\n  Input, OnChanges, OnDestroy,\n  OnInit, SimpleChanges,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\nimport {PropertyItemMeta} from './property-item-meta';\nimport {PropertyValue} from './property-value';\nimport {IDynamicComponent} from './dynamic-component';\n\n@Directive({\n  selector: '[dynamicComponentLoad]',\n})\nexport class DynamicComponentLoadDirective implements OnInit, OnDestroy, OnChanges {\n  private readonly _controlValueChangeFn: (value: any) => void;\n  private component: ComponentRef>;\n  private propertyValue: PropertyValue;\n  private get componentType(): Type {\n    return this.meta.type as Type;\n  }\n\n  @Input('dynamicComponentLoad') private meta: PropertyItemMeta;\n  @Input()\n  public options: any;\n\n  constructor(private entry: ViewContainerRef, private componentFactoryResolver: ComponentFactoryResolver) {\n    this._controlValueChangeFn = (value: any) => this.propertyValue.value = value;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options) {\n      this.propertyValue = new PropertyValue(changes.options.currentValue, this.meta);\n    }\n  }\n\n  ngOnInit() {\n    this.buildComponent();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyComponent();\n  }\n\n  private buildComponent(): void {\n    if (!this.componentType) {\n      return;\n    }\n    try {\n      this.destroyComponent();\n      // this.entry.clear();\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\n      const component = this.entry.createComponent(componentFactory, 0);\n      this.initComponent(component);\n      this.component = component;\n    } catch (e) {\n      console.error('load component error.');\n      console.error(e);\n    }\n  }\n\n  private initComponent(component: ComponentRef) {\n    component.instance.value = this.propertyValue.value;\n    if (component.instance.registerOnChange) {\n      component.instance.registerOnChange(this._controlValueChangeFn);\n    }\n    if (component.instance.valueChange) {\n      component.instance.valueChange.subscribe(this._controlValueChangeFn);\n    }\n\n    if (this.meta.options) {\n      Object.assign(component.instance, this.meta.options);\n    }\n  }\n\n  private destroyComponent(): void {\n    if (this.component) {\n      this.component.destroy();\n    }\n  }\n}\n\ninterface PropertyValueAccess extends ControlValueAccessor, IDynamicComponent {\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDynamicComponent.html":{"url":"interfaces/IDynamicComponent.html","title":"interface - IDynamicComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDynamicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/dynamic-component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        valueChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     TValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueChange\n                                    \n                                \n                                \n                                    \n                                        valueChange:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {EventEmitter} from '@angular/core';\n\n\nexport interface IDynamicComponent {\n  value: TValue;\n  valueChange: EventEmitter;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InternalGroup.html":{"url":"classes/InternalGroup.html","title":"class - InternalGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InternalGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/property-grid.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                items\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                state\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:406\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PropertyItemMeta[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:399\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:408\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:402\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'group'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:400\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:404\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AfterContentInit, AfterViewInit, ChangeDetectorRef,\n  Component,\n  ContentChildren, ElementRef,\n  Input,\n  QueryList,\n  TemplateRef, Type, ViewChildren\n} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {NgxTemplate} from 'ngx-template';\nimport {PropertyItemMeta} from './property-item-meta';\nimport {PropertyValue} from './property-value';\n\n@Component({\n  selector: 'ngx-property-grid',\n  template: `\n    \n      \n        \n          \n          \n            \n              {{group.name}}\n            \n\n            \n              \n                \n                  {{item.name}}\n                  [?]\n                \n                \n                  \n                  \n                \n              \n              \n                \n              \n            \n          \n          \n        \n      \n\n      \n        \n          {{item.name}}\n        \n        \n        \n      \n    \n\n\n    \n      \n        \n          \n          \n        \n\n        \n        \n\n        \n          {{item.type}} template Not Found\n        \n      \n    \n\n\n    \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        {{p.value}}\n      \n\n      \n        \n      \n\n      \n        \n          \n            {{optionLabel(option)}}\n          \n        \n      \n    \n  `,\n  styles: [\n      `\n      .property-grid {\n        /*border: solid 1px #95B8E7;*/\n      }\n\n      .property-grid-border {\n        border: 1px solid #d6d6d678\n      }\n\n      .property-grid-table {\n        border-spacing: 0;\n        padding: 5px\n      }\n\n      .property-grid-group {\n        background-color: white;\n        font-weight: bold;\n        color: #616161;\n        padding-top: 8px;\n        padding-bottom: 5px;\n      }\n\n      .property-grid-label, .property-grid-control {\n        border: dotted 1px #ccc;\n        padding: 2px 5px;\n      }\n\n      .internal-property-grid {\n        margin-top: 12px;\n      }\n\n      .internal-property-grid .property-grid {\n        border-width: 0;\n      }\n\n      .internal-property-grid .property-grid-header {\n        margin-bottom: 5px;\n        background-color: #f5f5f5;\n        padding-bottom: 5px;\n        padding-top: 5px;\n        padding-left: 5px;\n        box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n        -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n        width: 100%;\n      }\n\n      .internal-property-grid .property-grid-header-margin {\n        margin-left: 5px;\n        margin-right: 5px;\n        width: unset;\n      }\n\n      .internal-property-grid .property-grid-table {\n        border-width: 0;\n        /*border-top: 1px solid #dbdbdb;*/\n      }\n\n      .card {\n        background-color: #fff;\n        box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n        display: flex;\n        flex-flow: row wrap;\n        /*margin: 5px 20px;*/\n        padding: 0;\n      }\n\n      .internal-property-grid ngx-property-grid .card {\n        background-color: unset;\n        box-shadow: unset;\n        display: unset;\n        flex-flow: unset;\n        /*margin: 5px 20px;*/\n        padding: unset;\n      }\n    `\n  ],\n  animations: [\n    trigger('collapseAnimation', [\n      state('hidden', style({\n        height: '0',\n        // overflow: 'hidden',\n      })),\n      state('visible', style({\n        height: '*'\n      })),\n      transition('visible  hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n    ]),\n    trigger('flyInOut', [\n      state('in', style({transform: 'translateX(0)'})),\n      transition('void => *', [\n        style({transform: 'translateX(-100%)'}),\n        animate(100)\n      ]),\n      transition('* => void', [\n        animate(100, style({transform: 'translateX(100%)'}))\n      ])\n    ])\n  ]\n})\nexport class PropertyGridComponent implements AfterContentInit, AfterViewInit {\n  private _options: any;\n  private _meta: any;\n  private _templateLoaded = false;\n  public get templateLoaded(): boolean {\n    return this._templateLoaded;\n  }\n\n  public readonly isInternal: boolean = false;\n\n  @Input()\n  public templateMap: { [key: string]: TemplateRef };\n\n  @Input()\n  public state: 'hidden' | 'visible' = 'visible';\n\n  @Input()\n  width: string | number;\n\n\n  @Input()\n  labelWidth: string | number = '120px';\n\n  @Input()\n  cardStyle = true;\n\n  @Input()\n  groupCollapse = false;\n\n  @Input()\n  showHelp = true;\n\n  @Input()\n  public set meta(v: any) {\n    this._meta = v;\n    this.initMeta();\n  }\n\n  public get meta(): any {\n    return this._meta;\n  }\n\n  @Input()\n  public set options(v: any) {\n    this._options = v;\n    if (v.__meta__) {\n      this.meta = v.__meta__;\n    }\n  }\n\n  public get options(): any {\n    return this._options;\n  }\n\n  @ViewChildren(NgxTemplate) defaultTemplates: QueryList;\n  @ContentChildren(NgxTemplate) templates: QueryList;\n\n  public groups: InternalGroup[];\n  public subItems: PropertyItemMeta[];\n\n  constructor(el: ElementRef, private cdr: ChangeDetectorRef) {\n    this.isInternal = el.nativeElement.parentElement && el.nativeElement.parentElement.classList &&\n      el.nativeElement.parentElement.classList.contains('internal-property-grid');\n  }\n\n  ngAfterViewInit(): void {\n    if (this.isInternal) {\n      this._templateLoaded = true;\n    } else {\n      if (this.defaultTemplates) {\n        this.defaultTemplates.forEach((item) => {\n          if (!this.templateMap.hasOwnProperty(item.name)) {\n            this.templateMap[item.name] = item.template;\n          }\n        });\n        this._templateLoaded = true;\n        this.cdr.detectChanges();\n      }\n    }\n  }\n\n  ngAfterContentInit(): void {\n    if (!this.isInternal) {\n      if (!this.templateMap) {\n        this.templateMap = {};\n      }\n      this.templates.forEach((item) => {\n        this.templateMap[item.name] = item.template;\n      });\n    }\n  }\n\n  public openLink(link: string) {\n    if (link) {\n      window.open(link, '_blank');\n    }\n  }\n\n  public getTemplate(type: string): TemplateRef {\n    if (typeof type === 'string' && this.templateMap) {\n      return type ? this.templateMap[type] : this.templateMap.default;\n    } else {\n      return undefined;\n    }\n  }\n\n  public controlType(meta: PropertyItemMeta): 'template' | 'dynamicComponent' | 'templateNotFound' {\n    if (meta.type instanceof Type) {\n      return 'dynamicComponent';\n    }\n    if (this.getTemplate(meta.type)) {\n      return 'template';\n    }\n    return 'templateNotFound';\n  }\n\n  public propertyValue(meta: PropertyItemMeta): PropertyValue {\n    return new PropertyValue(this.options, meta);\n  }\n\n  public toggle(): void {\n    this.state = this.state === 'visible' ? 'hidden' : 'visible';\n  }\n\n  private initMeta(): void {\n    const meta: object = this.meta;\n    if (!meta) {\n      this.subItems = [];\n      return;\n    }\n\n    const groups: InternalGroup[] = [new InternalGroup(undefined)];\n    const subItems: PropertyItemMeta[] = [];\n    for (const i in meta) {\n      if (!meta.hasOwnProperty(i)) {\n        continue;\n      }\n      const v: PropertyItemMeta = meta[i];\n      if (v.hidden) {\n        continue;\n      }\n      if (v.type === 'subItems') {\n        subItems.push(v);\n        continue;\n      }\n\n      let group = groups.find(o => o.name === v.group);\n      if (!group) {\n        group = new InternalGroup(v.group);\n        groups.push(group);\n      }\n      group.items.push(v);\n    }\n    groups.forEach(o => o.items.sort((a, b) => a.order - b.order));\n\n    this.groups = groups.filter(o => o.items.length > 0);\n    this.subItems = subItems;\n  }\n\n  optionLabel(v: any): string {\n    if (typeof v === 'string') {\n      return v;\n    }\n    if (v.text) {\n      return v.text;\n    }\n    if (v.label) {\n      return v.label;\n    }\n    return v;\n  }\n\n  optionValue(v: any): any {\n    return v && v.value ? v.value : v;\n  }\n}\n\nexport class InternalGroup {\n  public readonly items: PropertyItemMeta[] = [];\n  public type = 'group';\n\n  public state = true;\n\n  public toggle(): void {\n    this.state = !this.state;\n  }\n\n  constructor(public name: string) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PropertyGridModule.html":{"url":"modules/PropertyGridModule.html","title":"module - PropertyGridModule","body":"\n                   \n\n\n\n\n    Modules\n    PropertyGridModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyGridModule\n\n\n\ncluster_PropertyGridModule_declarations\n\n\n\ncluster_PropertyGridModule_exports\n\n\n\n\nDynamicComponentLoadDirective\n\nDynamicComponentLoadDirective\n\n\n\nPropertyGridModule\n\nPropertyGridModule\n\nPropertyGridModule -->\n\nDynamicComponentLoadDirective->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent\n\nPropertyGridComponent\n\nPropertyGridModule -->\n\nPropertyGridComponent->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent \n\nPropertyGridComponent \n\nPropertyGridComponent  -->\n\nPropertyGridModule->PropertyGridComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/property-grid.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DynamicComponentLoadDirective\n                        \n                        \n                            PropertyGridComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PropertyGridComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {DynamicComponentLoadDirective} from './dynamic-component-load.directive';\nimport {PropertyGridComponent} from './property-grid.component';\nimport {NgxTemplateModule} from 'ngx-template';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, NgxTemplateModule\n  ],\n  declarations: [\n    PropertyGridComponent,\n    DynamicComponentLoadDirective\n  ],\n  exports: [\n    PropertyGridComponent\n  ]\n})\nexport class PropertyGridModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PropertyItemMeta.html":{"url":"interfaces/PropertyItemMeta.html","title":"interface - PropertyItemMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PropertyItemMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/property-item-meta.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        colSpan2\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        group\n                                \n                                \n                                            Optional\n                                        hidden\n                                \n                                \n                                            Optional\n                                        initState\n                                \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        link\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                            Optional\n                                        order\n                                \n                                \n                                            Optional\n                                        showHelp\n                                \n                                \n                                            Optional\n                                        type\n                                \n                                \n                                            Optional\n                                        valueConvert\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colSpan2\n                                    \n                                \n                                \n                                    \n                                        colSpan2:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initState\n                                    \n                                \n                                \n                                    \n                                        initState:     \"hidden\" | \"visible\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"hidden\" | \"visible\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     PropertyKey\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PropertyKey\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showHelp\n                                    \n                                \n                                \n                                    \n                                        showHelp:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         \"color\" | \"date\" | \"checkbox\" | \"text\" | \"options\" | string | Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         \"color\" | \"date\" | \"checkbox\" | \"text\" | \"options\" | string | Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueConvert\n                                    \n                                \n                                \n                                    \n                                        valueConvert:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Type} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\nimport {IDynamicComponent} from './dynamic-component';\n\nexport interface PropertyItemMeta {\n    readonly key?: PropertyKey; // auto generate.\n    name: string; // The display name of the property in the grid\n    description?: string; // A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\n    order?: number; // The display order.\n    group?: string; //  The group this property belongs to\n    hidden?: boolean; // Whether this property should be hidden in the grid, default is false (can be omitted).\n    initState?: 'hidden' | 'visible'; // - hidden/visible. If hidden then subItems should init by hidden state. default is hidden\n    type?: 'color' | 'date' | 'checkbox' | 'text' | 'options' | string | Type>;\n    // options: boolean number options label color,\n    // or an custom component should be implement ControlValueAccessor or ICustomDynamicComponent\n    options?: any; // options for type\n    colSpan2?: boolean; //  - true/false. If true then property input will span both columns and will have no name/label\n    // (useful for textArea custom type)\n    valueConvert?: (value: any) => any; // convert the value, eg. parseInt\n    showHelp?: boolean; // default True.\n    link?: string; // help link\n}\n\n\nexport const meta = (itemMeta: PropertyItemMeta) =>\n    (target: any, key: PropertyKey) => {\n\n        // region [adjust]\n        (itemMeta as any).key = key;\n        if (typeof itemMeta.type === 'string') {\n\n        } else {\n\n        }\n        if (!itemMeta.type) {\n            itemMeta.type = 'text';\n        }\n\n        if (itemMeta.type === 'number' && !itemMeta.valueConvert) {\n            itemMeta.valueConvert = parseInt;\n        }\n\n        if (!itemMeta.initState) {\n            itemMeta.initState = 'hidden';\n        }\n        if (!itemMeta.order) {\n            itemMeta.order = Number.MAX_VALUE;\n        }\n        if (itemMeta.showHelp === undefined) {\n            itemMeta.showHelp = true;\n        }\n        // endregion\n\n        let __meta__ = target.__meta__;\n        if (!__meta__) {\n            __meta__ = {};\n            target.__meta__ = __meta__;\n        } else if (target.__proto__.__meta__ === __meta__) {\n            const subMeta = Object.create(Object.getPrototypeOf(__meta__));\n            Object.getOwnPropertyNames(__meta__).forEach(name => {\n                Object.defineProperty(subMeta, name, Object.getOwnPropertyDescriptor(__meta__, name));\n            });\n            __meta__ = subMeta;\n            target.__meta__ = __meta__;\n        }\n\n        Object.defineProperty(__meta__, key, {\n            enumerable: true,\n            get: () => itemMeta,\n            set: (v) => itemMeta = v\n        });\n    };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PropertyValue.html":{"url":"classes/PropertyValue.html","title":"class - PropertyValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PropertyValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/property-value.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(o: any, meta: PropertyItemMeta)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-property-grid/src/lib/property-value.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        o\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        PropertyItemMeta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            meta\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PropertyItemMeta\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-value.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-property-grid/src/lib/property-value.ts:4\n                                \n                            \n\n                \n                    \n                        setvalue(val: any)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-property-grid/src/lib/property-value.ts:8\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {PropertyItemMeta} from './property-item-meta';\n\nexport class PropertyValue {\n  public get value(): any {\n    return this.o[this.meta.key];\n  }\n\n  public set value(val: any) {\n    this.o[this.meta.key] = this.meta.valueConvert ? this.meta.valueConvert(val) : val;\n  }\n  constructor(private o: any, public meta: PropertyItemMeta) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PropertyValueAccess.html":{"url":"interfaces/PropertyValueAccess.html","title":"interface - PropertyValueAccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PropertyValueAccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ControlValueAccessor\n            \n\n\n\n\n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef, Directive,\n  Input, OnChanges, OnDestroy,\n  OnInit, SimpleChanges,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\nimport {PropertyItemMeta} from './property-item-meta';\nimport {PropertyValue} from './property-value';\nimport {IDynamicComponent} from './dynamic-component';\n\n@Directive({\n  selector: '[dynamicComponentLoad]',\n})\nexport class DynamicComponentLoadDirective implements OnInit, OnDestroy, OnChanges {\n  private readonly _controlValueChangeFn: (value: any) => void;\n  private component: ComponentRef>;\n  private propertyValue: PropertyValue;\n  private get componentType(): Type {\n    return this.meta.type as Type;\n  }\n\n  @Input('dynamicComponentLoad') private meta: PropertyItemMeta;\n  @Input()\n  public options: any;\n\n  constructor(private entry: ViewContainerRef, private componentFactoryResolver: ComponentFactoryResolver) {\n    this._controlValueChangeFn = (value: any) => this.propertyValue.value = value;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options) {\n      this.propertyValue = new PropertyValue(changes.options.currentValue, this.meta);\n    }\n  }\n\n  ngOnInit() {\n    this.buildComponent();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyComponent();\n  }\n\n  private buildComponent(): void {\n    if (!this.componentType) {\n      return;\n    }\n    try {\n      this.destroyComponent();\n      // this.entry.clear();\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\n      const component = this.entry.createComponent(componentFactory, 0);\n      this.initComponent(component);\n      this.component = component;\n    } catch (e) {\n      console.error('load component error.');\n      console.error(e);\n    }\n  }\n\n  private initComponent(component: ComponentRef) {\n    component.instance.value = this.propertyValue.value;\n    if (component.instance.registerOnChange) {\n      component.instance.registerOnChange(this._controlValueChangeFn);\n    }\n    if (component.instance.valueChange) {\n      component.instance.valueChange.subscribe(this._controlValueChangeFn);\n    }\n\n    if (this.meta.options) {\n      Object.assign(component.instance, this.meta.options);\n    }\n  }\n\n  private destroyComponent(): void {\n    if (this.component) {\n      this.component.destroy();\n    }\n  }\n}\n\ninterface PropertyValueAccess extends ControlValueAccessor, IDynamicComponent {\n}\n\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts\n            \n            directive\n            DynamicComponentLoadDirective\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts\n            \n            interface\n            PropertyValueAccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/dynamic-component.ts\n            \n            interface\n            IDynamicComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-grid.component.ts\n            \n            component\n            PropertyGridComponent\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-grid.component.ts\n            \n            class\n            InternalGroup\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-item-meta.ts\n            \n            interface\n            PropertyItemMeta\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-item-meta.ts\n            \n            variable\n            meta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-value.ts\n            \n            class\n            PropertyValue\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            ngx-template : ^1.1.1\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^9.1.4\n        \n            @angular/core : ^9.1.4\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgxPropertyGrid\n\n\n\nA small and simple property grid in angular to view/edit POJOs, excellent if you have a \"settings\" object you want to give the user to edit (that's why I have created it). Play online.\nDependencies\n\nangular9+\nngx-template\n\nUsage\n\nImport\n import {PropertyGridModule} from 'ngx-property-grid';\n\n import {NgxTemplateModule} from 'ngx-template'; If you need animation,you should import BrowserAnimationsModule in your app.module.ts.\n\nGetting Started\n\nHtml\n\nBasic  \nTemplate  \n      \n          \n      \n      \n          \n      \n  \n\n\nObject options\n  export class ExampleEditorOptions {\n      @meta({name: 'Font', description: 'The font editor to use', type: SimpleTextEditorComponent, group: 'Editor', hidden: false})\n      font = 'Source Code Pro';\n\n      @meta({name: 'Font size', group: 'Editor', type: 'number', valueConvert: parseInt})\n      fontSize = 14;\n\n      @meta({name: 'Font color', group: 'Editor', type: 'color'})\n      fontColor = '#51f41c';\n\n      @meta({name: 'jQuery', group: 'Plugins', type: 'checkbox'})\n      jQuery = true;\n\n      @meta({name: 'modernizr', description: 'Whether or not to include modernizr on the page', group: 'Plugins', type: 'checkbox'})\n      modernizr = false;\n\n      @meta({\n          name: 'Framework',\n          description: 'Whether to include any additional framework',\n          type: 'options',\n          options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]\n      })\n      framework = 'None';\n  }\n\n\nThe metadata options declare\n\n\n export interface PropertyItemMeta {\n    name: string; // The display name of the property in the grid\n    description?: string; // A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\n    order?: number; // The display order.\n    group?: string; //  The group this property belongs to\n    hidden?: boolean; // Whether this property should be hidden in the grid, default is false (can be omitted).\n    initState?: 'hidden' | 'visible'; // - hidden/visible. If hidden then subItems should init by hidden state. default is hidden\n    type?: 'color' | 'date' | 'checkbox' | 'text' | 'options' | string | Type>;\n    // options: boolean number options label color,\n    // or an custom component should be implement ControlValueAccessor or ICustomDynamicComponent\n    options?: any; // options for type\n    colSpan2?: boolean; //  - true/false. If true then property input will span both columns and will have no name/label\n    // (useful for textarea custom type)\n    valueConvert?: (value: any) => any; // convert the value, eg. parseInt\n}\nThe result would be (live demo):\n\n\nThe metadata object\nAs seen from the example above the metadata object can be used (it's optional) in order to describe the object properties.\nEach proprty in the metadata object could have the following:\n\nname - The display name of the property in the grid \ndescription - A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\nhidden - Whether this property should be hidden in the grid, default is false (can be omitted).\ngroup - The group this property belongs to\ntype - The type of the property, supported are:\nboolean or checkbox - A checkbox would be used\nnumber -  simple textbox\ncolor - simple textbox\noptions - A dropdown list would be used in case the metadata contains the options array property\nlabel - A label will be used, useful for uneditable / read-only properties\n\n\ncolspan2 - true/false. If true then property input will span both columns and will have no name/label (useful for textarea custom type)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 YISH\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        PropertyGridModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyGridModule\n\n\n\ncluster_PropertyGridModule_declarations\n\n\n\ncluster_PropertyGridModule_exports\n\n\n\n\nDynamicComponentLoadDirective\n\nDynamicComponentLoadDirective\n\n\n\nPropertyGridModule\n\nPropertyGridModule\n\nPropertyGridModule -->\n\nDynamicComponentLoadDirective->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent\n\nPropertyGridComponent\n\nPropertyGridModule -->\n\nPropertyGridComponent->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent \n\nPropertyGridComponent \n\nPropertyGridComponent  -->\n\nPropertyGridModule->PropertyGridComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            meta   (projects/.../property-item-meta.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-property-grid/src/lib/property-item-meta.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            meta\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (itemMeta: PropertyItemMeta) =>\n    (target: any, key: PropertyKey) => {\n\n        // region [adjust]\n        (itemMeta as any).key = key;\n        if (typeof itemMeta.type === 'string') {\n\n        } else {\n\n        }\n        if (!itemMeta.type) {\n            itemMeta.type = 'text';\n        }\n\n        if (itemMeta.type === 'number' && !itemMeta.valueConvert) {\n            itemMeta.valueConvert = parseInt;\n        }\n\n        if (!itemMeta.initState) {\n            itemMeta.initState = 'hidden';\n        }\n        if (!itemMeta.order) {\n            itemMeta.order = Number.MAX_VALUE;\n        }\n        if (itemMeta.showHelp === undefined) {\n            itemMeta.showHelp = true;\n        }\n        // endregion\n\n        let __meta__ = target.__meta__;\n        if (!__meta__) {\n            __meta__ = {};\n            target.__meta__ = __meta__;\n        } else if (target.__proto__.__meta__ === __meta__) {\n            const subMeta = Object.create(Object.getPrototypeOf(__meta__));\n            Object.getOwnPropertyNames(__meta__).forEach(name => {\n                Object.defineProperty(subMeta, name, Object.getOwnPropertyDescriptor(__meta__, name));\n            });\n            __meta__ = subMeta;\n            target.__meta__ = __meta__;\n        }\n\n        Object.defineProperty(__meta__, key, {\n            enumerable: true,\n            get: () => itemMeta,\n            set: (v) => itemMeta = v\n        });\n    }\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
