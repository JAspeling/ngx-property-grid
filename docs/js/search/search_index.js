var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/CustomComponent.html",[0,0.481,1,0.731]],["body/components/CustomComponent.html",[0,0.878,1,1.063,2,2.109,3,0.557,4,0.456,5,1.85,6,1.85,7,0.456,8,0.912,9,0.716,10,0.967,11,1.181,12,2.027,13,0.871,14,1.439,15,1.538,16,1.397,17,0.668,18,0.557,19,0.984,20,2.038,21,1.282,22,2.027,23,2.027,24,2.027,25,2.109,26,2.232,27,2.232,28,2.71,29,2.232,30,2.71,31,2.71,32,2.027,33,2.027,34,1.026,35,2.71,36,2.232,37,2.109,38,1.169,39,1.85,40,2.482,41,2.888,42,2.71,43,2.232,44,0.073,45,1.426,46,1.112,47,1.538,48,1.85,49,1.85,50,2.71,51,2.375,52,1.85,53,2.482,54,1.88,55,1.85,56,1.713,57,2.482,58,1.85,59,1.85,60,1.713,61,1.85,62,2.027,63,1.439,64,1.85,65,1.85,66,1.85,67,1.85,68,1.713,69,1.417,70,2.027,71,1.85,72,1.439,73,1.85,74,1.85,75,0.965,76,0.668,77,1.063,78,1.713,79,1.169,80,0.557,81,1.181,82,0.967,83,0.791,84,0.286,85,0.557,86,1.169,87,2.232,88,2.027,89,1.169,90,1.181,91,0.672,92,0.806,93,1.169,94,1.169,95,1.169,96,1.169,97,1.169,98,1.169,99,1.169,100,1.169,101,0.816,102,1.169,103,1.169,104,1.169,105,0.672,106,1.169,107,1.169,108,1.169,109,1.169,110,1.169,111,1.169,112,1.169,113,1.169,114,1.169,115,1.169,116,1.713,117,1.169,118,1.169,119,0.538,120,0.806,121,1.169,122,1.169,123,1.169,124,2.109,125,1.713,126,1.85,127,3.531,128,1.85,129,1.85,130,0.672,131,0.672,132,0.806,133,1.85,134,1.85,135,0.027,136,0.04,137,0.027]],["title/interfaces/ICustomDynamicComponent.html",[13,0.599,119,0.481]],["body/interfaces/ICustomDynamicComponent.html",[0,0.878,1,0.759,3,0.759,4,0.622,7,0.622,8,0.5,9,0.39,10,1.318,11,1.098,12,2.128,13,0.998,15,1.098,16,1.098,17,0.622,18,0.759,19,1.223,20,1.929,21,1.223,22,1.593,23,1.593,24,1.593,26,1.593,27,1.593,29,1.593,32,1.593,33,1.593,34,1.092,36,2.664,40,2.395,44,0.073,46,0.998,51,2.74,54,1.762,56,1.593,57,2.395,60,1.593,62,2.128,68,1.593,69,1.318,70,2.128,75,1.013,76,0.83,77,1.218,78,2.128,79,1.593,80,0.759,81,1.467,82,1.318,83,0.935,84,0.39,85,0.759,86,1.593,87,2.556,88,2.395,89,1.593,90,1.467,91,0.915,92,1.098,93,1.593,94,1.593,95,1.593,96,1.593,97,1.593,98,1.593,99,1.593,100,1.593,101,1.013,102,1.593,103,1.593,104,1.593,105,0.915,106,1.593,107,1.593,108,1.593,109,1.593,110,1.593,111,1.593,112,1.593,113,1.593,114,1.593,115,1.593,116,2.128,117,1.593,118,1.593,119,0.668,120,1.098,121,1.593,122,2.395,135,0.037,136,0.05,137,0.037,138,1.318]],["title/classes/InternalGroup.html",[84,0.376,139,1.269]],["body/classes/InternalGroup.html",[0,0.387,3,0.364,4,0.298,7,0.298,8,0.69,9,0.702,11,0.526,15,0.526,17,0.481,18,0.364,19,0.708,20,1.347,21,1.023,25,1.518,34,0.695,38,0.763,41,2.089,43,0.763,44,0.074,45,1.123,46,0.922,47,0.526,53,0.763,54,1.577,75,1.09,76,0.695,77,1.156,80,0.364,83,0.605,84,0.38,85,0.739,90,1.772,91,0.891,92,0.526,101,0.931,105,1.638,130,0.439,131,0.891,132,1.89,135,0.018,136,0.029,137,0.018,139,1.473,140,0.763,141,1.263,142,0.763,143,3.584,144,1.909,145,1.616,146,2.405,147,1.208,148,1.772,149,1.208,150,0.922,151,1.283,152,1.208,153,1.208,154,1.44,155,1.208,156,1.729,157,1.208,158,1.208,159,1.518,160,1.518,161,1.518,162,0.94,163,1.518,164,1.909,165,1.909,166,0.94,167,0.94,168,1.909,169,1.518,170,0.94,171,0.94,172,0.94,173,0.439,174,1.047,175,0.94,176,1.518,177,0.94,178,0.94,179,0.94,180,2.817,181,1.909,182,2.817,183,0.94,184,0.94,185,1.233,186,0.94,187,2.909,188,3.113,189,2.192,190,1.616,191,0.94,192,0.763,193,0.94,194,0.94,195,0.94,196,2.192,197,0.94,198,1.909,199,0.632,200,0.94,201,0.94,202,0.94,203,1.909,204,2.572,205,2.707,206,0.94,207,2.405,208,1.518,209,0.94,210,1.518,211,2.192,212,2.192,213,1.909,214,2.192,215,2.817,216,2.192,217,0.94,218,1.518,219,0.94,220,2.572,221,0.94,222,1.518,223,0.94,224,0.94,225,0.94,226,1.909,227,0.763,228,0.94,229,0.94,230,0.763,231,1.02,232,1.909,233,1.518,234,0.94,235,0.94,236,1.518,237,0.94,238,0.94,239,0.94,240,1.518,241,0.94,242,1.227,243,0.94,244,0.94,245,0.94,246,0.94,247,0.94,248,0.94,249,0.763,250,0.94,251,0.94,252,1.909,253,0.94,254,0.94,255,0.94,256,1.518,257,0.94,258,0.94,259,0.94,260,0.94,261,1.283,262,0.94,263,1.02,264,1.909,265,0.94,266,0.94,267,0.632,268,2.192,269,0.85,270,0.94,271,0.94,272,0.94,273,0.94,274,0.763,275,0.94,276,1.518,277,0.94,278,0.94,279,1.518,280,1.518,281,1.518,282,0.632,283,0.94,284,0.94,285,0.94,286,0.94,287,1.518,288,1.473,289,0.94,290,0.94,291,1.909,292,0.94,293,0.94,294,0.94,295,0.94,296,0.94,297,0.94,298,0.94,299,1.518,300,1.518,301,0.94,302,0.94,303,1.909,304,0.94,305,0.94,306,0.763,307,0.94,308,0.94,309,0.94,310,1.02,311,0.94,312,0.94,313,0.632,314,0.94,315,0.85,316,0.94,317,2.192,318,0.94,319,1.909,320,0.94,321,0.94,322,0.94,323,0.94,324,0.763,325,1.518,326,0.94,327,0.94,328,1.909,329,0.94,330,0.94,331,0.94,332,0.94,333,0.94,334,0.94,335,0.94,336,0.94,337,0.94,338,0.94,339,0.94,340,0.94,341,0.94,342,0.94,343,0.94,344,0.94,345,0.94,346,0.94,347,0.94,348,1.518,349,1.518,350,0.94,351,1.518,352,1.518,353,0.94,354,0.94,355,0.94,356,0.94,357,0.94]],["title/modules/PropertyGridModule.html",[358,1.534,359,1.057]],["body/modules/PropertyGridModule.html",[1,1.376,3,0.924,4,0.757,7,0.757,8,0.609,9,0.675,13,0.943,17,0.757,44,0.071,76,1.106,80,0.924,83,1.075,84,0.476,123,1.94,130,1.752,131,1.115,135,0.045,136,0.056,137,0.045,141,1.115,150,0.757,173,1.115,174,1.151,315,1.338,358,1.94,359,2.059,360,1.94,361,1.338,362,3.24,363,2.389,364,2.389,365,3.24,366,2.389,367,2.389,368,2.389,369,2.975,370,2.389,371,1.94,372,3.07,373,3.823,374,3.07,375,3.823,376,2.975,377,3.823,378,2.975,379,3.07]],["title/interfaces/PropertyItemMeta.html",[119,0.481,150,0.599]],["body/interfaces/PropertyItemMeta.html",[0,0.381,3,0.579,4,0.474,7,0.474,8,0.381,9,0.617,13,0.688,16,1.215,18,0.579,19,1.012,21,0.698,34,0.688,44,0.073,45,1.492,46,1.167,47,2.067,63,2.169,75,0.839,76,0.809,77,0.579,80,0.579,81,1.215,82,1.006,83,0.688,85,0.579,101,0.839,119,0.381,125,1.215,132,1.215,135,0.028,136,0.041,137,0.028,138,1.006,141,0.698,145,1.006,148,2.032,150,0.809,151,1.715,154,1.567,156,1.996,173,0.698,174,0.579,190,1.88,199,1.006,231,1.458,242,1.868,261,1.006,263,2.277,267,2.147,269,1.664,274,2.273,282,2.277,288,1.006,306,2.413,310,1.006,313,1.006,376,1.496,380,1.215,381,2.799,382,2.971,383,2.799,384,2.971,385,2.799,386,2.799,387,2.552,388,2.552,389,2.413,390,1.923,391,1.923,392,1.496,393,1.496,394,1.496,395,2.169,396,1.496,397,1.215,398,1.496,399,1.496,400,1.496,401,1.496,402,1.496,403,1.496,404,1.496,405,1.496,406,1.496,407,1.496,408,1.496,409,1.496,410,1.762,411,1.923,412,2.799,413,1.496,414,1.496,415,1.496,416,1.496,417,2.799,418,2.169,419,2.169,420,2.169,421,1.496,422,2.169,423,1.496,424,3.196,425,2.552,426,1.496,427,2.169,428,1.496,429,1.496,430,1.496,431,1.496,432,1.496,433,1.496]],["title/classes/PropertyValue.html",[84,0.376,315,1.057]],["body/classes/PropertyValue.html",[0,0.396,3,0.374,4,0.306,7,0.306,8,0.622,9,0.699,11,0.541,15,0.541,17,0.492,18,0.374,19,0.724,20,1.366,21,0.724,34,0.617,37,1.552,38,0.785,41,1.809,43,1.261,44,0.074,45,0.908,46,0.826,47,0.869,53,0.785,54,1.594,72,0.966,75,1.101,76,0.706,77,1.166,80,0.374,83,0.617,84,0.387,85,0.752,90,1.785,91,0.908,92,0.541,101,0.944,105,1.645,130,0.451,131,0.908,132,1.899,135,0.018,136,0.029,137,0.018,139,1.307,140,0.785,141,1.139,142,0.785,143,3.494,144,0.966,145,1.307,146,1.552,148,1.645,150,0.976,154,1.366,156,1.639,159,1.552,160,1.552,161,1.552,162,0.966,163,1.552,164,1.945,165,1.945,166,0.966,167,0.966,168,1.945,169,1.552,170,0.966,171,0.966,172,0.966,173,0.451,174,1.191,175,0.966,176,1.552,177,0.966,178,0.966,179,0.966,180,2.846,181,1.945,182,2.846,183,0.966,184,0.966,185,1.261,186,0.966,187,2.937,188,3.137,189,2.227,190,1.639,191,0.966,192,0.785,193,0.966,194,0.966,195,0.966,196,2.227,197,0.966,198,1.945,199,0.649,200,0.966,201,0.966,202,0.966,203,1.945,204,2.605,205,2.738,206,0.966,207,2.439,208,1.552,209,0.966,210,1.552,211,2.227,212,2.227,213,1.945,214,2.227,215,2.846,216,2.227,217,0.966,218,1.552,219,0.966,220,2.605,221,0.966,222,1.552,223,0.966,224,0.966,225,0.966,226,1.945,227,0.785,228,0.966,229,0.966,230,0.785,231,1.043,232,1.945,233,1.552,234,0.966,235,0.966,236,1.552,237,0.966,238,0.966,239,0.966,240,1.552,241,0.966,242,1.247,243,0.966,244,0.966,245,0.966,246,0.966,247,0.966,248,0.966,249,0.785,250,0.966,251,0.966,252,1.945,253,0.966,254,0.966,255,0.966,256,1.552,257,0.966,258,0.966,259,0.966,260,0.966,261,1.307,262,0.966,263,1.043,264,1.945,265,0.966,266,0.966,267,0.649,268,2.227,269,0.869,270,0.966,271,0.966,272,0.966,273,0.966,274,0.785,275,0.966,276,1.552,277,0.966,278,0.966,279,1.552,280,1.552,281,1.552,282,0.649,283,0.966,284,0.966,285,0.966,286,0.966,287,1.552,288,1.497,289,0.966,290,0.966,291,1.945,292,0.966,293,0.966,294,0.966,295,0.966,296,0.966,297,0.966,298,0.966,299,1.552,300,1.552,301,0.966,302,0.966,303,1.945,304,0.966,305,0.966,306,0.785,307,0.966,308,0.966,309,0.966,310,1.043,311,0.966,312,0.966,313,0.649,314,0.966,315,1.089,316,0.966,317,2.227,318,0.966,319,2.227,320,0.966,321,0.966,322,0.966,323,0.966,324,0.785,325,1.552,326,0.966,327,0.966,328,1.945,329,0.966,330,0.966,331,0.966,332,0.966,333,0.966,334,0.966,335,0.966,336,0.966,337,0.966,338,0.966,339,0.966,340,0.966,341,0.966,342,0.966,343,0.966,344,0.966,345,0.966,346,0.966,347,0.966,348,1.552,349,1.552,350,0.966,351,1.552,352,1.552,353,0.966,354,0.966,355,0.966,356,1.552,357,0.966,434,1.242,435,1.242,436,1.242,437,1.242,438,1.242,439,1.242]],["title/interfaces/PropertyValueAccess.html",[119,0.481,120,1.057]],["body/interfaces/PropertyValueAccess.html",[0,0.884,1,0.778,3,0.778,4,0.637,7,0.637,8,0.513,9,0.4,10,1.351,11,1.126,12,2.163,13,0.947,15,1.126,16,1.126,17,0.637,20,1.941,21,1.243,22,1.633,23,1.633,24,1.633,26,1.633,27,1.633,29,1.633,32,1.633,33,1.633,34,1.008,36,2.163,40,2.425,44,0.073,46,0.844,51,2.582,54,1.78,56,1.633,57,2.425,60,1.633,62,2.163,68,1.633,69,1.351,70,2.163,75,1.03,76,0.844,77,1.23,78,2.163,79,1.633,80,0.778,81,1.672,82,1.351,83,0.947,84,0.4,85,0.778,86,1.633,87,2.582,88,2.425,89,1.633,90,1.491,91,0.938,92,1.126,93,1.633,94,1.633,95,1.633,96,1.633,97,1.633,98,1.633,99,1.633,100,1.633,101,1.03,102,1.633,103,1.633,104,1.633,105,0.938,106,1.633,107,1.633,108,1.633,109,1.633,110,1.633,111,1.633,112,1.633,113,1.633,114,1.633,115,1.633,116,2.163,117,1.633,118,1.633,119,0.679,120,1.491,121,2.163,122,1.633,135,0.038,136,0.05,137,0.038,138,1.351]],["title/coverage.html",[440,2.553]],["body/coverage.html",[0,0.779,1,0.964,7,0.79,8,0.937,9,0.732,10,2.219,13,0.79,44,0.07,46,0.79,84,0.608,91,1.163,105,1.715,119,0.842,120,1.396,130,1.163,135,0.047,136,0.058,137,0.047,139,1.675,141,1.648,142,2.682,150,0.79,173,1.425,174,0.964,185,2.025,315,1.396,380,2.481,440,2.493,441,2.493,442,3.204,443,3.204,444,3.204,445,3.925,446,3.925,447,3.204,448,3.204,449,3.204,450,3.204,451,3.204]],["title/dependencies.html",[361,1.268,452,2.042]],["body/dependencies.html",[17,0.929,44,0.069,131,1.367,135,0.055,136,0.064,137,0.055,361,1.64,453,3.764,454,3.764,455,3.764]],["title/index.html",[18,0.615,456,1.29,457,1.29]],["body/index.html",[0,0.411,4,0.51,9,0.711,13,0.51,14,3.057,16,1.489,17,0.843,19,1.067,34,0.917,44,0.072,45,1.427,46,1.124,47,0.902,69,1.082,76,0.917,77,0.885,81,0.902,83,0.725,84,0.321,119,0.411,124,1.61,125,1.857,131,1.241,132,1.778,135,0.043,136,0.043,137,0.03,145,1.082,148,1.712,150,0.51,151,1.787,154,1.489,156,2.282,174,0.623,190,2.054,192,2.483,199,1.787,227,1.308,231,1.787,242,1.869,261,1.945,263,1.945,269,1.621,282,2.341,288,1.082,324,2.579,359,0.902,361,0.902,378,1.61,381,2.287,382,3.266,383,1.61,384,2.659,385,2.287,387,1.61,388,3.057,389,2.483,392,3.176,393,2.287,394,2.287,395,2.894,396,2.287,397,2.351,398,2.287,399,1.61,400,1.61,401,1.61,402,2.287,403,2.287,404,2.287,405,2.287,406,2.659,407,2.287,408,1.61,409,1.61,410,1.857,456,1.308,457,1.308,458,2.069,459,2.069,460,3.417,461,2.938,462,2.069,463,2.069,464,2.069,465,2.069,466,2.069,467,2.069,468,2.069,469,2.069,470,2.069,471,2.069,472,2.069,473,2.069,474,2.069,475,2.069,476,2.069,477,2.069,478,2.069,479,2.069,480,2.069,481,2.069,482,3.928,483,3.719,484,1.61,485,2.069,486,2.069,487,2.069,488,2.069,489,2.069,490,2.069,491,2.069,492,2.938,493,2.938,494,3.417,495,2.938,496,2.069,497,3.417,498,2.069,499,2.938,500,2.069,501,2.069,502,2.069,503,2.069,504,2.069,505,2.069,506,2.069,507,2.069,508,1.61,509,2.069,510,2.069,511,2.069,512,2.069,513,1.61,514,2.069,515,2.938,516,2.069,517,2.069,518,2.069,519,2.069,520,2.069,521,2.069]],["title/license.html",[456,1.29,457,1.29,522,1.589]],["body/license.html",[44,0.057,135,0.046,136,0.057,137,0.046,371,1.976,397,1.976,441,2.433,484,3.009,508,2.433,513,2.433,522,2.433,523,3.126,524,4.198,525,3.126,526,3.126,527,3.126,528,3.866,529,3.126,530,3.126,531,3.126,532,3.126,533,3.126,534,3.126,535,3.866,536,4.739,537,3.126,538,3.126,539,3.126,540,4.198,541,3.126,542,3.866,543,3.126,544,3.126,545,3.126,546,3.126,547,3.126,548,3.126,549,3.126,550,3.126,551,3.126,552,3.866,553,3.126,554,3.126,555,3.126,556,3.126,557,3.126,558,3.866,559,3.866,560,3.126,561,3.126,562,3.126,563,3.126,564,3.126,565,3.126,566,3.126,567,3.126,568,3.126,569,3.126,570,3.126,571,3.126,572,3.126,573,3.126,574,3.126,575,3.126,576,3.126,577,3.126,578,3.126,579,3.126,580,3.126,581,3.126,582,3.126,583,3.126,584,3.126,585,3.126,586,3.126,587,3.126,588,3.126]],["title/modules.html",[360,2.074]],["body/modules.html",[44,0.064,135,0.056,136,0.064,137,0.056,359,1.648,360,2.391,589,3.783,590,3.783,591,3.783,592,3.783]],["title/overview.html",[593,2.553]],["body/overview.html",[1,1.322,2,2.699,44,0.068,123,2.193,130,1.726,135,0.051,136,0.061,137,0.051,138,1.814,140,2.193,230,2.603,249,2.193,358,2.603,359,2.071,361,1.512,362,2.699,363,2.699,364,2.699,365,2.699,366,2.699,367,2.699,368,2.699,369,3.204,370,2.699,371,2.193,593,2.699,594,3.469]],["title/miscellaneous/variables.html",[595,1.589,596,2.265]],["body/miscellaneous/variables.html",[8,0.578,9,0.451,18,0.877,34,0.719,44,0.074,45,1.344,75,1.114,85,0.877,101,0.877,135,0.043,136,0.054,137,0.043,141,1.058,148,1.27,150,0.719,151,1.524,154,1.612,173,1.344,174,1.114,242,1.27,267,2.126,269,1.27,310,1.524,313,1.524,380,2.338,386,2.268,389,1.842,410,1.842,412,3.328,413,2.268,414,2.268,415,2.268,416,2.268,417,3.328,418,2.879,419,2.879,420,2.879,421,2.268,422,2.879,423,2.268,424,3.566,425,3.163,426,2.268,427,2.879,428,2.268,429,2.268,430,2.268,431,2.268,432,2.268,433,2.268,595,2.268,596,2.268,597,2.914]]],"invertedIndex":[["",{"_index":44,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":105,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["0.07",{"_index":248,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["0.1",{"_index":216,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["0/1",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":249,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"overview.html":{}}}],["1.0.5",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":215,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["100",{"_index":218,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["10px",{"_index":225,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["12",{"_index":229,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["120px",{"_index":271,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["12px",{"_index":206,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["14",{"_index":227,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["18px",{"_index":228,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["1px",{"_index":182,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["2",{"_index":230,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"overview.html":{}}}],["2020",{"_index":526,"title":{},"body":{"license.html":{}}}],["20px",{"_index":236,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["2px",{"_index":203,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["3",{"_index":594,"title":{},"body":{"overview.html":{}}}],["3px",{"_index":213,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["51f41c",{"_index":491,"title":{},"body":{"index.html":{}}}],["5px",{"_index":188,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["616161",{"_index":195,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["6px",{"_index":224,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["8px",{"_index":197,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["95b8e7",{"_index":183,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["__meta__",{"_index":424,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["_blank",{"_index":308,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["_controlvaluechangefn",{"_index":22,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["_meta",{"_index":259,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["_options",{"_index":258,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["_templateloaded",{"_index":260,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["_value",{"_index":23,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["a.order",{"_index":342,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["above",{"_index":508,"title":{},"body":{"index.html":{},"license.html":{}}}],["accessors",{"_index":37,"title":{},"body":{"components/CustomComponent.html":{},"classes/PropertyValue.html":{}}}],["action",{"_index":582,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":134,"title":{},"body":{"components/CustomComponent.html":{}}}],["additional",{"_index":498,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":415,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["aftercontentinit",{"_index":159,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["afterviewinit",{"_index":160,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["and/or",{"_index":550,"title":{},"body":{"license.html":{}}}],["angular",{"_index":461,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":171,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["angular/common",{"_index":374,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["angular/core",{"_index":80,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["angular/forms",{"_index":82,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{}}}],["angular2",{"_index":474,"title":{},"body":{"index.html":{}}}],["angularjs",{"_index":500,"title":{},"body":{"index.html":{}}}],["animate",{"_index":167,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["animate('400ms",{"_index":245,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["animate(100",{"_index":256,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["animation,you",{"_index":477,"title":{},"body":{"index.html":{}}}],["animations",{"_index":237,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["any).key",{"_index":416,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["app.module.ts",{"_index":479,"title":{},"body":{"index.html":{}}}],["arising",{"_index":586,"title":{},"body":{"license.html":{}}}],["array",{"_index":520,"title":{},"body":{"index.html":{}}}],["associated",{"_index":537,"title":{},"body":{"license.html":{}}}],["authors",{"_index":576,"title":{},"body":{"license.html":{}}}],["auto",{"_index":390,"title":{},"body":{"interfaces/PropertyItemMeta.html":{}}}],["b",{"_index":341,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["b.order",{"_index":343,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["backbone",{"_index":502,"title":{},"body":{"index.html":{}}}],["backbone.js",{"_index":501,"title":{},"body":{"index.html":{}}}],["background",{"_index":189,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["basic",{"_index":480,"title":{},"body":{"index.html":{}}}],["belongs",{"_index":396,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["bezier(0.86",{"_index":247,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["bold",{"_index":194,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["boolean",{"_index":263,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["bootstrap",{"_index":363,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["border",{"_index":180,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["both",{"_index":403,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["bottom",{"_index":198,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["box",{"_index":211,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["browse",{"_index":592,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":589,"title":{},"body":{"modules.html":{}}}],["browseranimationsmodule",{"_index":478,"title":{},"body":{"index.html":{}}}],["buildcomponent",{"_index":26,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["c",{"_index":525,"title":{},"body":{"license.html":{}}}],["card",{"_index":222,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["cardstyle",{"_index":272,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["case",{"_index":518,"title":{},"body":{"index.html":{}}}],["catch",{"_index":107,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ccc",{"_index":202,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["cdr",{"_index":290,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["changedetectorref",{"_index":161,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["charge",{"_index":532,"title":{},"body":{"license.html":{}}}],["checkbox",{"_index":388,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["claim",{"_index":579,"title":{},"body":{"license.html":{}}}],["class",{"_index":84,"title":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":140,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"overview.html":{}}}],["cluster_propertygridmodule",{"_index":366,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["cluster_propertygridmodule_declarations",{"_index":367,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["cluster_propertygridmodule_exports",{"_index":368,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["code",{"_index":486,"title":{},"body":{"index.html":{}}}],["color",{"_index":190,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["colspan2",{"_index":381,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["columns",{"_index":404,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["commonmodule",{"_index":373,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["component",{"_index":0,"title":{"components/CustomComponent.html":{}},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{}}}],["component'},{'name",{"_index":129,"title":{},"body":{"components/CustomComponent.html":{}}}],["component.instance.registeronchange",{"_index":112,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.registeronchange(this._controlvaluechangefn",{"_index":113,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.value",{"_index":111,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.valuechange",{"_index":114,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.valuechange.subscribe(this._controlvaluechangefn",{"_index":115,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component_template",{"_index":128,"title":{},"body":{"components/CustomComponent.html":{}}}],["componentfactory",{"_index":102,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["componentfactoryresolver",{"_index":40,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["componentoptions",{"_index":32,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["componentref",{"_index":57,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/CustomComponent.html":{},"overview.html":{}}}],["componenttype",{"_index":33,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["conditions",{"_index":557,"title":{},"body":{"license.html":{}}}],["connection",{"_index":587,"title":{},"body":{"license.html":{}}}],["console.error('load",{"_index":108,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["console.error(e",{"_index":110,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["const",{"_index":101,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":38,"title":{},"body":{"components/CustomComponent.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["constructor(componentfactoryresolver",{"_index":39,"title":{},"body":{"components/CustomComponent.html":{}}}],["constructor(el",{"_index":289,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["constructor(name",{"_index":147,"title":{},"body":{"classes/InternalGroup.html":{}}}],["constructor(o",{"_index":434,"title":{},"body":{"classes/PropertyValue.html":{}}}],["constructor(private",{"_index":92,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["constructor(public",{"_index":357,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["contains",{"_index":519,"title":{},"body":{"index.html":{}}}],["contentchildren",{"_index":162,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["contentchildren(ngxtemplate",{"_index":285,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["continue",{"_index":328,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["contract",{"_index":583,"title":{},"body":{"license.html":{}}}],["control",{"_index":200,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["controlvalueaccessor",{"_index":81,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["convert",{"_index":408,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["convertvalue(meta",{"_index":318,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["copies",{"_index":552,"title":{},"body":{"license.html":{}}}],["copy",{"_index":535,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":524,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":440,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":471,"title":{},"body":{"index.html":{}}}],["cubic",{"_index":246,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["custom",{"_index":16,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["custom.component",{"_index":376,"title":{},"body":{"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{}}}],["customcomponent",{"_index":1,"title":{"components/CustomComponent.html":{}},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"overview.html":{}}}],["d6d6d678",{"_index":184,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["damages",{"_index":580,"title":{},"body":{"license.html":{}}}],["date",{"_index":387,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["dbdbdb",{"_index":221,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["deal",{"_index":539,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":588,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":362,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["declare",{"_index":503,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":67,"title":{},"body":{"components/CustomComponent.html":{}}}],["default",{"_index":151,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaulttemplates",{"_index":284,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["defined",{"_index":41,"title":{},"body":{"components/CustomComponent.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["demo",{"_index":505,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":361,"title":{"dependencies.html":{}},"body":{"modules/PropertyGridModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["describe",{"_index":510,"title":{},"body":{"index.html":{}}}],["description",{"_index":382,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["destroycomponent",{"_index":27,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["directive",{"_index":126,"title":{},"body":{"components/CustomComponent.html":{}}}],["directives",{"_index":133,"title":{},"body":{"components/CustomComponent.html":{}}}],["display",{"_index":231,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["distribute",{"_index":548,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":441,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/CustomComponent.html":{}}}],["dotted",{"_index":201,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["dropdown",{"_index":516,"title":{},"body":{"index.html":{}}}],["e",{"_index":62,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["each",{"_index":511,"title":{},"body":{"index.html":{}}}],["edit",{"_index":469,"title":{},"body":{"index.html":{}}}],["editor",{"_index":483,"title":{},"body":{"index.html":{}}}],["eg",{"_index":409,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["el.nativeelement.parentelement",{"_index":292,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["el.nativeelement.parentelement.classlist",{"_index":293,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["el.nativeelement.parentelement.classlist.contains('internal",{"_index":294,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["element",{"_index":125,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["elementref",{"_index":163,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["endregion",{"_index":423,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["entry",{"_index":24,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["enumerable",{"_index":433,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":109,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["event",{"_index":575,"title":{},"body":{"license.html":{}}}],["eventemitter",{"_index":51,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["example",{"_index":507,"title":{},"body":{"index.html":{}}}],["exampleeditoroptions",{"_index":481,"title":{},"body":{"index.html":{}}}],["excellent",{"_index":464,"title":{},"body":{"index.html":{}}}],["export",{"_index":83,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["exports",{"_index":365,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["express",{"_index":566,"title":{},"body":{"license.html":{}}}],["extends",{"_index":121,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["f5f5f5",{"_index":209,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["false",{"_index":261,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["fff",{"_index":223,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["files",{"_index":538,"title":{},"body":{"license.html":{}}}],["fitness",{"_index":571,"title":{},"body":{"license.html":{}}}],["flex",{"_index":232,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["flow",{"_index":233,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["following",{"_index":513,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":192,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["fontcolor",{"_index":490,"title":{},"body":{"index.html":{}}}],["fontsize",{"_index":489,"title":{},"body":{"index.html":{}}}],["framework",{"_index":497,"title":{},"body":{"index.html":{}}}],["free",{"_index":531,"title":{},"body":{"license.html":{}}}],["function",{"_index":63,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/PropertyItemMeta.html":{}}}],["furnished",{"_index":555,"title":{},"body":{"license.html":{}}}],["generate",{"_index":391,"title":{},"body":{"interfaces/PropertyItemMeta.html":{}}}],["gettemplate(type",{"_index":309,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["getting",{"_index":456,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getvalue",{"_index":72,"title":{},"body":{"components/CustomComponent.html":{},"classes/PropertyValue.html":{}}}],["give",{"_index":467,"title":{},"body":{"index.html":{}}}],["granted",{"_index":530,"title":{},"body":{"license.html":{}}}],["grid",{"_index":132,"title":{},"body":{"components/CustomComponent.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["grid.component",{"_index":377,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["grid.component.ts",{"_index":142,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"coverage.html":{}}}],["grid.component.ts:387",{"_index":437,"title":{},"body":{"classes/PropertyValue.html":{}}}],["grid.component.ts:391",{"_index":439,"title":{},"body":{"classes/PropertyValue.html":{}}}],["grid.component.ts:393",{"_index":435,"title":{},"body":{"classes/PropertyValue.html":{}}}],["grid.component.ts:395",{"_index":436,"title":{},"body":{"classes/PropertyValue.html":{}}}],["grid.component.ts:400",{"_index":152,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:401",{"_index":157,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:403",{"_index":155,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:405",{"_index":158,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:407",{"_index":149,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:409",{"_index":153,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.module.ts",{"_index":372,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["grid/src/lib/custom.component.ts",{"_index":10,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["grid/src/lib/custom.component.ts:20",{"_index":64,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/src/lib/custom.component.ts:21",{"_index":65,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/src/lib/custom.component.ts:23",{"_index":71,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/src/lib/custom.component.ts:24",{"_index":66,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/src/lib/custom.component.ts:26",{"_index":49,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/src/lib/custom.component.ts:29",{"_index":48,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/src/lib/custom.component.ts:32",{"_index":50,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/src/lib/custom.component.ts:38",{"_index":73,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/src/lib/custom.component.ts:43",{"_index":42,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/src/lib/custom.component.ts:50",{"_index":59,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/src/lib/custom.component.ts:54",{"_index":61,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/src/lib/custom.component.ts:59",{"_index":52,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/src/lib/custom.component.ts:76",{"_index":58,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/src/lib/custom.component.ts:90",{"_index":55,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/src/lib/property",{"_index":141,"title":{},"body":{"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":156,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["group.items.push(v",{"_index":338,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["group.name",{"_index":175,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["groupcollapse",{"_index":273,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["groups",{"_index":287,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["groups.filter(o",{"_index":345,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["groups.find(o",{"_index":333,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["groups.foreach(o",{"_index":339,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["groups.push(group",{"_index":337,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["header",{"_index":208,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["height",{"_index":240,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["help",{"_index":411,"title":{},"body":{"interfaces/PropertyItemMeta.html":{}}}],["hereby",{"_index":529,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":242,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["hidden/visible",{"_index":399,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["hint",{"_index":394,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["holders",{"_index":577,"title":{},"body":{"license.html":{}}}],["html",{"_index":124,"title":{},"body":{"components/CustomComponent.html":{},"index.html":{}}}],["icustomdynamiccomponent",{"_index":13,"title":{"interfaces/ICustomDynamicComponent.html":{}},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{}}}],["identifier",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":401,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["implied",{"_index":567,"title":{},"body":{"license.html":{}}}],["import",{"_index":76,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["imports",{"_index":379,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["include",{"_index":495,"title":{},"body":{"index.html":{}}}],["included",{"_index":560,"title":{},"body":{"license.html":{}}}],["including",{"_index":542,"title":{},"body":{"license.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["init",{"_index":400,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["initcomponent",{"_index":28,"title":{},"body":{"components/CustomComponent.html":{}}}],["initcomponent(component",{"_index":56,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["initmeta",{"_index":323,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["initstate",{"_index":383,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["input",{"_index":77,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["inputs",{"_index":31,"title":{},"body":{"components/CustomComponent.html":{}}}],["interface",{"_index":119,"title":{"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{}},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":138,"title":{},"body":{"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"overview.html":{}}}],["internal",{"_index":204,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["internalgroup",{"_index":139,"title":{"classes/InternalGroup.html":{}},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"coverage.html":{}}}],["internalgroup(undefined",{"_index":326,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["internalgroup(v.group",{"_index":336,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["isinternal",{"_index":265,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["it's",{"_index":509,"title":{},"body":{"index.html":{}}}],["item",{"_index":173,"title":{},"body":{"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["item.name",{"_index":176,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["item.template",{"_index":300,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["itemmeta",{"_index":412,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.initstate",{"_index":419,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.order",{"_index":420,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.showhelp",{"_index":422,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.type",{"_index":417,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.valueconvert",{"_index":418,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["items",{"_index":144,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["jquery",{"_index":492,"title":{},"body":{"index.html":{}}}],["key",{"_index":267,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":565,"title":{},"body":{"license.html":{}}}],["label",{"_index":199,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["labelwidth",{"_index":270,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["left",{"_index":210,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["legend",{"_index":123,"title":{},"body":{"components/CustomComponent.html":{},"modules/PropertyGridModule.html":{},"overview.html":{}}}],["liability",{"_index":581,"title":{},"body":{"license.html":{}}}],["liable",{"_index":578,"title":{},"body":{"license.html":{}}}],["license",{"_index":522,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":543,"title":{},"body":{"license.html":{}}}],["limited",{"_index":568,"title":{},"body":{"license.html":{}}}],["link",{"_index":306,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{}}}],["list",{"_index":517,"title":{},"body":{"index.html":{}}}],["live",{"_index":504,"title":{},"body":{"index.html":{}}}],["margin",{"_index":205,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["matching",{"_index":136,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":570,"title":{},"body":{"license.html":{}}}],["merge",{"_index":546,"title":{},"body":{"license.html":{}}}],["meta",{"_index":174,"title":{},"body":{"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["meta(v",{"_index":275,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["meta({name",{"_index":482,"title":{},"body":{"index.html":{}}}],["meta.hasownproperty(i",{"_index":327,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["meta.ts",{"_index":380,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meta.valueconvert",{"_index":321,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["meta.valueconvert(val",{"_index":322,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["meta[i",{"_index":329,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/CustomComponent.html":{},"index.html":{}}}],["methods",{"_index":25,"title":{},"body":{"components/CustomComponent.html":{},"classes/InternalGroup.html":{}}}],["miscellaneous",{"_index":595,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":523,"title":{},"body":{"license.html":{}}}],["modernizr",{"_index":494,"title":{},"body":{"index.html":{}}}],["modify",{"_index":545,"title":{},"body":{"license.html":{}}}],["module",{"_index":358,"title":{"modules/PropertyGridModule.html":{}},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["modules",{"_index":360,"title":{"modules.html":{}},"body":{"modules/PropertyGridModule.html":{},"modules.html":{}}}],["name",{"_index":45,"title":{},"body":{"components/CustomComponent.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name/label",{"_index":405,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["need",{"_index":476,"title":{},"body":{"index.html":{}}}],["new",{"_index":91,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["ngaftercontentinit",{"_index":302,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["ngafterviewinit",{"_index":295,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["ngmodule",{"_index":375,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["ngoninit",{"_index":29,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ngx",{"_index":131,"title":{},"body":{"components/CustomComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{},"dependencies.html":{},"index.html":{}}}],["ngxpropertygrid",{"_index":458,"title":{},"body":{"index.html":{}}}],["ngxtemplate",{"_index":172,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["ngxtemplatemodule",{"_index":378,"title":{},"body":{"modules/PropertyGridModule.html":{},"index.html":{}}}],["none",{"_index":499,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":574,"title":{},"body":{"license.html":{}}}],["notice",{"_index":558,"title":{},"body":{"license.html":{}}}],["number",{"_index":269,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["number.max_value",{"_index":421,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["o",{"_index":356,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["o.items.length",{"_index":346,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["o.items.sort((a",{"_index":340,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["o.name",{"_index":334,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["object",{"_index":324,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["object.assign(component.instance",{"_index":117,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["object.create(object.getprototypeof(__meta__",{"_index":428,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["object.defineproperty(__meta__",{"_index":432,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["object.defineproperty(submeta",{"_index":430,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["object.getownpropertydescriptor(__meta__",{"_index":431,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["object.getownpropertynames(__meta__).foreach(name",{"_index":429,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":534,"title":{},"body":{"license.html":{}}}],["omitted",{"_index":398,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["online",{"_index":473,"title":{},"body":{"index.html":{}}}],["onvaluechange",{"_index":30,"title":{},"body":{"components/CustomComponent.html":{}}}],["onvaluechange(e",{"_index":60,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["openlink(link",{"_index":305,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["optional",{"_index":47,"title":{},"body":{"components/CustomComponent.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["optionlabel(option",{"_index":178,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["optionlabel(v",{"_index":347,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["options",{"_index":282,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["options(v",{"_index":278,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["optionvalue(v",{"_index":350,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["order",{"_index":384,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["otherwise",{"_index":585,"title":{},"body":{"license.html":{}}}],["out",{"_index":371,"title":{},"body":{"modules/PropertyGridModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":78,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["outputs",{"_index":35,"title":{},"body":{"components/CustomComponent.html":{}}}],["overflow",{"_index":241,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["overview",{"_index":593,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.value",{"_index":177,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["package",{"_index":452,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":187,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["page",{"_index":496,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"components/CustomComponent.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["parseint",{"_index":410,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["particular",{"_index":572,"title":{},"body":{"license.html":{}}}],["permission",{"_index":528,"title":{},"body":{"license.html":{}}}],["permit",{"_index":553,"title":{},"body":{"license.html":{}}}],["person",{"_index":533,"title":{},"body":{"license.html":{}}}],["persons",{"_index":554,"title":{},"body":{"license.html":{}}}],["play",{"_index":472,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":493,"title":{},"body":{"index.html":{}}}],["pojos",{"_index":463,"title":{},"body":{"index.html":{}}}],["portions",{"_index":562,"title":{},"body":{"license.html":{}}}],["private",{"_index":20,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["pro",{"_index":487,"title":{},"body":{"index.html":{}}}],["projects/.../property",{"_index":597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/ngx",{"_index":8,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":19,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["property",{"_index":9,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propertygridcomponent",{"_index":130,"title":{},"body":{"components/CustomComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"overview.html":{}}}],["propertygridmodule",{"_index":359,"title":{"modules/PropertyGridModule.html":{}},"body":{"modules/PropertyGridModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["propertyitemmeta",{"_index":150,"title":{"interfaces/PropertyItemMeta.html":{}},"body":{"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propertykey",{"_index":386,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["propertyvalue",{"_index":315,"title":{"classes/PropertyValue.html":{}},"body":{"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{},"coverage.html":{}}}],["propertyvalue(meta",{"_index":314,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["propertyvalue(this.options",{"_index":316,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["propertyvalueaccess",{"_index":120,"title":{"interfaces/PropertyValueAccess.html":{}},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["proprty",{"_index":512,"title":{},"body":{"index.html":{}}}],["provided",{"_index":563,"title":{},"body":{"license.html":{}}}],["providers",{"_index":364,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["public",{"_index":143,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["publish",{"_index":547,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":573,"title":{},"body":{"license.html":{}}}],["querylist",{"_index":164,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["read",{"_index":69,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["readonly",{"_index":21,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["region",{"_index":414,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":370,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["restriction",{"_index":541,"title":{},"body":{"license.html":{}}}],["result",{"_index":135,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":137,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":90,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["returns",{"_index":53,"title":{},"body":{"components/CustomComponent.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["rgba(0",{"_index":226,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["rgba(10",{"_index":214,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["right",{"_index":219,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["rights",{"_index":544,"title":{},"body":{"license.html":{}}}],["row",{"_index":234,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["seen",{"_index":506,"title":{},"body":{"index.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["sell",{"_index":551,"title":{},"body":{"license.html":{}}}],["set",{"_index":85,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"miscellaneous/variables.html":{}}}],["settings",{"_index":465,"title":{},"body":{"index.html":{}}}],["setvalue(v",{"_index":74,"title":{},"body":{"components/CustomComponent.html":{}}}],["setvalue(val",{"_index":438,"title":{},"body":{"classes/PropertyValue.html":{}}}],["shadow",{"_index":212,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["shall",{"_index":559,"title":{},"body":{"license.html":{}}}],["showhelp",{"_index":274,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{}}}],["simple",{"_index":460,"title":{},"body":{"index.html":{}}}],["simpletexteditorcomponent",{"_index":485,"title":{},"body":{"index.html":{}}}],["size",{"_index":488,"title":{},"body":{"index.html":{}}}],["small",{"_index":459,"title":{},"body":{"index.html":{}}}],["software",{"_index":536,"title":{},"body":{"license.html":{}}}],["solid",{"_index":181,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["spacing",{"_index":186,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["span",{"_index":395,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["started",{"_index":457,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":145,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["state('hidden",{"_index":239,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["state('in",{"_index":251,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["state('visible",{"_index":243,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["statements",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":148,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":168,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["style({transform",{"_index":252,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["styles",{"_index":179,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["subitems",{"_index":288,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["subitems.push(v",{"_index":332,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["subject",{"_index":556,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":549,"title":{},"body":{"license.html":{}}}],["submeta",{"_index":427,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["substantial",{"_index":561,"title":{},"body":{"license.html":{}}}],["support",{"_index":590,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":514,"title":{},"body":{"index.html":{}}}],["svg",{"_index":591,"title":{},"body":{"modules.html":{}}}],["table",{"_index":185,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":413,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["target.__meta__",{"_index":425,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["target.__proto__.__meta__",{"_index":426,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":17,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"dependencies.html":{},"index.html":{}}}],["templateloaded",{"_index":262,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["templatemap",{"_index":266,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["templateref",{"_index":165,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["templates",{"_index":286,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["text",{"_index":389,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["textarea",{"_index":407,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["textbox",{"_index":515,"title":{},"body":{"index.html":{}}}],["that's",{"_index":470,"title":{},"body":{"index.html":{}}}],["this._controlvaluechangefn",{"_index":93,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this._meta",{"_index":276,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this._options",{"_index":279,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this._templateloaded",{"_index":264,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this._value",{"_index":87,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.buildcomponent",{"_index":95,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.cdr.detectchanges",{"_index":301,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.component",{"_index":88,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.component.destroy",{"_index":118,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.component.instance.value",{"_index":89,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(this.componenttype",{"_index":103,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.componentoptions",{"_index":116,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.componenttype",{"_index":97,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.defaulttemplates",{"_index":296,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.defaulttemplates.foreach((item",{"_index":297,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.destroycomponent",{"_index":99,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.entry.clear",{"_index":100,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.entry.createcomponent(componentfactory",{"_index":104,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.groups",{"_index":344,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.initcomponent(component",{"_index":106,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.initmeta",{"_index":277,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.isinternal",{"_index":291,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.meta",{"_index":281,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.meta.valueconvert",{"_index":354,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.meta.valueconvert(val",{"_index":355,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.o[this.meta.key",{"_index":352,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.onvaluechange(value",{"_index":94,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.options[meta.key",{"_index":320,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.state",{"_index":317,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.subitems",{"_index":325,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap",{"_index":303,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap.hasownproperty(item.name",{"_index":298,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap['default",{"_index":312,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap[item.name",{"_index":299,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap[type",{"_index":311,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.templates.foreach((item",{"_index":304,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["this.valuechange.emit(e",{"_index":96,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["toggle",{"_index":146,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["tooltip",{"_index":393,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["top",{"_index":196,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["tort",{"_index":584,"title":{},"body":{"license.html":{}}}],["transition",{"_index":169,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["transition('visible",{"_index":244,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["transition('void",{"_index":254,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["translatex",{"_index":255,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["translatex(0",{"_index":253,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["translatex(100",{"_index":257,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/CustomComponent.html":{}}}],["trigger",{"_index":170,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["trigger('collapseanimation",{"_index":238,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["trigger('flyinout",{"_index":250,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["true",{"_index":154,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["true/false",{"_index":402,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["try",{"_index":98,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["tslib",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["tvalue",{"_index":122,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["type",{"_index":46,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{}}}],["typeof",{"_index":310,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":313,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"miscellaneous/variables.html":{}}}],["uneditable",{"_index":521,"title":{},"body":{"index.html":{}}}],["unset",{"_index":220,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["usage",{"_index":475,"title":{},"body":{"index.html":{}}}],["use",{"_index":484,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":392,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["useful",{"_index":406,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["user",{"_index":468,"title":{},"body":{"index.html":{}}}],["v",{"_index":75,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"miscellaneous/variables.html":{}}}],["v.__meta__",{"_index":280,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["v.group",{"_index":335,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["v.hidden",{"_index":330,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["v.label",{"_index":349,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["v.text",{"_index":348,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["v.type",{"_index":331,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["v.value",{"_index":351,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["val",{"_index":319,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["value",{"_index":34,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value(v",{"_index":86,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["value(val",{"_index":353,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["valuechange",{"_index":36,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["valueconvert",{"_index":385,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["var",{"_index":127,"title":{},"body":{"components/CustomComponent.html":{}}}],["variable",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":596,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["view/edit",{"_index":462,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":79,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["viewchild('container",{"_index":68,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["viewchildren",{"_index":166,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["viewchildren(ngxtemplate",{"_index":283,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["viewcontainerref",{"_index":70,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["visible",{"_index":268,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["void",{"_index":54,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["want",{"_index":466,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":569,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":564,"title":{},"body":{"license.html":{}}}],["webkit",{"_index":217,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["weight",{"_index":193,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["whether",{"_index":397,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{},"license.html":{}}}],["white",{"_index":191,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["width",{"_index":207,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["window.open(link",{"_index":307,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["without",{"_index":540,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":235,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}}}],["yish",{"_index":527,"title":{},"body":{"license.html":{}}}],["zoom",{"_index":369,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/CustomComponent.html":{"url":"components/CustomComponent.html","title":"component - CustomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CustomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-property-grid/src/lib/custom.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    ICustomDynamicComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                custom-component\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _controlValueChangeFn\n                            \n                            \n                                    Private\n                                _value\n                            \n                            \n                                    Private\n                                component\n                            \n                            \n                                entry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildComponent\n                            \n                            \n                                    Private\n                                destroyComponent\n                            \n                            \n                                    Private\n                                initComponent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                onValueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                componentOptions\n                            \n                            \n                                componentType\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-property-grid/src/lib/custom.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        componentOptions\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/custom.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        componentType\n                    \n                \n                \n                    \n                        Type :         Type\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/custom.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/custom.component.ts:32\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/custom.component.ts:43\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildComponent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/custom.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            destroyComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroyComponent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/custom.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initComponent(component: ComponentRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/custom.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                ComponentRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/custom.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onValueChange(e: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/custom.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _controlValueChangeFn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/custom.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/custom.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ComponentRef>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/custom.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entry\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/custom.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-property-grid/src/lib/custom.component.ts:38\n                                \n                            \n\n                \n                    \n                        setvalue(v: any)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-property-grid/src/lib/custom.component.ts:32\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    Type,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\n\n@Component({\n    selector: 'custom-component',\n    template: '',\n})\nexport class CustomComponent implements OnInit, ICustomDynamicComponent {\n    private readonly _controlValueChangeFn: (value: any) => void;\n    private _value: any;\n\n    @ViewChild('container', { read: ViewContainerRef }) entry;\n    private component: ComponentRef>;\n\n    @Input() componentType: Type;\n\n    @Input()\n    componentOptions: any;\n\n    @Input()\n    set value(v: any) {\n        this._value = v;\n        if (this.component) {\n            this.component.instance.value =  v;\n        }\n    }\n    get value(): any {\n        return this._value;\n    }\n\n    @Output()\n    readonly valueChange: EventEmitter = new EventEmitter();\n\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n        this._controlValueChangeFn = (value: any) => this.onValueChange(value);\n    }\n\n    ngOnInit() {\n        this.buildComponent();\n    }\n\n    private onValueChange(e: any): void {\n        this._value = e;\n        this.valueChange.emit(e);\n    }\n\n    private buildComponent(): void {\n        if (!this.componentType) {\n            return;\n        }\n        try {\n            this.destroyComponent();\n            // this.entry.clear();\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\n            const component = this.entry.createComponent(componentFactory, 0);\n            this.initComponent(component);\n            this.component = component;\n        } catch (e) {\n            console.error('load component error.');\n            console.error(e);\n        }\n    }\n\n    private initComponent(component: ComponentRef) {\n        component.instance.value = this._value;\n        if (component.instance.registerOnChange) {\n            component.instance.registerOnChange(this._controlValueChangeFn);\n        }\n        if (component.instance.valueChange) {\n            component.instance.valueChange.subscribe(this._controlValueChangeFn);\n        }\n\n        if (this.componentOptions) {\n            Object.assign(component.instance, this.componentOptions);\n        }\n    }\n\n    private destroyComponent(): void {\n        if (this.component) {\n            this.component.destroy();\n        }\n    }\n}\n\nexport interface PropertyValueAccess extends ControlValueAccessor, ICustomDynamicComponent {\n}\n\nexport interface ICustomDynamicComponent {\n    value: TValue;\n    valueChange: EventEmitter;\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'CustomComponent', 'selector': 'custom-component'},{'name': 'PropertyGridComponent', 'selector': 'ngx-property-grid'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CustomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICustomDynamicComponent.html":{"url":"interfaces/ICustomDynamicComponent.html","title":"interface - ICustomDynamicComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICustomDynamicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/custom.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        valueChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     TValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueChange\n                                    \n                                \n                                \n                                    \n                                        valueChange:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    Type,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\n\n@Component({\n    selector: 'custom-component',\n    template: '',\n})\nexport class CustomComponent implements OnInit, ICustomDynamicComponent {\n    private readonly _controlValueChangeFn: (value: any) => void;\n    private _value: any;\n\n    @ViewChild('container', { read: ViewContainerRef }) entry;\n    private component: ComponentRef>;\n\n    @Input() componentType: Type;\n\n    @Input()\n    componentOptions: any;\n\n    @Input()\n    set value(v: any) {\n        this._value = v;\n        if (this.component) {\n            this.component.instance.value =  v;\n        }\n    }\n    get value(): any {\n        return this._value;\n    }\n\n    @Output()\n    readonly valueChange: EventEmitter = new EventEmitter();\n\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n        this._controlValueChangeFn = (value: any) => this.onValueChange(value);\n    }\n\n    ngOnInit() {\n        this.buildComponent();\n    }\n\n    private onValueChange(e: any): void {\n        this._value = e;\n        this.valueChange.emit(e);\n    }\n\n    private buildComponent(): void {\n        if (!this.componentType) {\n            return;\n        }\n        try {\n            this.destroyComponent();\n            // this.entry.clear();\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\n            const component = this.entry.createComponent(componentFactory, 0);\n            this.initComponent(component);\n            this.component = component;\n        } catch (e) {\n            console.error('load component error.');\n            console.error(e);\n        }\n    }\n\n    private initComponent(component: ComponentRef) {\n        component.instance.value = this._value;\n        if (component.instance.registerOnChange) {\n            component.instance.registerOnChange(this._controlValueChangeFn);\n        }\n        if (component.instance.valueChange) {\n            component.instance.valueChange.subscribe(this._controlValueChangeFn);\n        }\n\n        if (this.componentOptions) {\n            Object.assign(component.instance, this.componentOptions);\n        }\n    }\n\n    private destroyComponent(): void {\n        if (this.component) {\n            this.component.destroy();\n        }\n    }\n}\n\nexport interface PropertyValueAccess extends ControlValueAccessor, ICustomDynamicComponent {\n}\n\nexport interface ICustomDynamicComponent {\n    value: TValue;\n    valueChange: EventEmitter;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InternalGroup.html":{"url":"classes/InternalGroup.html","title":"class - InternalGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InternalGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/property-grid.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                items\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                state\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:407\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PropertyItemMeta[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:400\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:409\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:403\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'group'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:401\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:405\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    AfterContentInit, AfterViewInit, ChangeDetectorRef,\n    Component,\n    ContentChildren, ElementRef,\n    Input,\n    QueryList,\n    TemplateRef, ViewChildren\n} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {NgxTemplate} from 'ngx-template';\nimport {PropertyItemMeta} from './property-item-meta';\n\n@Component({\n    selector: 'ngx-property-grid',\n    template: `\n        \n            \n                \n                    \n                    \n                        \n                            {{group.name}}\n                        \n\n                        \n                            \n                                \n                                    {{item.name}}\n                                    [?]\n                                \n                                \n                                    \n                                    \n                                \n                            \n                            \n                                \n                            \n                        \n                    \n                    \n                \n            \n\n            \n                \n                    {{item.name}}\n                \n                \n                \n            \n        \n\n\n        \n            \n                \n                \n\n                \n                \n            \n        \n\n\n        \n\n            \n                \n            \n\n            \n                \n            \n\n            \n                \n            \n\n            \n                {{p.value}}\n            \n\n            \n                \n            \n\n            \n                \n                    \n                        {{optionLabel(option)}}\n                    \n                \n            \n        \n    `,\n    styles: [\n            `\n            .property-grid {\n                /*border: solid 1px #95B8E7;*/\n            }\n\n            .property-grid-border {\n                border: 1px solid #d6d6d678\n            }\n\n            .property-grid-table {\n                border-spacing: 0;\n                padding: 5px\n            }\n\n            .property-grid-group {\n                background-color: white;\n                font-weight: bold;\n                color: #616161;\n                padding-top: 8px;\n                padding-bottom: 5px;\n            }\n\n            .property-grid-label, .property-grid-control {\n                border: dotted 1px #ccc;\n                padding: 2px 5px;\n            }\n\n            .internal-property-grid {\n                margin-top: 12px;\n            }\n\n            .internal-property-grid .property-grid {\n                border-width: 0;\n            }\n\n            .internal-property-grid .property-grid-header {\n                margin-bottom: 5px;\n                background-color: #f5f5f5;\n                padding-bottom: 5px;\n                padding-top: 5px;\n                padding-left: 5px;\n                box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n                -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n                width: 100%;\n            }\n\n            .internal-property-grid .property-grid-header-margin {\n                margin-left: 5px;\n                margin-right: 5px;\n                width: unset;\n            }\n\n            .internal-property-grid .property-grid-table {\n                border-width: 0;\n                /*border-top: 1px solid #dbdbdb;*/\n            }\n\n            .card {\n                background-color: #fff;\n                box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n                display: flex;\n                flex-flow: row wrap;\n                /*margin: 5px 20px;*/\n                padding: 0;\n            }\n\n            .internal-property-grid ngx-property-grid .card {\n                background-color: unset;\n                box-shadow: unset;\n                display: unset;\n                flex-flow: unset;\n                /*margin: 5px 20px;*/\n                padding: unset;\n            }\n        `\n    ],\n    animations: [\n        trigger('collapseAnimation', [\n            state('hidden', style({\n                height: '0',\n                // overflow: 'hidden',\n            })),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible  hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n        ]),\n        trigger('flyInOut', [\n            state('in', style({transform: 'translateX(0)'})),\n            transition('void => *', [\n                style({transform: 'translateX(-100%)'}),\n                animate(100)\n            ]),\n            transition('* => void', [\n                animate(100, style({transform: 'translateX(100%)'}))\n            ])\n        ])\n    ]\n})\nexport class PropertyGridComponent implements AfterContentInit, AfterViewInit {\n    private _options: any;\n    private _meta: any;\n    private _templateLoaded = false;\n    public get templateLoaded(): boolean {\n        return this._templateLoaded;\n    }\n\n    public readonly isInternal: boolean = false;\n\n    @Input()\n    public templateMap: { [key: string]: TemplateRef };\n\n    @Input()\n    public state: 'hidden' | 'visible' = 'visible';\n\n    @Input()\n    width: string | number;\n\n\n    @Input()\n    labelWidth: string | number = '120px';\n\n    @Input()\n    cardStyle = true;\n\n    @Input()\n    groupCollapse = false;\n\n    @Input()\n    showHelp = true;\n\n    @Input()\n    public set meta(v: any) {\n        this._meta = v;\n        this.initMeta();\n    }\n\n    public get meta(): any {\n        return this._meta;\n    }\n\n    @Input()\n    public set options(v: any) {\n        this._options = v;\n        if (v.__meta__) {\n            this.meta = v.__meta__;\n        }\n    }\n\n    public get options(): any {\n        return this._options;\n    }\n\n    @ViewChildren(NgxTemplate) defaultTemplates: QueryList;\n    @ContentChildren(NgxTemplate) templates: QueryList;\n\n    public groups: InternalGroup[];\n    public subItems: PropertyItemMeta[];\n\n    constructor(el: ElementRef, private cdr: ChangeDetectorRef) {\n        this.isInternal = el.nativeElement.parentElement && el.nativeElement.parentElement.classList &&\n            el.nativeElement.parentElement.classList.contains('internal-property-grid');\n    }\n\n    ngAfterViewInit(): void {\n        if (this.isInternal) {\n            this._templateLoaded = true;\n        } else {\n            if (this.defaultTemplates) {\n                this.defaultTemplates.forEach((item) => {\n                    if (!this.templateMap.hasOwnProperty(item.name)) {\n                        this.templateMap[item.name] = item.template;\n                    }\n                });\n                this._templateLoaded = true;\n                this.cdr.detectChanges();\n            }\n        }\n    }\n\n    ngAfterContentInit(): void {\n        if (!this.isInternal) {\n            if (!this.templateMap) {\n                this.templateMap = {};\n            }\n            this.templates.forEach((item) => {\n                this.templateMap[item.name] = item.template;\n            });\n        }\n    }\n\n    public openLink(link: string) {\n        if (link) {\n            window.open(link,  '_blank');\n        }\n    }\n\n    public getTemplate(type: string | any): TemplateRef {\n        if (typeof type === 'string' && this.templateMap) {\n            return type ? this.templateMap[type] : this.templateMap['default'];\n        } else {\n            return undefined;\n        }\n    }\n\n    public propertyValue(meta: PropertyItemMeta): PropertyValue {\n        return new PropertyValue(this.options, meta);\n    }\n\n    public toggle(): void {\n        this.state = this.state === 'visible' ? 'hidden' : 'visible';\n    }\n\n    public convertValue(meta: PropertyItemMeta, val: any): void {\n        this.options[meta.key] = meta.valueConvert ? meta.valueConvert(val) : val;\n    }\n\n    private initMeta(): void {\n        const meta: object = this.meta;\n        if (!meta) {\n            this.subItems = [];\n            return;\n        }\n\n        const groups: InternalGroup[] = [new InternalGroup(undefined)];\n        const subItems: PropertyItemMeta[] = [];\n        for (const i in meta) {\n            if (!meta.hasOwnProperty(i)) {\n                continue;\n            }\n            const v: PropertyItemMeta = meta[i];\n            if (v.hidden) {\n                continue;\n            }\n            if (v.type === 'subItems') {\n                subItems.push(v);\n                continue;\n            }\n\n            let group = groups.find(o => o.name === v.group);\n            if (!group) {\n                group = new InternalGroup(v.group);\n                groups.push(group);\n            }\n            group.items.push(v);\n        }\n        groups.forEach(o => o.items.sort((a, b) => a.order - b.order));\n\n        this.groups = groups.filter(o => o.items.length > 0);\n        this.subItems = subItems;\n    }\n\n    optionLabel(v: any): string {\n        if (typeof v === 'string') {\n            return v;\n        }\n        if (v.text) {\n            return v.text;\n        }\n        if (v.label) {\n            return v.label;\n        }\n        return v;\n    }\n\n    optionValue(v: any): any {\n        return v && v.value ? v.value : v;\n    }\n}\n\nexport class PropertyValue {\n    public get value(): any {\n        return this.o[this.meta.key];\n    }\n\n    public set value(val: any) {\n        this.o[this.meta.key] = this.meta.valueConvert ? this.meta.valueConvert(val) : val;\n    }\n\n    constructor(private o: any, public meta: PropertyItemMeta) {\n    }\n}\n\nexport class InternalGroup {\n    public readonly items: PropertyItemMeta[] = [];\n    public type = 'group';\n\n    public state = true;\n\n    public toggle(): void {\n        this.state = !this.state;\n    }\n\n    constructor(public name: string) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PropertyGridModule.html":{"url":"modules/PropertyGridModule.html","title":"module - PropertyGridModule","body":"\n                   \n\n\n\n\n    Modules\n    PropertyGridModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyGridModule\n\n\n\ncluster_PropertyGridModule_declarations\n\n\n\ncluster_PropertyGridModule_exports\n\n\n\n\nCustomComponent\n\nCustomComponent\n\n\n\nPropertyGridModule\n\nPropertyGridModule\n\nPropertyGridModule -->\n\nCustomComponent->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent\n\nPropertyGridComponent\n\nPropertyGridModule -->\n\nPropertyGridComponent->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent \n\nPropertyGridComponent \n\nPropertyGridComponent  -->\n\nPropertyGridModule->PropertyGridComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/property-grid.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CustomComponent\n                        \n                        \n                            PropertyGridComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PropertyGridComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {CustomComponent, ICustomDynamicComponent} from './custom.component';\nimport {PropertyGridComponent} from './property-grid.component';\nimport {NgxTemplateModule} from 'ngx-template';\n\nexport {ICustomDynamicComponent} from './custom.component';\nexport {PropertyGridComponent, PropertyValue} from './property-grid.component';\nexport {meta, PropertyItemMeta} from './property-item-meta';\n\n@NgModule({\n    imports: [\n        CommonModule, NgxTemplateModule\n    ],\n    declarations: [\n        PropertyGridComponent,\n        CustomComponent\n    ],\n    exports: [\n        PropertyGridComponent\n    ]\n})\nexport class PropertyGridModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PropertyItemMeta.html":{"url":"interfaces/PropertyItemMeta.html","title":"interface - PropertyItemMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PropertyItemMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/property-item-meta.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        colSpan2\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        group\n                                \n                                \n                                            Optional\n                                        hidden\n                                \n                                \n                                            Optional\n                                        initState\n                                \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        link\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                            Optional\n                                        order\n                                \n                                \n                                            Optional\n                                        showHelp\n                                \n                                \n                                            Optional\n                                        type\n                                \n                                \n                                            Optional\n                                        valueConvert\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colSpan2\n                                    \n                                \n                                \n                                    \n                                        colSpan2:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initState\n                                    \n                                \n                                \n                                    \n                                        initState:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     PropertyKey\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PropertyKey\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showHelp\n                                    \n                                \n                                \n                                    \n                                        showHelp:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         \"color\" | \"date\" | \"checkbox\" | \"text\" | \"options\" | string | Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         \"color\" | \"date\" | \"checkbox\" | \"text\" | \"options\" | string | Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueConvert\n                                    \n                                \n                                \n                                    \n                                        valueConvert:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Type} from '@angular/core';\nimport {ICustomDynamicComponent} from './custom.component';\nimport {ControlValueAccessor} from '@angular/forms';\n\nexport interface PropertyItemMeta {\n    readonly key?: PropertyKey; // auto generate.\n    name: string; // The display name of the property in the grid\n    description?: string; // A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\n    order?: number; // The display order.\n    group?: string; //  The group this property belongs to\n    hidden?: boolean; // Whether this property should be hidden in the grid, default is false (can be omitted).\n    initState?: string; // - hidden/visible. If hidden then subItems should init by hidden state. default is hidden\n    type?: 'color' | 'date' | 'checkbox' | 'text' | 'options' | string | Type>;\n    // options: boolean number options label color,\n    // or an custom component should be implement ControlValueAccessor or ICustomDynamicComponent\n    options?: any; // options for type\n    colSpan2?: boolean; //  - true/false. If true then property input will span both columns and will have no name/label\n    // (useful for textArea custom type)\n    valueConvert?: (value: any) => any; // convert the value, eg. parseInt\n    showHelp?: boolean; // default True.\n    link?: string; // help link\n}\n\n\nexport const meta = (itemMeta: PropertyItemMeta) =>\n    (target: any, key: PropertyKey) => {\n\n        // region [adjust]\n        (itemMeta as any).key = key;\n        if (typeof itemMeta.type === 'string') {\n\n        } else {\n\n        }\n        if (!itemMeta.type) {\n            itemMeta.type = 'text';\n        }\n\n        if (itemMeta.type === 'number' && !itemMeta.valueConvert) {\n            itemMeta.valueConvert = parseInt;\n        }\n\n        if (!itemMeta.initState) {\n            itemMeta.initState = 'hidden';\n        }\n        if (!itemMeta.order) {\n            itemMeta.order = Number.MAX_VALUE;\n        }\n        if (itemMeta.showHelp === undefined) {\n            itemMeta.showHelp = true;\n        }\n        // endregion\n\n        let __meta__ = target.__meta__;\n        if (!__meta__) {\n            __meta__ = {};\n            target.__meta__ = __meta__;\n        } else if (target.__proto__.__meta__ === __meta__) {\n            const subMeta = Object.create(Object.getPrototypeOf(__meta__));\n            Object.getOwnPropertyNames(__meta__).forEach(name => {\n                Object.defineProperty(subMeta, name, Object.getOwnPropertyDescriptor(__meta__, name));\n            });\n            __meta__ = subMeta;\n            target.__meta__ = __meta__;\n        }\n\n        Object.defineProperty(__meta__, key, {\n            enumerable: true,\n            get: () => itemMeta,\n            set: (v) => itemMeta = v\n        });\n    };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PropertyValue.html":{"url":"classes/PropertyValue.html","title":"class - PropertyValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PropertyValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/property-grid.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(o: any, meta: PropertyItemMeta)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:393\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        o\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        PropertyItemMeta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            meta\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PropertyItemMeta\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:395\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:387\n                                \n                            \n\n                \n                    \n                        setvalue(val: any)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:391\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {\n    AfterContentInit, AfterViewInit, ChangeDetectorRef,\n    Component,\n    ContentChildren, ElementRef,\n    Input,\n    QueryList,\n    TemplateRef, ViewChildren\n} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {NgxTemplate} from 'ngx-template';\nimport {PropertyItemMeta} from './property-item-meta';\n\n@Component({\n    selector: 'ngx-property-grid',\n    template: `\n        \n            \n                \n                    \n                    \n                        \n                            {{group.name}}\n                        \n\n                        \n                            \n                                \n                                    {{item.name}}\n                                    [?]\n                                \n                                \n                                    \n                                    \n                                \n                            \n                            \n                                \n                            \n                        \n                    \n                    \n                \n            \n\n            \n                \n                    {{item.name}}\n                \n                \n                \n            \n        \n\n\n        \n            \n                \n                \n\n                \n                \n            \n        \n\n\n        \n\n            \n                \n            \n\n            \n                \n            \n\n            \n                \n            \n\n            \n                {{p.value}}\n            \n\n            \n                \n            \n\n            \n                \n                    \n                        {{optionLabel(option)}}\n                    \n                \n            \n        \n    `,\n    styles: [\n            `\n            .property-grid {\n                /*border: solid 1px #95B8E7;*/\n            }\n\n            .property-grid-border {\n                border: 1px solid #d6d6d678\n            }\n\n            .property-grid-table {\n                border-spacing: 0;\n                padding: 5px\n            }\n\n            .property-grid-group {\n                background-color: white;\n                font-weight: bold;\n                color: #616161;\n                padding-top: 8px;\n                padding-bottom: 5px;\n            }\n\n            .property-grid-label, .property-grid-control {\n                border: dotted 1px #ccc;\n                padding: 2px 5px;\n            }\n\n            .internal-property-grid {\n                margin-top: 12px;\n            }\n\n            .internal-property-grid .property-grid {\n                border-width: 0;\n            }\n\n            .internal-property-grid .property-grid-header {\n                margin-bottom: 5px;\n                background-color: #f5f5f5;\n                padding-bottom: 5px;\n                padding-top: 5px;\n                padding-left: 5px;\n                box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n                -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n                width: 100%;\n            }\n\n            .internal-property-grid .property-grid-header-margin {\n                margin-left: 5px;\n                margin-right: 5px;\n                width: unset;\n            }\n\n            .internal-property-grid .property-grid-table {\n                border-width: 0;\n                /*border-top: 1px solid #dbdbdb;*/\n            }\n\n            .card {\n                background-color: #fff;\n                box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n                display: flex;\n                flex-flow: row wrap;\n                /*margin: 5px 20px;*/\n                padding: 0;\n            }\n\n            .internal-property-grid ngx-property-grid .card {\n                background-color: unset;\n                box-shadow: unset;\n                display: unset;\n                flex-flow: unset;\n                /*margin: 5px 20px;*/\n                padding: unset;\n            }\n        `\n    ],\n    animations: [\n        trigger('collapseAnimation', [\n            state('hidden', style({\n                height: '0',\n                // overflow: 'hidden',\n            })),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible  hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n        ]),\n        trigger('flyInOut', [\n            state('in', style({transform: 'translateX(0)'})),\n            transition('void => *', [\n                style({transform: 'translateX(-100%)'}),\n                animate(100)\n            ]),\n            transition('* => void', [\n                animate(100, style({transform: 'translateX(100%)'}))\n            ])\n        ])\n    ]\n})\nexport class PropertyGridComponent implements AfterContentInit, AfterViewInit {\n    private _options: any;\n    private _meta: any;\n    private _templateLoaded = false;\n    public get templateLoaded(): boolean {\n        return this._templateLoaded;\n    }\n\n    public readonly isInternal: boolean = false;\n\n    @Input()\n    public templateMap: { [key: string]: TemplateRef };\n\n    @Input()\n    public state: 'hidden' | 'visible' = 'visible';\n\n    @Input()\n    width: string | number;\n\n\n    @Input()\n    labelWidth: string | number = '120px';\n\n    @Input()\n    cardStyle = true;\n\n    @Input()\n    groupCollapse = false;\n\n    @Input()\n    showHelp = true;\n\n    @Input()\n    public set meta(v: any) {\n        this._meta = v;\n        this.initMeta();\n    }\n\n    public get meta(): any {\n        return this._meta;\n    }\n\n    @Input()\n    public set options(v: any) {\n        this._options = v;\n        if (v.__meta__) {\n            this.meta = v.__meta__;\n        }\n    }\n\n    public get options(): any {\n        return this._options;\n    }\n\n    @ViewChildren(NgxTemplate) defaultTemplates: QueryList;\n    @ContentChildren(NgxTemplate) templates: QueryList;\n\n    public groups: InternalGroup[];\n    public subItems: PropertyItemMeta[];\n\n    constructor(el: ElementRef, private cdr: ChangeDetectorRef) {\n        this.isInternal = el.nativeElement.parentElement && el.nativeElement.parentElement.classList &&\n            el.nativeElement.parentElement.classList.contains('internal-property-grid');\n    }\n\n    ngAfterViewInit(): void {\n        if (this.isInternal) {\n            this._templateLoaded = true;\n        } else {\n            if (this.defaultTemplates) {\n                this.defaultTemplates.forEach((item) => {\n                    if (!this.templateMap.hasOwnProperty(item.name)) {\n                        this.templateMap[item.name] = item.template;\n                    }\n                });\n                this._templateLoaded = true;\n                this.cdr.detectChanges();\n            }\n        }\n    }\n\n    ngAfterContentInit(): void {\n        if (!this.isInternal) {\n            if (!this.templateMap) {\n                this.templateMap = {};\n            }\n            this.templates.forEach((item) => {\n                this.templateMap[item.name] = item.template;\n            });\n        }\n    }\n\n    public openLink(link: string) {\n        if (link) {\n            window.open(link,  '_blank');\n        }\n    }\n\n    public getTemplate(type: string | any): TemplateRef {\n        if (typeof type === 'string' && this.templateMap) {\n            return type ? this.templateMap[type] : this.templateMap['default'];\n        } else {\n            return undefined;\n        }\n    }\n\n    public propertyValue(meta: PropertyItemMeta): PropertyValue {\n        return new PropertyValue(this.options, meta);\n    }\n\n    public toggle(): void {\n        this.state = this.state === 'visible' ? 'hidden' : 'visible';\n    }\n\n    public convertValue(meta: PropertyItemMeta, val: any): void {\n        this.options[meta.key] = meta.valueConvert ? meta.valueConvert(val) : val;\n    }\n\n    private initMeta(): void {\n        const meta: object = this.meta;\n        if (!meta) {\n            this.subItems = [];\n            return;\n        }\n\n        const groups: InternalGroup[] = [new InternalGroup(undefined)];\n        const subItems: PropertyItemMeta[] = [];\n        for (const i in meta) {\n            if (!meta.hasOwnProperty(i)) {\n                continue;\n            }\n            const v: PropertyItemMeta = meta[i];\n            if (v.hidden) {\n                continue;\n            }\n            if (v.type === 'subItems') {\n                subItems.push(v);\n                continue;\n            }\n\n            let group = groups.find(o => o.name === v.group);\n            if (!group) {\n                group = new InternalGroup(v.group);\n                groups.push(group);\n            }\n            group.items.push(v);\n        }\n        groups.forEach(o => o.items.sort((a, b) => a.order - b.order));\n\n        this.groups = groups.filter(o => o.items.length > 0);\n        this.subItems = subItems;\n    }\n\n    optionLabel(v: any): string {\n        if (typeof v === 'string') {\n            return v;\n        }\n        if (v.text) {\n            return v.text;\n        }\n        if (v.label) {\n            return v.label;\n        }\n        return v;\n    }\n\n    optionValue(v: any): any {\n        return v && v.value ? v.value : v;\n    }\n}\n\nexport class PropertyValue {\n    public get value(): any {\n        return this.o[this.meta.key];\n    }\n\n    public set value(val: any) {\n        this.o[this.meta.key] = this.meta.valueConvert ? this.meta.valueConvert(val) : val;\n    }\n\n    constructor(private o: any, public meta: PropertyItemMeta) {\n    }\n}\n\nexport class InternalGroup {\n    public readonly items: PropertyItemMeta[] = [];\n    public type = 'group';\n\n    public state = true;\n\n    public toggle(): void {\n        this.state = !this.state;\n    }\n\n    constructor(public name: string) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PropertyValueAccess.html":{"url":"interfaces/PropertyValueAccess.html","title":"interface - PropertyValueAccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PropertyValueAccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/custom.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ControlValueAccessor\n            \n\n\n\n\n    \n\n\n    \n        import {\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    Type,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\n\n@Component({\n    selector: 'custom-component',\n    template: '',\n})\nexport class CustomComponent implements OnInit, ICustomDynamicComponent {\n    private readonly _controlValueChangeFn: (value: any) => void;\n    private _value: any;\n\n    @ViewChild('container', { read: ViewContainerRef }) entry;\n    private component: ComponentRef>;\n\n    @Input() componentType: Type;\n\n    @Input()\n    componentOptions: any;\n\n    @Input()\n    set value(v: any) {\n        this._value = v;\n        if (this.component) {\n            this.component.instance.value =  v;\n        }\n    }\n    get value(): any {\n        return this._value;\n    }\n\n    @Output()\n    readonly valueChange: EventEmitter = new EventEmitter();\n\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n        this._controlValueChangeFn = (value: any) => this.onValueChange(value);\n    }\n\n    ngOnInit() {\n        this.buildComponent();\n    }\n\n    private onValueChange(e: any): void {\n        this._value = e;\n        this.valueChange.emit(e);\n    }\n\n    private buildComponent(): void {\n        if (!this.componentType) {\n            return;\n        }\n        try {\n            this.destroyComponent();\n            // this.entry.clear();\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\n            const component = this.entry.createComponent(componentFactory, 0);\n            this.initComponent(component);\n            this.component = component;\n        } catch (e) {\n            console.error('load component error.');\n            console.error(e);\n        }\n    }\n\n    private initComponent(component: ComponentRef) {\n        component.instance.value = this._value;\n        if (component.instance.registerOnChange) {\n            component.instance.registerOnChange(this._controlValueChangeFn);\n        }\n        if (component.instance.valueChange) {\n            component.instance.valueChange.subscribe(this._controlValueChangeFn);\n        }\n\n        if (this.componentOptions) {\n            Object.assign(component.instance, this.componentOptions);\n        }\n    }\n\n    private destroyComponent(): void {\n        if (this.component) {\n            this.component.destroy();\n        }\n    }\n}\n\nexport interface PropertyValueAccess extends ControlValueAccessor, ICustomDynamicComponent {\n}\n\nexport interface ICustomDynamicComponent {\n    value: TValue;\n    valueChange: EventEmitter;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngx-property-grid/src/lib/custom.component.ts\n            \n            component\n            CustomComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/custom.component.ts\n            \n            interface\n            ICustomDynamicComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/custom.component.ts\n            \n            interface\n            PropertyValueAccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-grid.component.ts\n            \n            component\n            PropertyGridComponent\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-grid.component.ts\n            \n            class\n            InternalGroup\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-grid.component.ts\n            \n            class\n            PropertyValue\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-item-meta.ts\n            \n            interface\n            PropertyItemMeta\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-item-meta.ts\n            \n            variable\n            meta\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            ngx-template : ^1.0.5\n        \n            tslib : ^1.10.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgxPropertyGrid\n\n\n\nA small and simple property grid in angular to view/edit POJOs, excellent if you have a \"settings\" object you want to give the user to edit (that's why I have created it). Play online.\nDependencies\n\nangular2+\nngx-template\n\nUsage\n\nImport\n import {PropertyGridModule} from 'ngx-property-grid';\n\n import {NgxTemplateModule} from 'ngx-template'; If you need animation,you should import BrowserAnimationsModule in your app.module.ts.\n\nGetting Started\n\nHtml\n\nBasic  \nTemplate  \n      \n          \n      \n      \n          \n      \n  \n\n\nObject options\n  export class ExampleEditorOptions {\n      @meta({name: 'Font', description: 'The font editor to use', type: SimpleTextEditorComponent, group: 'Editor', hidden: false})\n      font = 'Source Code Pro';\n\n      @meta({name: 'Font size', group: 'Editor', type: 'number', valueConvert: parseInt})\n      fontSize = 14;\n\n      @meta({name: 'Font color', group: 'Editor', type: 'color'})\n      fontColor = '#51f41c';\n\n      @meta({name: 'jQuery', group: 'Plugins', type: 'checkbox'})\n      jQuery = true;\n\n      @meta({name: 'modernizr', description: 'Whether or not to include modernizr on the page', group: 'Plugins', type: 'checkbox'})\n      modernizr = false;\n\n      @meta({\n          name: 'Framework',\n          description: 'Whether to include any additional framework',\n          type: 'options',\n          options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]\n      })\n      framework = 'None';\n  }\n\n\nThe metadata options declare\n\n\n export interface PropertyItemMeta {\n    name: string; // The display name of the property in the grid\n    description?: string; // A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\n    order?: number; // The display order.\n    group?: string; //  The group this property belongs to\n    hidden?: boolean; // Whether this property should be hidden in the grid, default is false (can be omitted).\n    initState?: string; // - hidden/visible. If hidden then subItems should init by hidden state. default is hidden\n    type?: 'color' | 'date' | 'checkbox' | 'text' | 'options' | string | Type>;\n    // options: boolean number options label color,\n    // or an custom component should be implement ControlValueAccessor or ICustomDynamicComponent\n    options?: any; // options for type\n    colSpan2?: boolean; //  - true/false. If true then property input will span both columns and will have no name/label\n    // (useful for textarea custom type)\n    valueConvert?: (value: any) => any; // convert the value, eg. parseInt\n}\nThe result would be (live demo):\n\n\nThe metadata object\nAs seen from the example above the metadata object can be used (it's optional) in order to describe the object properties.\nEach proprty in the metadata object could have the following:\n\nname - The display name of the property in the grid \ndescription - A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\nhidden - Whether this property should be hidden in the grid, default is false (can be omitted).\ngroup - The group this property belongs to\ntype - The type of the property, supported are:\nboolean or checkbox - A checkbox would be used\nnumber -  simple textbox\ncolor - simple textbox\noptions - A dropdown list would be used in case the metadata contains the options array property\nlabel - A label will be used, useful for uneditable / read-only properties\n\n\ncolspan2 - true/false. If true then property input will span both columns and will have no name/label (useful for textarea custom type)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 YISH\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        PropertyGridModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyGridModule\n\n\n\ncluster_PropertyGridModule_declarations\n\n\n\ncluster_PropertyGridModule_exports\n\n\n\n\nCustomComponent\n\nCustomComponent\n\n\n\nPropertyGridModule\n\nPropertyGridModule\n\nPropertyGridModule -->\n\nCustomComponent->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent\n\nPropertyGridComponent\n\nPropertyGridModule -->\n\nPropertyGridComponent->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent \n\nPropertyGridComponent \n\nPropertyGridComponent  -->\n\nPropertyGridModule->PropertyGridComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            meta   (projects/.../property-item-meta.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-property-grid/src/lib/property-item-meta.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            meta\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (itemMeta: PropertyItemMeta) =>\n    (target: any, key: PropertyKey) => {\n\n        // region [adjust]\n        (itemMeta as any).key = key;\n        if (typeof itemMeta.type === 'string') {\n\n        } else {\n\n        }\n        if (!itemMeta.type) {\n            itemMeta.type = 'text';\n        }\n\n        if (itemMeta.type === 'number' && !itemMeta.valueConvert) {\n            itemMeta.valueConvert = parseInt;\n        }\n\n        if (!itemMeta.initState) {\n            itemMeta.initState = 'hidden';\n        }\n        if (!itemMeta.order) {\n            itemMeta.order = Number.MAX_VALUE;\n        }\n        if (itemMeta.showHelp === undefined) {\n            itemMeta.showHelp = true;\n        }\n        // endregion\n\n        let __meta__ = target.__meta__;\n        if (!__meta__) {\n            __meta__ = {};\n            target.__meta__ = __meta__;\n        } else if (target.__proto__.__meta__ === __meta__) {\n            const subMeta = Object.create(Object.getPrototypeOf(__meta__));\n            Object.getOwnPropertyNames(__meta__).forEach(name => {\n                Object.defineProperty(subMeta, name, Object.getOwnPropertyDescriptor(__meta__, name));\n            });\n            __meta__ = subMeta;\n            target.__meta__ = __meta__;\n        }\n\n        Object.defineProperty(__meta__, key, {\n            enumerable: true,\n            get: () => itemMeta,\n            set: (v) => itemMeta = v\n        });\n    }\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
