var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.163,1,0.855]],["body/components/AppComponent.html",[0,0.282,1,1.35,2,0.345,3,0.41,4,0.847,5,1.543,6,1.543,7,0.24,8,1.358,9,1.204,10,1.379,11,2.25,12,2.175,13,2.175,14,2.175,15,2.175,16,2.175,17,0.403,18,0.753,19,1.514,20,2.734,21,1.791,22,1.394,23,1.35,24,3.602,25,2.334,26,0.617,27,0.045,28,0.678,29,0.714,30,0.94,31,0.991,32,2.555,33,1.543,34,2.175,35,2.555,36,2.555,37,0.564,38,1.75,39,0.345,40,0.94,41,0.747,42,1.358,43,1.358,44,1.914,45,1.358,46,1.914,47,1.358,48,0.425,49,0.18,50,0.678,51,1.543,52,2.181,53,1.107,54,0.53,55,1.072,56,1.75,57,1.079,58,1.788,59,1.75,60,0.957,61,1.072,62,1.562,63,1.107,64,1.597,65,0.956,66,1.358,67,1.358,68,2.808,69,1.358,70,1.511,71,1.348,72,1.914,73,0.957,74,1.074,75,1.358,76,1.358,77,1.914,78,1.914,79,1.348,80,2.216,81,1.348,82,1.697,83,1.358,84,2.216,85,1.358,86,0.747,87,0.762,88,1.914,89,1.358,90,1.358,91,1.358,92,1.358,93,2.175,94,2.537,95,2.883,96,1.543,97,1.9,98,1.358,99,1.358,100,1.543,101,1.543,102,0.957,103,1.543,104,2.175,105,0.957,106,1.543,107,2.518,108,2.175,109,1.543,110,1.543,111,2.518,112,1.543,113,0.854,114,1.072,115,1.072,116,0.956,117,2.938,118,3.602,119,1.697,120,1.072,121,1.914,122,1.511,123,1.348,124,2.734,125,1.543,126,1.543,127,0.762,128,0.854,129,1.543,130,0.762,131,1.072,132,1.543,133,0.678,134,1.358,135,1.543,136,0.027,137,0.027]],["title/components/CustomComponent.html",[0,0.163,127,0.855]],["body/components/CustomComponent.html",[0,0.314,1,0.703,2,0.319,3,0.269,4,0.8,5,1.424,6,1.424,7,0.221,9,1.111,10,1.32,11,1.603,17,0.372,18,0.629,21,0.789,22,0.789,23,1.655,26,0.624,27,0.045,29,0.784,30,0.49,33,1.424,37,0.46,38,1.943,39,0.319,41,0.906,48,0.375,49,0.094,50,1.351,52,0.99,53,0.626,54,0.706,55,1.833,57,1.032,63,1.059,86,0.906,87,1.19,120,0.99,121,1.808,122,1.427,123,1.274,124,2.637,125,1.424,126,1.424,127,1.302,128,1.334,129,1.424,130,0.703,131,0.99,132,1.424,133,0.626,134,1.254,135,1.424,136,0.026,137,0.026,138,1.158,139,1.424,140,2.771,141,2.379,142,1.833,143,3.033,144,3.033,145,3.033,146,2.363,147,3.033,148,3.033,149,3.402,150,3.033,151,3.402,152,1.439,153,3.033,154,2.359,155,3.35,156,3.402,157,2.058,158,2.359,159,2.359,160,3.402,161,1.924,162,2.359,163,2.209,164,2.359,165,2.363,166,3.453,167,2.359,168,2.359,169,2.363,170,2.359,171,2.771,172,2.775,173,2.359,174,2.359,175,2.359,176,1.424,177,2.363,178,2.359,179,1.924,180,2.359,181,1.924,182,1.88,183,2.363,184,1.603,185,1.111,186,1.638,187,1.424,188,0.99,189,1.111,190,3.033,191,2.771,192,1.638,193,1.111,194,1.638,195,1.638,196,1.638,197,1.638,198,1.638,199,1.638,200,1.638,201,1.638,202,1.014,203,1.638,204,1.638,205,1.638,206,0.703,207,1.638,208,1.638,209,1.638,210,1.638,211,1.638,212,1.638,213,1.638,214,1.638,215,1.638,216,1.638,217,2.363,218,1.638,219,1.638,220,0.8,221,1.254,222,1.254,223,1.638]],["title/classes/ExampleEditorOptions.html",[49,0.114,56,1.203]],["body/classes/ExampleEditorOptions.html",[0,0.24,1,0.778,2,0.353,3,0.481,4,0.614,7,0.245,8,1.387,10,0.97,11,1.722,12,1.576,13,1.576,14,1.576,15,1.576,16,1.576,17,0.412,18,0.577,19,1.222,20,1.576,21,1.667,22,0.873,23,1.487,25,1.988,26,0.63,27,0.045,28,1.324,29,0.837,30,0.876,31,1.102,34,1.576,37,0.57,38,1.77,39,0.353,40,1.117,41,0.759,42,1.387,43,1.387,44,1.943,45,1.387,46,1.943,47,1.387,48,0.429,49,0.191,50,0.693,51,1.576,52,2.149,53,0.97,54,0.542,55,1.095,56,1.918,57,0.999,58,1.957,59,1.77,60,0.977,61,1.095,62,1.712,63,1.12,64,1.604,65,0.97,66,1.943,67,1.943,68,2.822,69,1.387,70,1.534,71,1.369,72,2.558,73,1.369,74,1.09,75,2.429,76,1.943,77,2.558,78,1.943,79,1.58,80,2.651,81,1.369,82,1.722,83,1.387,84,2.651,85,1.387,86,0.759,87,0.778,88,2.242,89,1.387,90,1.387,91,1.387,92,1.387,93,2.207,94,2.558,95,2.906,96,1.576,97,1.918,98,1.387,99,1.387,100,1.576,101,1.576,102,0.977,103,1.576,104,2.207,105,0.977,106,1.576,107,2.548,108,2.207,109,1.576,110,1.576,111,1.576,112,1.576,113,0.873,114,1.095,115,1.095,136,0.028,137,0.028,176,3.012,224,2.61,225,2.61,226,1.222,227,2.61,228,2.61,229,2.61,230,2.61]],["title/classes/ExampleStudentOptions.html",[25,1.35,49,0.114]],["body/classes/ExampleStudentOptions.html",[0,0.24,1,0.777,2,0.352,3,0.416,4,0.613,7,0.245,8,1.385,10,0.969,11,1.721,12,1.574,13,1.574,14,1.574,15,1.574,16,1.574,17,0.411,18,0.576,19,1.221,20,1.574,21,1.667,22,0.871,23,1.487,25,2.153,26,0.634,27,0.045,28,1.277,29,0.824,30,0.948,31,1.102,34,1.574,37,0.57,38,1.769,39,0.352,40,1.116,41,0.758,42,1.385,43,1.385,44,1.941,45,1.385,46,1.941,47,1.385,48,0.429,49,0.191,50,0.692,51,1.574,52,2.257,53,0.969,54,0.541,55,1.094,56,2.092,57,1.084,58,1.801,59,1.769,60,0.976,61,1.094,62,1.579,63,1.119,64,1.604,65,0.969,66,1.385,67,1.385,68,2.821,69,1.385,70,1.532,71,1.368,72,1.941,73,0.976,74,1.089,75,1.385,76,1.385,77,1.941,78,1.941,79,1.368,80,2.241,81,1.368,82,1.721,83,1.385,84,2.241,85,1.385,86,0.758,87,0.777,88,1.941,89,1.385,90,1.385,91,1.385,92,1.385,93,2.904,94,2.556,95,2.904,96,1.574,97,1.917,98,1.385,99,1.941,100,2.205,101,2.205,102,0.976,103,2.205,104,2.904,105,0.976,106,2.205,107,3.011,108,2.904,109,1.574,110,1.574,111,2.205,112,1.574,113,0.871,114,1.094,115,1.094,136,0.028,137,0.028,176,3.011,226,1.221,231,2.607,232,2.607,233,2.607,234,2.607,235,2.607,236,2.607]],["title/interfaces/ICustomDynamicComponent.html",[41,0.595,220,0.674]],["body/interfaces/ICustomDynamicComponent.html",[0,0.306,2,0.425,3,0.358,4,0.74,7,0.295,10,0.834,17,0.496,18,0.654,26,0.563,27,0.046,29,0.848,30,0.653,37,0.561,38,2.212,39,0.425,41,1.025,48,0.436,49,0.125,50,1.101,54,0.653,55,2.154,63,0.834,87,0.938,127,0.938,128,1.051,136,0.032,137,0.032,138,0.653,139,1.898,140,2.882,141,2.256,142,1.741,143,2.183,144,2.183,145,2.183,147,2.183,148,2.183,150,2.183,152,1.473,153,2.882,155,3.225,163,2.072,165,2.183,166,3.225,169,2.183,171,2.882,177,2.183,182,1.955,183,2.882,184,1.955,185,1.481,186,2.183,187,1.898,188,1.319,189,1.481,190,3.43,191,3.225,192,2.183,193,1.481,194,2.183,195,2.183,196,2.183,197,2.183,198,2.183,199,2.183,200,2.183,201,2.183,202,1.237,203,2.183,204,2.183,205,2.183,206,0.938,207,2.183,208,2.183,209,2.183,210,2.183,211,2.183,212,2.183,213,2.183,214,2.183,215,2.183,216,2.183,217,2.882,218,2.183,219,2.183,220,1.093,221,1.671,222,1.671,223,3.225]],["title/classes/InternalGroup.html",[49,0.114,237,1.523]],["body/classes/InternalGroup.html",[0,0.154,2,0.235,3,0.198,4,0.636,7,0.163,10,0.461,17,0.274,18,0.855,19,1.846,22,0.58,23,1.117,26,0.543,27,0.046,28,0.717,29,0.523,30,0.689,31,1.047,37,0.506,39,0.235,40,0.931,48,0.312,49,0.149,50,1.338,54,0.36,57,0.892,58,0.65,64,1.384,65,0.881,73,0.65,74,1.21,86,0.561,102,0.65,105,0.65,113,1.252,115,1.393,116,1.399,119,0.818,130,0.518,131,1.134,133,0.461,136,0.021,137,0.021,138,0.842,141,1.572,142,1.572,152,1.338,157,0.818,163,1.703,182,2.187,188,1.393,189,0.818,193,0.818,202,1.338,206,1.653,226,0.904,237,1.764,238,1.357,239,1.048,240,1.437,241,1.736,242,2.703,243,1.825,244,1.736,245,1.736,246,1.877,247,1.877,248,1.877,249,1.206,250,1.877,251,2.305,252,1.632,253,1.206,254,1.877,255,1.436,256,2.601,257,1.206,258,1.206,259,1.206,260,1.048,261,1.877,262,1.206,263,1.206,264,1.206,265,3.117,266,2.305,267,3.223,268,1.206,269,1.632,270,1.206,271,2.819,272,1.877,273,3.311,274,3.385,275,2.601,276,1.206,277,1.206,278,1.206,279,1.206,280,1.206,281,2.305,282,0.818,283,0.58,284,1.206,285,1.206,286,2.305,287,2.819,288,2.601,289,1.206,290,2.305,291,1.206,292,1.206,293,1.206,294,2.601,295,2.601,296,2.305,297,2.601,298,3.223,299,2.601,300,1.206,301,1.877,302,1.206,303,1.206,304,1.206,305,2.305,306,1.206,307,1.206,308,1.274,309,2.305,310,1.877,311,2.601,312,1.206,313,1.877,314,2.819,315,1.206,316,1.206,317,1.877,318,1.206,319,1.206,320,1.206,321,1.206,322,1.206,323,1.206,324,1.206,325,1.206,326,1.206,327,1.206,328,0.728,329,1.206,330,1.206,331,1.206,332,1.206,333,1.877,334,1.206,335,1.206,336,1.877,337,1.877,338,1.877,339,1.206,340,1.206,341,1.206,342,1.436,343,1.206,344,1.206,345,1.206,346,1.206,347,1.206,348,1.206,349,1.206,350,1.206,351,1.877,352,1.877,353,1.206,354,1.206,355,1.206,356,1.206,357,1.206,358,1.206,359,1.206,360,1.206,361,1.206,362,1.274,363,1.206,364,1.206,365,1.877,366,1.206,367,2.305,368,1.206,369,1.206,370,1.206,371,1.206,372,1.877,373,1.877,374,1.206,375,1.206,376,2.305,377,1.206,378,1.206,379,1.206,380,1.206,381,1.206,382,1.206,383,1.206,384,1.206,385,1.206,386,1.206,387,1.206,388,1.206,389,1.206,390,1.206,391,1.206,392,1.206,393,1.206,394,1.206,395,1.206,396,1.206,397,1.206,398,1.206,399,1.877,400,1.877,401,1.206,402,1.877,403,1.877,404,1.206,405,1.206,406,1.206,407,1.048]],["title/interfaces/InternalPropertyItemMeta.html",[220,0.674,243,1.073]],["body/interfaces/InternalPropertyItemMeta.html",[0,0.175,2,0.416,3,0.351,7,0.289,17,0.485,18,0.857,21,1.029,26,0.581,27,0.046,28,1.086,29,0.645,31,1.141,37,0.662,39,0.416,40,0.639,41,0.849,48,0.431,54,0.639,57,0.849,59,1.717,60,1.532,61,1.292,62,1.153,63,0.817,64,1.22,65,1.391,70,1.292,71,1.532,74,0.918,79,1.153,81,1.153,86,0.849,87,0.918,97,1.717,113,1.029,114,1.292,116,1.22,122,1.292,128,1.368,136,0.031,137,0.031,138,0.639,152,0.918,184,1.928,185,1.45,202,1.22,206,0.918,220,1.081,222,2.174,226,1.536,238,1.029,240,1.029,243,1.721,255,1.636,282,1.45,283,1.029,308,1.928,328,2.055,408,1.859,409,2.055,410,3.64,411,1.45,412,1.45,413,2.138,414,2.138,415,2.138,416,2.841,417,2.138,418,2.138,419,2.138,420,2.511,421,2.138,422,2.138,423,2.138,424,2.138,425,2.138,426,2.138,427,2.138,428,2.841,429,2.841,430,2.138,431,2.841,432,2.841,433,3.401,434,3.192,435,2.138,436,2.138,437,2.138,438,2.841,439,2.841,440,2.841,441,2.138,442,2.138]],["title/components/PropertyGridComponent.html",[0,0.163,130,0.855]],["body/components/PropertyGridComponent.html",[0,0.188,1,0.349,2,0.158,3,0.133,4,0.843,5,0.707,6,0.707,7,0.11,9,0.552,10,1.011,11,0.926,17,0.185,18,0.861,19,1.802,21,0.391,22,0.391,23,1.573,26,0.587,27,0.045,28,0.673,29,0.469,30,0.527,31,0.915,33,0.707,37,0.402,39,0.158,40,0.937,48,0.238,49,0.101,50,1.368,52,0.491,53,0.311,54,0.408,57,0.937,58,0.735,64,1.192,65,0.673,73,0.735,74,1.28,86,0.937,102,0.438,105,0.735,113,1.273,115,1.247,116,1.425,119,0.552,120,0.491,121,1.044,122,0.824,123,0.735,124,1.794,125,0.707,126,0.707,127,0.349,128,0.391,129,0.707,130,0.886,131,1.389,132,0.707,133,0.521,134,0.622,135,0.707,136,0.015,137,0.015,138,1.1,141,1.801,142,1.247,146,1.364,152,1.239,157,1.883,163,1.894,176,1.186,182,2.127,188,1.065,189,0.552,193,0.552,202,1.136,206,1.672,226,0.993,237,1.044,238,1.772,239,0.707,240,0.848,243,1.756,246,1.762,247,1.762,248,2.064,249,1.364,250,2.064,251,2.645,252,1.532,253,1.364,254,1.364,255,1.579,256,2.299,257,0.813,258,0.813,259,0.813,260,0.707,261,2.489,262,1.762,263,1.762,264,1.762,265,3.256,266,2.489,267,3.353,268,1.364,269,1.794,270,1.364,271,2.981,272,2.064,273,3.433,274,3.499,275,2.775,276,1.364,277,1.364,278,1.364,279,1.364,280,1.364,281,2.489,282,0.926,283,0.657,284,1.364,285,1.364,286,2.489,287,2.981,288,2.775,289,1.364,290,2.645,291,1.364,292,1.364,293,1.364,294,2.775,295,2.775,296,2.489,297,2.775,298,3.353,299,2.775,300,1.364,301,2.064,302,1.364,303,1.364,304,1.364,305,2.489,306,1.364,307,1.364,308,1.4,309,2.489,310,2.064,311,2.775,312,1.364,313,2.064,314,2.981,315,0.813,316,0.813,317,1.364,318,0.813,319,0.813,320,0.813,321,0.813,322,0.813,323,0.813,324,0.813,325,2.064,326,2.064,327,2.064,328,1.065,329,1.762,330,1.762,331,1.364,332,0.813,333,1.364,334,0.813,335,0.813,336,1.364,337,1.364,338,1.364,339,0.813,340,2.064,341,0.813,342,1.579,343,1.364,344,1.762,345,0.813,346,0.813,347,2.064,348,0.813,349,0.813,350,0.813,351,1.364,352,1.364,353,0.813,354,2.064,355,0.813,356,1.364,357,0.813,358,0.813,359,0.813,360,0.813,361,1.364,362,1.56,363,0.813,364,2.064,365,1.364,366,1.364,367,2.299,368,0.813,369,0.813,370,0.813,371,2.064,372,1.364,373,1.364,374,0.813,375,0.813,376,1.762,377,0.813,378,0.813,379,0.813,380,0.813,381,0.813,382,0.813,383,0.813,384,0.813,385,0.813,386,0.813,387,0.813,388,0.813,389,0.813,390,0.813,391,0.813,392,0.813,393,0.813,394,0.813,395,0.813,396,0.813,397,1.364,398,0.813,399,1.364,400,1.364,401,1.364,402,1.364,403,1.364,404,0.813,405,0.813,406,0.813,407,0.707,443,1.964,444,1.964,445,1.964,446,1.964,447,1.964,448,1.171,449,1.171,450,1.964,451,1.964,452,1.171,453,1.171,454,1.171,455,1.171,456,1.171,457,1.171,458,1.171,459,1.171,460,1.171,461,1.171,462,1.171,463,1.171,464,1.171,465,1.171,466,1.171,467,1.171,468,1.171,469,1.171,470,1.171,471,1.171,472,1.171,473,1.171,474,1.171,475,1.171]],["title/injectables/PropertyGridControlProvider.html",[476,1.731,477,1.523]],["body/injectables/PropertyGridControlProvider.html",[0,0.292,2,0.469,3,0.396,7,0.326,17,0.548,18,0.698,19,1.881,23,1.53,26,0.646,27,0.045,28,1.174,29,0.698,30,1.011,31,1.124,37,0.469,39,0.469,48,0.416,49,0.138,50,1.293,57,0.919,63,1.361,86,0.919,116,1.406,136,0.034,137,0.034,138,1.1,141,2.044,142,2.044,146,3.074,157,2.085,163,1.457,202,1.036,238,1.771,283,1.771,342,2.589,411,1.636,476,2.941,477,2.589,478,2.412,479,5.13,480,4.426,481,4.426,482,4.426,483,3.473,484,4.426,485,3.473,486,5.298,487,3.473,488,3.473,489,3.473,490,3.473,491,3.473]],["title/modules/PropertyGridModule.html",[492,1.203,493,1.523]],["body/modules/PropertyGridModule.html",[2,0.479,3,0.404,7,0.333,18,0.841,27,0.044,37,0.756,39,0.479,40,0.931,41,0.931,48,0.519,49,0.141,116,0.941,120,1.487,127,1.624,130,1.723,133,1.527,136,0.034,137,0.034,138,0.736,240,1.499,260,2.14,283,1.185,362,1.67,409,1.487,411,2.113,412,2.435,413,3.114,477,2.383,492,1.881,493,3.058,494,1.67,495,3.415,496,2.462,497,2.892,498,2.892,499,2.892,500,3.114,501,2.462,502,2.14,503,3.545,504,3.658,505,4.484,506,4.484,507,3.545,508,3.658,509,4.484,510,4.484,511,2.892,512,2.892,513,3.545]],["title/interfaces/PropertyItemMeta.html",[220,0.674,409,1.203]],["body/interfaces/PropertyItemMeta.html",[0,0.155,2,0.37,3,0.312,7,0.257,17,0.431,18,0.834,21,0.914,26,0.655,27,0.045,28,1.002,29,0.596,31,1.18,37,0.63,39,0.37,40,0.568,41,0.784,48,0.406,54,0.568,57,1.016,59,2.054,60,1.414,61,1.957,62,1.024,63,1.238,64,1.46,65,1.424,70,1.957,71,1.414,74,0.816,79,1.024,81,1.024,86,1.199,87,1.391,97,2.054,113,0.914,114,1.957,116,1.148,122,1.147,128,1.262,136,0.029,137,0.029,138,0.568,152,0.816,172,3.081,184,1.779,185,1.289,202,1.126,206,0.816,220,1.018,222,1.453,226,1.636,238,0.914,240,0.914,243,1.414,255,1.453,282,1.289,283,0.914,308,1.779,328,2.218,408,1.651,409,1.957,410,3.004,411,1.289,412,1.289,413,1.899,414,1.899,415,1.899,416,2.623,417,1.899,418,1.899,419,1.899,420,2.231,421,1.899,422,1.899,423,1.899,424,1.899,425,1.899,426,1.899,427,1.899,428,2.623,429,2.623,430,1.899,431,2.623,432,2.623,433,3.239,434,3.004,435,1.899,436,1.899,437,1.899,438,2.623,439,2.623,440,2.623,441,1.899,442,1.899]],["title/directives/PropertyItemTemplateDirective.html",[123,1.073,133,0.761]],["body/directives/PropertyItemTemplateDirective.html",[2,0.533,3,0.45,4,1.294,7,0.37,9,1.859,10,1.272,17,0.622,18,0.756,19,1.602,22,1.319,23,1.539,26,0.588,27,0.044,31,0.994,37,0.533,39,0.533,48,0.37,49,0.157,57,0.994,86,0.819,123,1.932,133,1.272,134,2.852,136,0.036,137,0.036,138,1.114,152,1.539,157,1.859,238,1.794,240,1.794,252,3.376,407,2.382,514,3.219,515,3.946,516,4.792,517,3.946,518,3.946]],["title/classes/PropertyValue.html",[49,0.114,362,1.35]],["body/classes/PropertyValue.html",[0,0.155,2,0.237,3,0.2,4,0.641,7,0.165,10,0.466,17,0.277,18,0.856,19,1.814,22,0.587,23,1.124,26,0.465,27,0.046,29,0.43,30,0.694,31,0.896,33,1.06,37,0.509,39,0.237,40,1.049,48,0.314,49,0.15,50,1.36,54,0.364,57,0.694,58,0.657,64,1.344,65,0.887,73,0.657,74,1.217,86,0.694,102,0.657,105,0.657,113,1.26,115,1.402,116,1.402,119,0.827,130,0.523,131,1.144,133,0.466,136,0.021,137,0.021,138,0.847,141,1.581,142,1.144,152,1.344,157,1.285,163,1.812,179,1.432,181,1.432,182,2.195,188,1.402,189,0.827,193,0.827,202,1.344,206,1.655,226,0.911,237,1.449,238,1.364,239,1.06,240,1.117,243,1.893,246,1.893,247,1.893,248,1.893,249,1.219,250,1.893,251,2.321,252,1.646,253,1.219,254,1.893,255,1.449,256,2.617,257,1.219,258,1.219,259,1.219,260,1.06,261,1.893,262,1.219,263,1.219,264,1.219,265,3.129,266,2.321,267,3.235,268,1.219,269,1.646,270,1.219,271,2.833,272,1.893,273,3.322,274,3.396,275,2.617,276,1.219,277,1.219,278,1.219,279,1.219,280,1.219,281,2.321,282,0.827,283,0.587,284,1.219,285,1.219,286,2.321,287,2.833,288,2.617,289,1.219,290,2.321,291,1.219,292,1.219,293,1.219,294,2.617,295,2.617,296,2.321,297,2.617,298,3.235,299,2.617,300,1.219,301,1.893,302,1.219,303,1.219,304,1.219,305,2.321,306,1.219,307,1.219,308,1.285,309,2.321,310,1.893,311,2.617,312,1.219,313,1.893,314,2.833,315,1.219,316,1.219,317,1.893,318,1.219,319,1.219,320,1.219,321,1.219,322,1.219,323,1.219,324,1.219,325,1.219,326,1.219,327,1.219,328,0.737,329,1.219,330,1.219,331,1.219,332,1.219,333,1.893,334,1.219,335,1.219,336,1.893,337,1.893,338,1.893,339,1.219,340,1.219,341,1.219,342,1.449,343,1.219,344,1.219,345,1.219,346,1.219,347,1.219,348,1.219,349,1.219,350,1.219,351,1.893,352,1.893,353,1.219,354,1.219,355,1.219,356,1.219,357,1.219,358,1.219,359,1.219,360,1.219,361,1.219,362,1.575,363,1.219,364,1.219,365,1.893,366,1.219,367,2.617,368,1.219,369,1.219,370,1.219,371,1.219,372,1.893,373,1.893,374,1.219,375,1.219,376,2.321,377,1.219,378,1.219,379,1.219,380,1.219,381,1.219,382,1.219,383,1.219,384,1.219,385,1.219,386,1.219,387,1.219,388,1.219,389,1.219,390,1.219,391,1.219,392,1.219,393,1.219,394,1.219,395,1.219,396,1.219,397,1.219,398,1.219,399,1.893,400,1.893,401,1.219,402,1.893,403,1.893,404,1.219,405,1.219,406,1.893,407,1.06,519,1.756,520,1.756,521,1.756,522,1.756,523,1.756]],["title/interfaces/PropertyValueAccess.html",[220,0.674,221,1.523]],["body/interfaces/PropertyValueAccess.html",[0,0.307,2,0.435,3,0.367,4,0.757,7,0.302,10,0.854,26,0.48,27,0.046,29,0.786,30,0.668,37,0.569,38,2.091,39,0.435,41,0.975,48,0.441,49,0.128,50,1.118,54,0.668,55,1.768,63,0.854,87,0.96,127,0.96,128,1.076,136,0.032,137,0.032,138,0.668,139,1.943,140,2.926,141,2.269,142,1.768,143,2.235,144,2.235,145,2.235,147,2.235,148,2.235,150,2.235,152,1.486,153,2.926,155,3.262,163,2.091,165,2.235,166,3.262,169,2.235,171,2.926,177,2.235,182,1.985,183,2.926,184,2.213,185,1.516,186,2.235,187,1.943,188,1.35,189,1.516,190,3.461,191,3.262,192,2.235,193,1.516,194,2.235,195,2.235,196,2.235,197,2.235,198,2.235,199,2.235,200,2.235,201,2.235,202,1.256,203,2.235,204,2.235,205,2.235,206,0.96,207,2.235,208,2.235,209,2.235,210,2.235,211,2.235,212,2.235,213,2.235,214,2.235,215,2.235,216,2.235,217,2.926,218,2.235,219,2.235,220,1.105,221,2.239,222,2.239,223,2.235]],["title/modules/ShowcaseModule.html",[492,1.203,524,1.731]],["body/modules/ShowcaseModule.html",[1,1.712,2,0.471,3,0.397,7,0.327,27,0.044,37,0.772,39,0.471,42,1.852,43,1.852,44,2.593,45,2.593,46,2.593,47,2.357,48,0.416,49,0.138,53,1.48,120,1.462,131,1.462,136,0.034,137,0.034,185,1.642,412,2.09,492,1.861,493,2.881,494,1.642,495,3.388,496,3.388,500,3.08,501,2.42,502,2.104,504,3.618,508,3.618,511,3.618,512,2.843,524,3.448,525,2.843,526,2.843,527,3.485,528,2.843,529,3.485,530,4.879,531,4.436,532,4.879,533,4.436,534,2.843,535,3.485,536,4.436,537,4.436,538,4.436,539,4.436,540,4.436,541,4.436,542,4.436,543,4.436,544,4.436,545,4.436,546,3.485,547,3.485]],["title/components/SimpleTextEditorComponent.html",[0,0.163,53,0.761]],["body/components/SimpleTextEditorComponent.html",[0,0.285,1,1.102,2,0.358,3,0.421,4,0.869,5,1.6,6,1.6,7,0.249,8,1.408,9,1.249,10,1.392,11,2.28,12,1.6,13,1.6,14,1.6,15,1.6,16,1.6,17,0.418,18,0.671,19,1.235,20,1.6,21,1.754,22,0.886,23,1.102,25,2.004,26,0.621,27,0.045,28,0.703,29,0.811,30,0.955,31,1.004,34,1.6,37,0.575,38,2.103,39,0.358,40,0.955,41,0.883,42,1.408,43,1.408,44,1.964,45,1.408,46,1.964,47,1.408,48,0.432,49,0.183,50,0.703,51,1.6,52,2.236,53,1.284,54,0.767,55,1.931,56,1.785,57,1.089,58,1.812,59,1.785,60,0.992,61,1.112,62,1.593,63,1.129,64,1.609,65,0.981,66,1.408,67,1.408,68,2.832,69,1.408,70,1.55,71,1.383,72,1.964,73,0.992,74,1.102,75,1.408,76,1.408,77,1.964,78,1.964,79,1.383,80,2.261,81,1.383,82,1.741,83,1.408,84,2.261,85,1.408,86,0.767,87,0.79,88,1.964,89,1.408,90,1.408,91,1.408,92,1.408,93,2.231,94,2.572,95,2.922,96,1.6,97,1.931,98,1.408,99,1.408,100,1.6,101,1.6,102,0.992,103,1.6,104,2.231,105,0.992,106,1.6,107,2.569,108,2.231,109,1.6,110,1.6,111,1.6,112,1.6,113,0.886,114,1.112,115,1.112,120,1.112,121,1.964,122,1.55,123,1.383,124,2.779,125,1.6,126,1.6,127,0.79,128,0.886,129,1.6,130,0.79,131,1.112,132,1.6,133,0.703,134,1.408,135,1.6,136,0.028,137,0.028,548,2.651,549,2.651]],["title/coverage.html",[550,3.182]],["body/coverage.html",[0,0.29,1,1.018,7,0.321,8,2.709,25,1.609,26,0.389,27,0.045,30,0.709,40,0.709,41,0.709,49,0.202,53,0.906,56,1.433,116,1.162,123,1.279,127,1.018,130,1.018,133,0.906,136,0.033,137,0.033,138,1.188,139,2.918,206,1.75,220,1.199,221,1.815,237,1.815,238,1.875,239,2.918,240,1.704,243,1.279,269,2.062,283,1.464,362,1.609,408,2.918,409,1.433,411,1.609,476,2.062,477,1.815,478,3.041,514,2.786,550,2.786,551,2.786,552,3.416,553,3.416,554,3.416,555,4.834,556,5.484,557,4.379,558,3.745,559,3.416,560,3.416,561,3.416,562,4.379,563,4.379,564,2.786,565,3.572,566,2.786,567,3.572,568,2.786,569,2.786,570,3.416]],["title/dependencies.html",[494,1.623,571,2.4]],["body/dependencies.html",[27,0.04,136,0.04,137,0.04,494,2.176]],["title/index.html",[17,0.378,572,1.957,573,1.957]],["body/index.html",[0,0.214,3,0.31,4,0.641,9,2.303,18,0.888,21,1.557,26,0.625,27,0.044,28,0.999,29,0.734,31,1.014,40,0.565,41,0.565,48,0.354,49,0.108,52,1.954,53,0.723,54,0.565,56,1.143,57,1.014,58,1.83,59,2.174,60,2.032,61,1.58,62,1.744,63,1.145,64,1.599,65,1.297,66,1.448,67,1.448,68,2.598,69,1.448,70,1.58,71,1.41,72,1.448,73,1.02,74,1.389,75,1.448,76,1.448,77,2.001,78,2.001,79,1.616,80,2.294,81,1.744,82,1.774,83,1.448,84,2.294,85,1.448,86,1.096,87,0.812,88,2.001,89,1.448,90,2.475,91,1.448,92,1.448,94,1.448,97,1.811,114,1.143,116,1.297,117,3.072,119,2.303,121,1.448,122,1.58,128,1.443,136,0.033,137,0.029,152,1.123,184,1.283,187,1.645,188,1.143,220,0.641,226,1.557,282,2.034,308,2.034,328,1.954,342,1.448,409,1.143,414,2.615,415,2.615,416,3.234,417,2.615,418,2.615,419,1.892,421,2.615,422,2.615,423,2.615,424,2.615,425,2.615,426,1.892,427,1.892,494,1.283,574,2.724,575,2.724,576,4.317,577,2.724,578,2.724,579,2.724,580,2.724,581,2.724,582,2.724,583,2.724,584,2.724,585,2.724,586,2.724,587,2.724,588,2.724,589,4.657,590,2.724,591,3.766,592,2.724,593,2.724,594,2.222,595,2.724,596,2.724,597,2.724,598,2.724,599,2.222,600,2.222,601,3.766,602,2.724,603,2.724,604,2.724,605,2.724,606,2.724,607,2.724]],["title/license.html",[572,1.957,573,1.957,608,1.957]],["body/license.html",[7,0.36,27,0.036,60,1.763,81,1.436,82,2.401,99,2.038,136,0.036,137,0.036,161,3.129,412,1.807,502,2.316,551,3.129,594,3.129,599,3.129,608,3.129,609,3.836,610,5.097,611,3.836,612,3.836,613,4.71,614,3.836,615,3.836,616,3.836,617,3.836,618,4.71,619,3.836,620,5.315,621,5.724,622,3.836,623,4.71,624,5.097,625,3.836,626,4.71,627,3.836,628,3.836,629,3.836,630,3.836,631,3.836,632,3.836,633,3.836,634,3.836,635,3.836,636,3.836,637,3.836,638,3.836,639,4.71,640,4.71,641,3.836,642,3.836,643,4.71,644,3.836,645,3.836,646,3.836,647,3.836,648,3.836,649,3.836,650,3.836,651,3.836,652,3.836,653,3.836,654,3.836,655,3.836,656,3.836,657,3.836,658,3.836,659,3.836,660,3.836,661,3.836,662,3.836,663,3.836]],["title/modules.html",[492,1.636]],["body/modules.html",[27,0.039,136,0.039,137,0.039,492,1.895,493,2.4,524,2.727,534,4.234,600,4.234,664,5.19,665,5.19]],["title/overview.html",[666,3.182]],["body/overview.html",[0,0.221,1,1.681,27,0.044,48,0.364,49,0.154,53,1.359,98,2.722,102,1.775,105,1.452,120,1.627,123,1.452,127,1.527,130,1.681,133,1.496,136,0.036,137,0.036,220,0.913,412,1.827,476,2.342,492,1.989,493,3.081,494,1.827,495,2.694,496,2.694,497,3.164,498,3.164,499,3.164,500,3.293,501,2.694,502,2.342,524,3.462,525,3.164,526,3.164,528,3.164,666,3.164]],["title/miscellaneous/variables.html",[558,2.392,667,1.957]],["body/miscellaneous/variables.html",[17,0.542,26,0.552,27,0.046,28,1.402,29,0.833,30,0.714,31,0.714,40,1.006,62,1.287,65,0.912,71,1.287,79,1.646,116,1.167,119,2.408,136,0.033,137,0.033,138,0.913,202,1.025,206,1.025,226,1.149,238,1.47,240,1.47,243,1.287,283,1.47,328,1.443,408,2.655,409,1.443,410,3.054,411,2.284,428,2.388,429,3.054,430,2.388,431,3.054,432,3.054,433,3.549,434,3.367,435,2.388,436,2.388,437,2.388,438,3.054,439,3.054,440,3.054,441,2.388,442,2.388,477,1.827,478,3.054,558,2.388,564,2.805,565,4.407,566,2.805,567,2.805,568,3.955,569,3.955,667,2.805,668,4.398,669,4.398,670,3.438,671,3.438,672,3.438,673,3.438,674,4.398]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":206,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.07",{"_index":324,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["0.1",{"_index":299,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["0/1",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":561,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":560,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":559,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":562,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":563,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["08",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["1",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"overview.html":{}}}],["10",{"_index":298,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["10px",{"_index":304,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["12",{"_index":307,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["120px",{"_index":331,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["12px",{"_index":289,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["14",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["18px",{"_index":306,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["19",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["1px",{"_index":267,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["2",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"overview.html":{}}}],["2018",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"license.html":{}}}],["20px",{"_index":313,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["2px",{"_index":286,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["3",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["3px",{"_index":296,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["4",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"overview.html":{}}}],["51f41c",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["5px",{"_index":274,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["616161",{"_index":279,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["6px",{"_index":303,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["8px",{"_index":280,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["95b8e7",{"_index":268,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["_controlvaluechangefn",{"_index":143,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["_map",{"_index":479,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["_meta",{"_index":326,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["_option",{"_index":325,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["_valu",{"_index":144,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["a.ord",{"_index":390,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["abov",{"_index":594,"title":{},"body":{"index.html":{},"license.html":{}}}],["accessor",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["action",{"_index":658,"title":{},"body":{"license.html":{}}}],["actual_compon",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["addit",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["aftercontentinit",{"_index":246,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["afterviewinit",{"_index":247,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["ag",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["and/or",{"_index":633,"title":{},"body":{"license.html":{}}}],["angular",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":259,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["angular/common",{"_index":507,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["angular/cor",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{}}}],["angular/form",{"_index":185,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{}}}],["angular/materi",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{}}}],["angular/platform",{"_index":511,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{}}}],["angularj",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["anim",{"_index":254,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["animate('400m",{"_index":321,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["app.compon",{"_index":535,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["app.component.html",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["app.component.scss",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/PropertyGridComponent.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["aris",{"_index":662,"title":{},"body":{"license.html":{}}}],["array",{"_index":342,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["associ",{"_index":622,"title":{},"body":{"license.html":{}}}],["author",{"_index":652,"title":{},"body":{"license.html":{}}}],["b",{"_index":389,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["b.order",{"_index":391,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["backbon",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["backbone.j",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["background",{"_index":275,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["basic",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["belong",{"_index":417,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["bezier(0.86",{"_index":323,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["birth",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["bold",{"_index":278,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["boolean",{"_index":328,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":496,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"overview.html":{}}}],["border",{"_index":265,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["both",{"_index":422,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["bottom",{"_index":281,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["box",{"_index":294,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["brows",{"_index":665,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":534,"title":{},"body":{"modules/ShowcaseModule.html":{},"modules.html":{}}}],["browser/anim",{"_index":512,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{}}}],["browseranimationsmodul",{"_index":510,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["browsermodul",{"_index":533,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["buildcompon",{"_index":147,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["c",{"_index":611,"title":{},"body":{"license.html":{}}}],["card",{"_index":301,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["case",{"_index":604,"title":{},"body":{"index.html":{}}}],["catch",{"_index":208,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ccc",{"_index":285,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["cdr",{"_index":344,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["changedetectorref",{"_index":248,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["charg",{"_index":617,"title":{},"body":{"license.html":{}}}],["checkbox",{"_index":589,"title":{},"body":{"index.html":{}}}],["claim",{"_index":655,"title":{},"body":{"license.html":{}}}],["class",{"_index":49,"title":{"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["cluster_propertygridmodul",{"_index":497,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["cluster_propertygridmodule_declar",{"_index":498,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["cluster_propertygridmodule_export",{"_index":499,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["cluster_showcasemodul",{"_index":525,"title":{},"body":{"modules/ShowcaseModule.html":{},"overview.html":{}}}],["cluster_showcasemodule_bootstrap",{"_index":528,"title":{},"body":{"modules/ShowcaseModule.html":{},"overview.html":{}}}],["cluster_showcasemodule_declar",{"_index":526,"title":{},"body":{"modules/ShowcaseModule.html":{},"overview.html":{}}}],["cluster_showcasemodule_import",{"_index":527,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["code",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["color",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["colspan2",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["column",{"_index":423,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["commonmodul",{"_index":506,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component'},{'nam",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["component.instance.registeronchang",{"_index":213,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.registeronchange(this._controlvaluechangefn",{"_index":214,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.valu",{"_index":212,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.valuechang",{"_index":215,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.valuechange.subscribe(this._controlvaluechangefn",{"_index":216,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component_templ",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["componentfactori",{"_index":203,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["componentfactoryresolv",{"_index":155,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["componentopt",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["componentref",{"_index":166,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["components/properti",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{}}}],["componenttyp",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["condit",{"_index":638,"title":{},"body":{"license.html":{}}}],["connect",{"_index":663,"title":{},"body":{"license.html":{}}}],["console.error(",{"_index":211,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["console.error('load",{"_index":209,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["const",{"_index":202,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{}}}],["constructor(componentfactoryresolv",{"_index":154,"title":{},"body":{"components/CustomComponent.html":{}}}],["constructor(el",{"_index":343,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["constructor(nam",{"_index":241,"title":{},"body":{"classes/InternalGroup.html":{}}}],["constructor(o",{"_index":519,"title":{},"body":{"classes/PropertyValue.html":{}}}],["constructor(priv",{"_index":193,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["constructor(publ",{"_index":407,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{}}}],["constructor(templ",{"_index":515,"title":{},"body":{"directives/PropertyItemTemplateDirective.html":{}}}],["contain",{"_index":605,"title":{},"body":{"index.html":{}}}],["contentchildren",{"_index":249,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["contentchildren(propertyitemtemplatedirect",{"_index":341,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["context",{"_index":568,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continu",{"_index":376,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["contract",{"_index":659,"title":{},"body":{"license.html":{}}}],["control",{"_index":283,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlvalueaccessor",{"_index":184,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["convert",{"_index":426,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["convertvalu",{"_index":443,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["convertvalue(meta",{"_index":366,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["copi",{"_index":620,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":610,"title":{},"body":{"license.html":{}}}],["coverag",{"_index":550,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":585,"title":{},"body":{"index.html":{}}}],["cubic",{"_index":322,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["custom",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["custom.compon",{"_index":413,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{}}}],["custom_elements_schema",{"_index":532,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["customcompon",{"_index":127,"title":{"components/CustomComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["damag",{"_index":656,"title":{},"body":{"license.html":{}}}],["data",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["date",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["dbdbdb",{"_index":272,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["deal",{"_index":623,"title":{},"body":{"license.html":{}}}],["declar",{"_index":495,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"overview.html":{}}}],["decor",{"_index":176,"title":{},"body":{"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/PropertyGridComponent.html":{}}}],["default",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultprovid",{"_index":411,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultprovider.compon",{"_index":505,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["defaultprovider.getcomponenttype('checkbox",{"_index":436,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["defaultprovider.getcomponenttype('text",{"_index":435,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["defaultprovider.getcomponenttype(m.typ",{"_index":437,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["defaulttempl",{"_index":340,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["defin",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{}}}],["depend",{"_index":494,"title":{"dependencies.html":{}},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["describ",{"_index":596,"title":{},"body":{"index.html":{}}}],["descript",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["destroycompon",{"_index":148,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["direct",{"_index":123,"title":{"directives/PropertyItemTemplateDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"directives/PropertyItemTemplateDirective.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["display",{"_index":308,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["distribut",{"_index":631,"title":{},"body":{"license.html":{}}}],["document",{"_index":551,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["dot",{"_index":284,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["dropdown",{"_index":602,"title":{},"body":{"index.html":{}}}],["e",{"_index":171,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["each",{"_index":597,"title":{},"body":{"index.html":{}}}],["edit",{"_index":583,"title":{},"body":{"index.html":{}}}],["editor",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["eg",{"_index":427,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["el",{"_index":448,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["el.nativeelement.parentelement.classlist.contains('intern",{"_index":346,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["element",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["elementref",{"_index":250,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["entri",{"_index":145,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["entrycompon",{"_index":504,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{}}}],["environ",{"_index":565,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":210,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["event",{"_index":161,"title":{},"body":{"components/CustomComponent.html":{},"license.html":{}}}],["eventemitt",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{}}}],["exampl",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["example/index.html",{"_index":607,"title":{},"body":{"index.html":{}}}],["exampleeditoropt",{"_index":56,"title":{"classes/ExampleEditorOptions.html":{}},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"index.html":{}}}],["examplestudentopt",{"_index":25,"title":{"classes/ExampleStudentOptions.html":{}},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{}}}],["excel",{"_index":579,"title":{},"body":{"index.html":{}}}],["export",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":645,"title":{},"body":{"license.html":{}}}],["extend",{"_index":222,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{}}}],["f5f5f5",{"_index":292,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["fals",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["femal",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["fff",{"_index":302,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"license.html":{}}}],["fit",{"_index":648,"title":{},"body":{"license.html":{}}}],["flex",{"_index":309,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["flow",{"_index":310,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["follow",{"_index":599,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["fontcolor",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["fontsiz",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["formsmodul",{"_index":544,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["framework",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["free",{"_index":616,"title":{},"body":{"license.html":{}}}],["function",{"_index":172,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/PropertyItemMeta.html":{}}}],["furnish",{"_index":636,"title":{},"body":{"license.html":{}}}],["g",{"_index":392,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["g.items.foreach(o",{"_index":395,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["g.name",{"_index":393,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["gender",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["get",{"_index":572,"title":{"index.html":{},"license.html":{}},"body":{}}],["getcomponenttyp",{"_index":480,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["getcomponenttype(typ",{"_index":482,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["getdata",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["getmeta",{"_index":470,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["getopt",{"_index":473,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["gettempl",{"_index":444,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["gettemplate(typ",{"_index":356,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["getvalu",{"_index":179,"title":{},"body":{"components/CustomComponent.html":{},"classes/PropertyValue.html":{}}}],["give",{"_index":581,"title":{},"body":{"index.html":{}}}],["grant",{"_index":615,"title":{},"body":{"license.html":{}}}],["grid",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["grid'},{'nam",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["grid.compon",{"_index":509,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["grid.component.t",{"_index":239,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"coverage.html":{}}}],["grid.component.ts:169",{"_index":465,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:170",{"_index":464,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:171",{"_index":467,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:174",{"_index":453,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:177",{"_index":452,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:180",{"_index":454,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:184",{"_index":449,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:187",{"_index":450,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:192",{"_index":471,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:197",{"_index":451,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:204",{"_index":474,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:208",{"_index":466,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:209",{"_index":469,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:211",{"_index":468,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:212",{"_index":447,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:218",{"_index":459,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:229",{"_index":458,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:235",{"_index":456,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:243",{"_index":462,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:247",{"_index":463,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:251",{"_index":455,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:255",{"_index":457,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:297",{"_index":460,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:310",{"_index":461,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:316",{"_index":522,"title":{},"body":{"classes/PropertyValue.html":{}}}],["grid.component.ts:320",{"_index":523,"title":{},"body":{"classes/PropertyValue.html":{}}}],["grid.component.ts:322",{"_index":520,"title":{},"body":{"classes/PropertyValue.html":{}}}],["grid.component.ts:324",{"_index":521,"title":{},"body":{"classes/PropertyValue.html":{}}}],["grid.component.ts:329",{"_index":244,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:330",{"_index":242,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:332",{"_index":245,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid/custom.component.t",{"_index":139,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["grid/custom.component.ts:20",{"_index":173,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:21",{"_index":174,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:23",{"_index":178,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:24",{"_index":175,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:26",{"_index":159,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:29",{"_index":158,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:32",{"_index":160,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:38",{"_index":180,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:43",{"_index":156,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:50",{"_index":168,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:54",{"_index":170,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:59",{"_index":162,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:76",{"_index":167,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/custom.component.ts:90",{"_index":164,"title":{},"body":{"components/CustomComponent.html":{}}}],["grid/index",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{}}}],["grid/index.t",{"_index":503,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["grid/properti",{"_index":238,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["group.items.push(v",{"_index":386,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["groups.find(o",{"_index":381,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["groups.foreach(o",{"_index":387,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["groups.push(group",{"_index":385,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["header",{"_index":291,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["height",{"_index":317,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["here",{"_index":592,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":614,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["hidden/vis",{"_index":419,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["hint",{"_index":415,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["holder",{"_index":653,"title":{},"body":{"license.html":{}}}],["html",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["icustomdynamiccompon",{"_index":41,"title":{"interfaces/ICustomDynamicComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"index.html":{}}}],["identifi",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["impli",{"_index":646,"title":{},"body":{"license.html":{}}}],["import",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{}}}],["includ",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"license.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{}}}],["inform",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["init",{"_index":420,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{}}}],["initcompon",{"_index":149,"title":{},"body":{"components/CustomComponent.html":{}}}],["initcomponent(compon",{"_index":165,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["initmeta",{"_index":371,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["initst",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["inject",{"_index":476,"title":{"injectables/PropertyGridControlProvider.html":{}},"body":{"injectables/PropertyGridControlProvider.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":152,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["input('propertytyp",{"_index":518,"title":{},"body":{"directives/PropertyItemTemplateDirective.html":{}}}],["interfac",{"_index":220,"title":{"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{}},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["intern",{"_index":287,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["internalgroup",{"_index":237,"title":{"classes/InternalGroup.html":{}},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"coverage.html":{}}}],["internalgroup(undefin",{"_index":374,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["internalgroup(v.group",{"_index":384,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["internalpropertyitemmeta",{"_index":243,"title":{"interfaces/InternalPropertyItemMeta.html":{}},"body":{"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isintern",{"_index":327,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["it'",{"_index":595,"title":{},"body":{"index.html":{}}}],["item",{"_index":240,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["item.nam",{"_index":262,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["item.templ",{"_index":352,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["jqueri",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["json",{"_index":546,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["json.parse(json.stringify(this.stud",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["key",{"_index":410,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":644,"title":{},"body":{"license.html":{}}}],["label",{"_index":282,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["labelwidth",{"_index":330,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["left",{"_index":293,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["legend",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"overview.html":{}}}],["liabil",{"_index":657,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":654,"title":{},"body":{"license.html":{}}}],["licens",{"_index":608,"title":{"license.html":{}},"body":{"license.html":{}}}],["lili",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["limit",{"_index":626,"title":{},"body":{"license.html":{}}}],["list",{"_index":603,"title":{},"body":{"index.html":{}}}],["m",{"_index":429,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["male",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["map",{"_index":486,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["margin",{"_index":288,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["match",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matcheckbox",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{}}}],["matcheckboxmodul",{"_index":537,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["matdatepick",{"_index":530,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["matdatepickermodul",{"_index":539,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["matinputmodul",{"_index":543,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["matnativedatemodul",{"_index":541,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["matradiomodul",{"_index":542,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["matslid",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{}}}],["matslidermodul",{"_index":538,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["matslidetoggl",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{}}}],["matslidetogglemodul",{"_index":540,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["merchant",{"_index":647,"title":{},"body":{"license.html":{}}}],["merg",{"_index":629,"title":{},"body":{"license.html":{}}}],["meta",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["meta(v",{"_index":332,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["meta({nam",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["meta.hasownproperty(i",{"_index":375,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["meta.t",{"_index":408,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meta.valueconvert",{"_index":369,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["meta.valueconvert(v",{"_index":370,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["meta[i",{"_index":377,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"directives/PropertyItemTemplateDirective.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["method",{"_index":146,"title":{},"body":{"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{}}}],["miscellan",{"_index":667,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":609,"title":{},"body":{"license.html":{}}}],["modernizr",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["modifi",{"_index":628,"title":{},"body":{"license.html":{}}}],["modul",{"_index":492,"title":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"modules.html":{}},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["name/label",{"_index":424,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["new",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngaftercontentinit",{"_index":354,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["ngafterviewinit",{"_index":347,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["ngmodul",{"_index":508,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{}}}],["ngoninit",{"_index":150,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ngx",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{}}}],["ngxjsonviewermodul",{"_index":545,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["ngxpropertygrid",{"_index":574,"title":{},"body":{"index.html":{}}}],["none",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["noninfring",{"_index":651,"title":{},"body":{"license.html":{}}}],["noopanimationsmodul",{"_index":536,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["notic",{"_index":639,"title":{},"body":{"license.html":{}}}],["null",{"_index":360,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["number",{"_index":226,"title":{},"body":{"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["o",{"_index":406,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["o.items.sort((a",{"_index":388,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["o.nam",{"_index":382,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["object",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["object.assign(component.inst",{"_index":218,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["obtain",{"_index":619,"title":{},"body":{"license.html":{}}}],["omit",{"_index":418,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["oninit",{"_index":140,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["onlin",{"_index":587,"title":{},"body":{"index.html":{}}}],["onvaluechang",{"_index":151,"title":{},"body":{"components/CustomComponent.html":{}}}],["onvaluechange(",{"_index":169,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["option",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["optionlabel",{"_index":445,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["optionlabel(opt",{"_index":264,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["optionlabel(v",{"_index":397,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["options(v",{"_index":335,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["optionvalu",{"_index":446,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["optionvalue(v",{"_index":401,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["order",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["otherwis",{"_index":661,"title":{},"body":{"license.html":{}}}],["out",{"_index":502,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":153,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["overflow",{"_index":318,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["overview",{"_index":666,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.valu",{"_index":263,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["packag",{"_index":571,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":273,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["page",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["paramet",{"_index":157,"title":{},"body":{"components/CustomComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{}}}],["parseint",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["part",{"_index":590,"title":{},"body":{"index.html":{}}}],["particular",{"_index":649,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":613,"title":{},"body":{"license.html":{}}}],["permit",{"_index":635,"title":{},"body":{"license.html":{}}}],["person",{"_index":618,"title":{},"body":{"license.html":{}}}],["play",{"_index":586,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["pojo",{"_index":578,"title":{},"body":{"index.html":{}}}],["portion",{"_index":642,"title":{},"body":{"license.html":{}}}],["prefer",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["privat",{"_index":141,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["pro",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["product",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properti",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["propertygridcompon",{"_index":130,"title":{"components/PropertyGridComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["propertygridcontrolprovid",{"_index":477,"title":{"injectables/PropertyGridControlProvider.html":{}},"body":{"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["propertygridmodul",{"_index":493,"title":{"modules/PropertyGridModule.html":{}},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"modules.html":{},"overview.html":{}}}],["propertyitemmeta",{"_index":409,"title":{"interfaces/PropertyItemMeta.html":{}},"body":{"interfaces/InternalPropertyItemMeta.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propertyitemtemplatedirect",{"_index":133,"title":{"directives/PropertyItemTemplateDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["propertytyp",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"directives/PropertyItemTemplateDirective.html":{},"components/SimpleTextEditorComponent.html":{}}}],["propertyvalu",{"_index":362,"title":{"classes/PropertyValue.html":{}},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{},"coverage.html":{}}}],["propertyvalue(meta",{"_index":361,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["propertyvalue(this.opt",{"_index":363,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["propertyvalueaccess",{"_index":221,"title":{"interfaces/PropertyValueAccess.html":{}},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["proprti",{"_index":598,"title":{},"body":{"index.html":{}}}],["provid",{"_index":412,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"modules/ShowcaseModule.html":{},"license.html":{},"overview.html":{}}}],["provider.t",{"_index":478,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["provider.ts:12",{"_index":483,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["provider.ts:6",{"_index":487,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["provider.ts:7",{"_index":488,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["provider.ts:8",{"_index":485,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["public",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{}}}],["publish",{"_index":630,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":650,"title":{},"body":{"license.html":{}}}],["querylist",{"_index":251,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["read",{"_index":187,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["readonli",{"_index":142,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["regist",{"_index":481,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["register(typ",{"_index":484,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["requir",{"_index":569,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":501,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"overview.html":{}}}],["restrict",{"_index":625,"title":{},"body":{"license.html":{}}}],["result",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{}}}],["rgba(0",{"_index":305,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["rgba(10",{"_index":297,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["right",{"_index":627,"title":{},"body":{"license.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["root'},{'nam",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["row",{"_index":311,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["row.nam",{"_index":261,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["rows.push(g",{"_index":394,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["rows.push(o",{"_index":396,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["schema",{"_index":531,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["see",{"_index":591,"title":{},"body":{"index.html":{}}}],["seen",{"_index":593,"title":{},"body":{"index.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{}}}],["sell",{"_index":634,"title":{},"body":{"license.html":{}}}],["set",{"_index":188,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["setmeta(v",{"_index":472,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["setoptions(v",{"_index":475,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["setvalue(v",{"_index":181,"title":{},"body":{"components/CustomComponent.html":{},"classes/PropertyValue.html":{}}}],["sex",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["shadow",{"_index":295,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["shall",{"_index":640,"title":{},"body":{"license.html":{}}}],["showcasemodul",{"_index":524,"title":{"modules/ShowcaseModule.html":{}},"body":{"modules/ShowcaseModule.html":{},"modules.html":{},"overview.html":{}}}],["simpl",{"_index":576,"title":{},"body":{"index.html":{}}}],["simpletexteditorcompon",{"_index":53,"title":{"components/SimpleTextEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/PropertyGridComponent.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["size",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["small",{"_index":575,"title":{},"body":{"index.html":{}}}],["softwar",{"_index":621,"title":{},"body":{"license.html":{}}}],["solid",{"_index":266,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"modules/ShowcaseModule.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["space",{"_index":270,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["span",{"_index":416,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["spec\\.t",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../properti",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/components/properti",{"_index":138,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/showcase/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{}}}],["src/app/showcase/app.component.ts:11",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/showcase/app.component.ts:16",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/showcase/app.component.ts:20",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/showcase/app.component.ts:28",{"_index":548,"title":{},"body":{"components/SimpleTextEditorComponent.html":{}}}],["src/app/showcase/app.component.ts:29",{"_index":549,"title":{},"body":{"components/SimpleTextEditorComponent.html":{}}}],["src/app/showcase/app.component.ts:37",{"_index":224,"title":{},"body":{"classes/ExampleEditorOptions.html":{}}}],["src/app/showcase/app.component.ts:40",{"_index":227,"title":{},"body":{"classes/ExampleEditorOptions.html":{}}}],["src/app/showcase/app.component.ts:43",{"_index":225,"title":{},"body":{"classes/ExampleEditorOptions.html":{}}}],["src/app/showcase/app.component.ts:46",{"_index":229,"title":{},"body":{"classes/ExampleEditorOptions.html":{}}}],["src/app/showcase/app.component.ts:54",{"_index":230,"title":{},"body":{"classes/ExampleEditorOptions.html":{}}}],["src/app/showcase/app.component.ts:62",{"_index":228,"title":{},"body":{"classes/ExampleEditorOptions.html":{}}}],["src/app/showcase/app.component.ts:69",{"_index":232,"title":{},"body":{"classes/ExampleStudentOptions.html":{}}}],["src/app/showcase/app.component.ts:72",{"_index":235,"title":{},"body":{"classes/ExampleStudentOptions.html":{}}}],["src/app/showcase/app.component.ts:75",{"_index":231,"title":{},"body":{"classes/ExampleStudentOptions.html":{}}}],["src/app/showcase/app.component.ts:78",{"_index":236,"title":{},"body":{"classes/ExampleStudentOptions.html":{}}}],["src/app/showcase/app.component.ts:81",{"_index":234,"title":{},"body":{"classes/ExampleStudentOptions.html":{}}}],["src/app/showcase/app.component.ts:84",{"_index":233,"title":{},"body":{"classes/ExampleStudentOptions.html":{}}}],["src/app/showcase/showcase.module.t",{"_index":529,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["src/environments/environment.prod.t",{"_index":564,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":566,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":567,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":573,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":255,"title":{},"body":{"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{}}}],["state('hidden",{"_index":316,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["state('vis",{"_index":319,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["statement",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["style",{"_index":256,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["styleurl",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["subitem",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{}}}],["subitems.push(v",{"_index":380,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["subject",{"_index":637,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":632,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":641,"title":{},"body":{"license.html":{}}}],["support",{"_index":600,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":664,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":428,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["tabl",{"_index":269,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":430,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["target.__meta__",{"_index":432,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["target.__meta__[key",{"_index":442,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["telephon",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["template.direct",{"_index":260,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{}}}],["template.directive.t",{"_index":514,"title":{},"body":{"directives/PropertyItemTemplateDirective.html":{},"coverage.html":{}}}],["template.directive.ts:7",{"_index":516,"title":{},"body":{"directives/PropertyItemTemplateDirective.html":{}}}],["template.directive.ts:9",{"_index":517,"title":{},"body":{"directives/PropertyItemTemplateDirective.html":{}}}],["templatemap",{"_index":329,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["templateref",{"_index":252,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"components/SimpleTextEditorComponent.html":{}}}],["text",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["textarea",{"_index":425,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["textbox",{"_index":601,"title":{},"body":{"index.html":{}}}],["that'",{"_index":584,"title":{},"body":{"index.html":{}}}],["this._controlvaluechangefn",{"_index":194,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this._map.get(typ",{"_index":491,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["this._map.set(typ",{"_index":489,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["this._meta",{"_index":333,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this._opt",{"_index":336,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this._valu",{"_index":190,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.buildcompon",{"_index":196,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.cdr.detectchang",{"_index":353,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.compon",{"_index":191,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.component.destroy",{"_index":219,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.component.instance.valu",{"_index":192,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(this.componenttyp",{"_index":204,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.componentopt",{"_index":217,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.components.push(componenttyp",{"_index":490,"title":{},"body":{"injectables/PropertyGridControlProvider.html":{}}}],["this.componenttyp",{"_index":198,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.defaulttempl",{"_index":348,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.defaulttemplates.foreach((item",{"_index":349,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.destroycompon",{"_index":200,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.entry.clear",{"_index":201,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.entry.createcomponent(componentfactori",{"_index":205,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.initcomponent(compon",{"_index":207,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.initmeta",{"_index":334,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.isintern",{"_index":345,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.meta",{"_index":338,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.meta.valueconvert",{"_index":404,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.meta.valueconvert(v",{"_index":405,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.o[this.meta.key",{"_index":403,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.onvaluechange(valu",{"_index":195,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.options[meta.key",{"_index":368,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.row",{"_index":372,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.stat",{"_index":365,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.subitem",{"_index":373,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap",{"_index":357,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap.hasownproperty(item.nam",{"_index":350,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap['default",{"_index":359,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap[item.nam",{"_index":351,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.templatemap[typ",{"_index":358,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.templates.foreach((item",{"_index":355,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["this.valuechange.emit(",{"_index":197,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["toggl",{"_index":364,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["tooltip",{"_index":414,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["top",{"_index":271,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["tort",{"_index":660,"title":{},"body":{"license.html":{}}}],["transit",{"_index":257,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["transition('vis",{"_index":320,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["tri",{"_index":199,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["trigger",{"_index":258,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["trigger('internalpropertygrid",{"_index":315,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["true",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["true/fals",{"_index":421,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["tvalu",{"_index":223,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["type",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"directives/PropertyItemTemplateDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":398,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["unedit",{"_index":606,"title":{},"body":{"index.html":{}}}],["unset",{"_index":314,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["us",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"license.html":{}}}],["usag",{"_index":588,"title":{},"body":{"index.html":{}}}],["user",{"_index":582,"title":{},"body":{"index.html":{}}}],["usevalu",{"_index":513,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["v",{"_index":182,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["v.__meta__",{"_index":337,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["v.group",{"_index":383,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["v.hidden",{"_index":378,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["v.label",{"_index":400,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["v.text",{"_index":399,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["v.type",{"_index":379,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["v.valu",{"_index":402,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["val",{"_index":367,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["valu",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"interfaces/InternalPropertyItemMeta.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value(v",{"_index":189,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["valuechang",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{},"components/SimpleTextEditorComponent.html":{}}}],["valueconvert",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{}}}],["var",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/CustomComponent.html":{},"components/PropertyGridComponent.html":{},"components/SimpleTextEditorComponent.html":{}}}],["variabl",{"_index":558,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["view/edit",{"_index":577,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":177,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["viewchild('contain",{"_index":186,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["viewchildren",{"_index":253,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["viewchildren(propertyitemtemplatedirect",{"_index":339,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["viewcontainerref",{"_index":183,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["viewer",{"_index":547,"title":{},"body":{"modules/ShowcaseModule.html":{}}}],["visibl",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"components/SimpleTextEditorComponent.html":{}}}],["void",{"_index":163,"title":{},"body":{"components/CustomComponent.html":{},"interfaces/ICustomDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"injectables/PropertyGridControlProvider.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["want",{"_index":580,"title":{},"body":{"index.html":{}}}],["warranti",{"_index":643,"title":{},"body":{"license.html":{}}}],["webkit",{"_index":300,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["weight",{"_index":277,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["whether",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"classes/ExampleEditorOptions.html":{},"classes/ExampleStudentOptions.html":{},"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"components/SimpleTextEditorComponent.html":{},"index.html":{},"license.html":{}}}],["white",{"_index":276,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["width",{"_index":290,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["without",{"_index":624,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":312,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["xmeta",{"_index":431,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["xmeta.componenttyp",{"_index":433,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["xmeta.initst",{"_index":439,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["xmeta.key",{"_index":441,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["xmeta.ord",{"_index":440,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["xmeta.typ",{"_index":434,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["xmeta.valueconvert",{"_index":438,"title":{},"body":{"interfaces/InternalPropertyItemMeta.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["yish",{"_index":612,"title":{},"body":{"license.html":{}}}],["zoom",{"_index":500,"title":{},"body":{"modules/PropertyGridModule.html":{},"modules/ShowcaseModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/showcase/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                student\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/showcase/app.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            student\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        student:     ExampleStudentOptions\n\n                    \n                \n                    \n                        \n                            Type :     ExampleStudentOptions\n\n                        \n                    \n                    \n                        \n                            Default value : new ExampleStudentOptions()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        text:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/showcase/app.component.ts:16\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, EventEmitter} from '@angular/core';\nimport {meta, ICustomDynamicComponent} from '../components/property-grid/index';\nimport {MatCheckbox, MatSlider, MatSlideToggle} from '@angular/material';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    public student: ExampleStudentOptions = new ExampleStudentOptions();\n\n    constructor() {\n    }\n\n    public get data(): string {\n        return JSON.parse(JSON.stringify(this.student));\n    }\n\n    text: string;\n}\n\n@Component({\n    selector: 'app-text-editor',\n    template: ``\n})\nexport class SimpleTextEditorComponent implements ICustomDynamicComponent {\n    value: string;\n    valueChange: EventEmitter = new EventEmitter();\n}\n\nexport class ExampleEditorOptions {\n    @meta({\n        name: 'Font', description: 'The font editor to use', colSpan2: false,\n        componentType: SimpleTextEditorComponent, group: 'Editor', hidden: false\n    })\n    font = 'Source Code Pro';\n\n    @meta({name: 'Font size', group: 'Editor', valueConvert: parseInt, type: 'fontSize'})\n    fontSize = 14;\n\n    @meta({name: 'Font color', group: 'Editor', type: 'color'})\n    fontColor = '#51f41c';\n\n    @meta({name: 'jQuery', group: 'Plugins', componentType: MatCheckbox})\n    jQuery = true;\n\n    @meta({\n        name: 'modernizr',\n        description: 'Whether or not to include modernizr on the page',\n        group: 'Plugins',\n        componentType: MatSlideToggle\n    })\n    modernizr = false;\n\n    @meta({\n        name: 'Framework',\n        description: 'Whether to include any additional framework',\n        type: 'options',\n        componentOptions: {options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]}\n    })\n    framework = 'None';\n\n}\n\nexport class ExampleStudentOptions {\n\n    @meta({name: 'Birth', group: 'Basic Information', type: 'date', order: 4})\n    birth = '2018-05-08';\n\n    @meta({name: 'Name', group: 'Basic Information', type: 'text', order: 1})\n    name = 'Lily';\n\n    @meta({name: 'Age', group: 'Basic Information', valueConvert: parseInt, type: 'text', order: 2})\n    age = 19;\n\n    @meta({name: 'Telephone', type: 'telephone', group: 'Basic Information', hidden: true})\n    telephone;\n\n    @meta({name: 'Gender', group: 'Basic Information', type: 'sex', order: 3})\n    gender = 'male';\n\n    @meta({name: 'Editor Preference', type: 'subItems', initState: 'visible'})\n    editor: ExampleEditorOptions = new ExampleEditorOptions();\n}\n\n    \n\n    \n        \n    Property Grid Example\n    \n\n        \n            \n                \n            \n            \n                \n                字体大小-->\n            \n\n            \n                \n                \n                \n            \n\n            \n                \n                    male\n                    female\n                \n            \n        \n\n        \n             The Object： \n\n            \n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Property Grid Example                                                                                                字体大小-->                                                                                                                                    male                    female                                                         The Object：                         '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomComponent', 'selector': 'custom-component'},{'name': 'PropertyGridComponent', 'selector': 'ngx-property-grid'},{'name': 'SimpleTextEditorComponent', 'selector': 'app-text-editor'}];\n    var DIRECTIVES = [{'name': 'PropertyItemTemplateDirective', 'selector': '[propertyType]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CustomComponent.html":{"url":"components/CustomComponent.html","title":"component - CustomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CustomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/property-grid/custom.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ICustomDynamicComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                custom-component\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _controlValueChangeFn\n                            \n                            \n                                    Private\n                                _value\n                            \n                            \n                                    Private\n                                component\n                            \n                            \n                                entry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildComponent\n                            \n                            \n                                    Private\n                                destroyComponent\n                            \n                            \n                                    Private\n                                initComponent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                onValueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                componentOptions\n                            \n                            \n                                componentType\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/property-grid/custom.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        componentOptions\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        componentType\n                    \n                    \n                            \n                            Type:    Type\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:32\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:43\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            buildComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildComponent()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroyComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        destroyComponent()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:90\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initComponent(component: ComponentRef)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    ComponentRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onValueChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onValueChange(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _controlValueChangeFn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _controlValueChangeFn:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _value:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            component\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        component:     ComponentRef>\n\n                    \n                \n                    \n                        \n                            Type :     ComponentRef>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entry:     \n\n                    \n                \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/custom.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/custom.component.ts:38\n                                \n                            \n\n                \n                    \n                        setvalue(v: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/custom.component.ts:32\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    Type,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\n\n@Component({\n    selector: 'custom-component',\n    template: '',\n})\nexport class CustomComponent implements OnInit, ICustomDynamicComponent {\n    private readonly _controlValueChangeFn: (value: any) => void;\n    private _value: any;\n\n    @ViewChild('container', { read: ViewContainerRef }) entry;\n    private component: ComponentRef>;\n\n    @Input() componentType: Type;\n\n    @Input()\n    componentOptions: any;\n\n    @Input()\n    set value(v: any) {\n        this._value = v;\n        if (this.component) {\n            this.component.instance.value =  v;\n        }\n    }\n    get value(): any {\n        return this._value;\n    }\n\n    @Output()\n    readonly valueChange: EventEmitter = new EventEmitter();\n\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n        this._controlValueChangeFn = (value: any) => this.onValueChange(value);\n    }\n\n    ngOnInit() {\n        this.buildComponent();\n    }\n\n    private onValueChange(e: any): void {\n        this._value = e;\n        this.valueChange.emit(e);\n    }\n\n    private buildComponent(): void {\n        if (!this.componentType) {\n            return;\n        }\n        try {\n            this.destroyComponent();\n            // this.entry.clear();\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\n            const component = this.entry.createComponent(componentFactory, 0);\n            this.initComponent(component);\n            this.component = component;\n        } catch (e) {\n            console.error('load component error.');\n            console.error(e);\n        }\n    }\n\n    private initComponent(component: ComponentRef) {\n        component.instance.value = this._value;\n        if (component.instance.registerOnChange) {\n            component.instance.registerOnChange(this._controlValueChangeFn);\n        }\n        if (component.instance.valueChange) {\n            component.instance.valueChange.subscribe(this._controlValueChangeFn);\n        }\n\n        if (this.componentOptions) {\n            Object.assign(component.instance, this.componentOptions);\n        }\n    }\n\n    private destroyComponent(): void {\n        if (this.component) {\n            this.component.destroy();\n        }\n    }\n}\n\nexport interface PropertyValueAccess extends ControlValueAccessor, ICustomDynamicComponent {\n}\n\nexport interface ICustomDynamicComponent {\n    value: TValue;\n    valueChange: EventEmitter;\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomComponent', 'selector': 'custom-component'},{'name': 'PropertyGridComponent', 'selector': 'ngx-property-grid'},{'name': 'SimpleTextEditorComponent', 'selector': 'app-text-editor'}];\n    var DIRECTIVES = [{'name': 'PropertyItemTemplateDirective', 'selector': '[propertyType]'}];\n    var ACTUAL_COMPONENT = {'name': 'CustomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExampleEditorOptions.html":{"url":"classes/ExampleEditorOptions.html","title":"class - ExampleEditorOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExampleEditorOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/showcase/app.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                font\n                            \n                            \n                                fontColor\n                            \n                            \n                                fontSize\n                            \n                            \n                                framework\n                            \n                            \n                                jQuery\n                            \n                            \n                                modernizr\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            font\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        font:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Source Code Pro'\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fontColor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fontColor:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '#51f41c'\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fontSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fontSize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 14\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            framework\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        framework:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'None'\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        jQuery:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modernizr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modernizr:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Component, EventEmitter} from '@angular/core';\nimport {meta, ICustomDynamicComponent} from '../components/property-grid/index';\nimport {MatCheckbox, MatSlider, MatSlideToggle} from '@angular/material';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    public student: ExampleStudentOptions = new ExampleStudentOptions();\n\n    constructor() {\n    }\n\n    public get data(): string {\n        return JSON.parse(JSON.stringify(this.student));\n    }\n\n    text: string;\n}\n\n@Component({\n    selector: 'app-text-editor',\n    template: ``\n})\nexport class SimpleTextEditorComponent implements ICustomDynamicComponent {\n    value: string;\n    valueChange: EventEmitter = new EventEmitter();\n}\n\nexport class ExampleEditorOptions {\n    @meta({\n        name: 'Font', description: 'The font editor to use', colSpan2: false,\n        componentType: SimpleTextEditorComponent, group: 'Editor', hidden: false\n    })\n    font = 'Source Code Pro';\n\n    @meta({name: 'Font size', group: 'Editor', valueConvert: parseInt, type: 'fontSize'})\n    fontSize = 14;\n\n    @meta({name: 'Font color', group: 'Editor', type: 'color'})\n    fontColor = '#51f41c';\n\n    @meta({name: 'jQuery', group: 'Plugins', componentType: MatCheckbox})\n    jQuery = true;\n\n    @meta({\n        name: 'modernizr',\n        description: 'Whether or not to include modernizr on the page',\n        group: 'Plugins',\n        componentType: MatSlideToggle\n    })\n    modernizr = false;\n\n    @meta({\n        name: 'Framework',\n        description: 'Whether to include any additional framework',\n        type: 'options',\n        componentOptions: {options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]}\n    })\n    framework = 'None';\n\n}\n\nexport class ExampleStudentOptions {\n\n    @meta({name: 'Birth', group: 'Basic Information', type: 'date', order: 4})\n    birth = '2018-05-08';\n\n    @meta({name: 'Name', group: 'Basic Information', type: 'text', order: 1})\n    name = 'Lily';\n\n    @meta({name: 'Age', group: 'Basic Information', valueConvert: parseInt, type: 'text', order: 2})\n    age = 19;\n\n    @meta({name: 'Telephone', type: 'telephone', group: 'Basic Information', hidden: true})\n    telephone;\n\n    @meta({name: 'Gender', group: 'Basic Information', type: 'sex', order: 3})\n    gender = 'male';\n\n    @meta({name: 'Editor Preference', type: 'subItems', initState: 'visible'})\n    editor: ExampleEditorOptions = new ExampleEditorOptions();\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExampleStudentOptions.html":{"url":"classes/ExampleStudentOptions.html","title":"class - ExampleStudentOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExampleStudentOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/showcase/app.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                birth\n                            \n                            \n                                editor\n                            \n                            \n                                gender\n                            \n                            \n                                name\n                            \n                            \n                                telephone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        age:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 19\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        birth:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '2018-05-08'\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     ExampleEditorOptions\n\n                    \n                \n                    \n                        \n                            Type :     ExampleEditorOptions\n\n                        \n                    \n                    \n                        \n                            Default value : new ExampleEditorOptions()\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gender:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'male'\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Lily'\n                        \n                    \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            telephone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        telephone:     \n\n                    \n                \n                    \n                        \n                            Decorators : meta\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:78\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Component, EventEmitter} from '@angular/core';\nimport {meta, ICustomDynamicComponent} from '../components/property-grid/index';\nimport {MatCheckbox, MatSlider, MatSlideToggle} from '@angular/material';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    public student: ExampleStudentOptions = new ExampleStudentOptions();\n\n    constructor() {\n    }\n\n    public get data(): string {\n        return JSON.parse(JSON.stringify(this.student));\n    }\n\n    text: string;\n}\n\n@Component({\n    selector: 'app-text-editor',\n    template: ``\n})\nexport class SimpleTextEditorComponent implements ICustomDynamicComponent {\n    value: string;\n    valueChange: EventEmitter = new EventEmitter();\n}\n\nexport class ExampleEditorOptions {\n    @meta({\n        name: 'Font', description: 'The font editor to use', colSpan2: false,\n        componentType: SimpleTextEditorComponent, group: 'Editor', hidden: false\n    })\n    font = 'Source Code Pro';\n\n    @meta({name: 'Font size', group: 'Editor', valueConvert: parseInt, type: 'fontSize'})\n    fontSize = 14;\n\n    @meta({name: 'Font color', group: 'Editor', type: 'color'})\n    fontColor = '#51f41c';\n\n    @meta({name: 'jQuery', group: 'Plugins', componentType: MatCheckbox})\n    jQuery = true;\n\n    @meta({\n        name: 'modernizr',\n        description: 'Whether or not to include modernizr on the page',\n        group: 'Plugins',\n        componentType: MatSlideToggle\n    })\n    modernizr = false;\n\n    @meta({\n        name: 'Framework',\n        description: 'Whether to include any additional framework',\n        type: 'options',\n        componentOptions: {options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]}\n    })\n    framework = 'None';\n\n}\n\nexport class ExampleStudentOptions {\n\n    @meta({name: 'Birth', group: 'Basic Information', type: 'date', order: 4})\n    birth = '2018-05-08';\n\n    @meta({name: 'Name', group: 'Basic Information', type: 'text', order: 1})\n    name = 'Lily';\n\n    @meta({name: 'Age', group: 'Basic Information', valueConvert: parseInt, type: 'text', order: 2})\n    age = 19;\n\n    @meta({name: 'Telephone', type: 'telephone', group: 'Basic Information', hidden: true})\n    telephone;\n\n    @meta({name: 'Gender', group: 'Basic Information', type: 'sex', order: 3})\n    gender = 'male';\n\n    @meta({name: 'Editor Preference', type: 'subItems', initState: 'visible'})\n    editor: ExampleEditorOptions = new ExampleEditorOptions();\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICustomDynamicComponent.html":{"url":"interfaces/ICustomDynamicComponent.html","title":"interface - ICustomDynamicComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICustomDynamicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/property-grid/custom.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        valueChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     TValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueChange\n                                    \n                                \n                                \n                                    \n                                        valueChange:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    Type,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\n\n@Component({\n    selector: 'custom-component',\n    template: '',\n})\nexport class CustomComponent implements OnInit, ICustomDynamicComponent {\n    private readonly _controlValueChangeFn: (value: any) => void;\n    private _value: any;\n\n    @ViewChild('container', { read: ViewContainerRef }) entry;\n    private component: ComponentRef>;\n\n    @Input() componentType: Type;\n\n    @Input()\n    componentOptions: any;\n\n    @Input()\n    set value(v: any) {\n        this._value = v;\n        if (this.component) {\n            this.component.instance.value =  v;\n        }\n    }\n    get value(): any {\n        return this._value;\n    }\n\n    @Output()\n    readonly valueChange: EventEmitter = new EventEmitter();\n\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n        this._controlValueChangeFn = (value: any) => this.onValueChange(value);\n    }\n\n    ngOnInit() {\n        this.buildComponent();\n    }\n\n    private onValueChange(e: any): void {\n        this._value = e;\n        this.valueChange.emit(e);\n    }\n\n    private buildComponent(): void {\n        if (!this.componentType) {\n            return;\n        }\n        try {\n            this.destroyComponent();\n            // this.entry.clear();\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\n            const component = this.entry.createComponent(componentFactory, 0);\n            this.initComponent(component);\n            this.component = component;\n        } catch (e) {\n            console.error('load component error.');\n            console.error(e);\n        }\n    }\n\n    private initComponent(component: ComponentRef) {\n        component.instance.value = this._value;\n        if (component.instance.registerOnChange) {\n            component.instance.registerOnChange(this._controlValueChangeFn);\n        }\n        if (component.instance.valueChange) {\n            component.instance.valueChange.subscribe(this._controlValueChangeFn);\n        }\n\n        if (this.componentOptions) {\n            Object.assign(component.instance, this.componentOptions);\n        }\n    }\n\n    private destroyComponent(): void {\n        if (this.component) {\n            this.component.destroy();\n        }\n    }\n}\n\nexport interface PropertyValueAccess extends ControlValueAccessor, ICustomDynamicComponent {\n}\n\nexport interface ICustomDynamicComponent {\n    value: TValue;\n    valueChange: EventEmitter;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InternalGroup.html":{"url":"classes/InternalGroup.html","title":"class - InternalGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  InternalGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/property-grid/property-grid.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                items\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/property-grid/property-grid.component.ts:330\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     InternalPropertyItemMeta[]\n\n                    \n                \n                    \n                        \n                            Type :     InternalPropertyItemMeta[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:329\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:332\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'group'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:330\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    AfterContentInit, AfterViewInit, ChangeDetectorRef,\n    Component,\n    ContentChildren, ElementRef,\n    Input,\n    QueryList,\n    TemplateRef, ViewChildren\n} from '@angular/core';\nimport {InternalPropertyItemMeta} from './property-item-meta';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {PropertyItemTemplateDirective} from './property-item-template.directive';\n\n@Component({\n    selector: 'ngx-property-grid',\n    template: `\n        \n            \n                \n                    \n                    \n\n                        -->\n                        {{row.name}}\n                        \n                            {{row.name}}\n                            [?]\n                        \n                        \n                            \n                            \n                            \n                            \n                        \n                    \n                    \n                \n            \n\n            \n                {{item.name}}\n                \n                \n            \n        \n        \n            \n                \n            \n\n            \n                \n            \n\n            \n                \n            \n\n            \n                {{p.value}}\n            \n\n            \n                \n            \n\n            \n                \n                    \n                        {{optionLabel(option)}}\n                    \n                \n            \n        \n    `,\n    styles: [\n            `\n            .property-grid {\n                /*border: solid 1px #95B8E7;*/\n            }\n\n            .property-grid-table {\n                border-spacing: 0;\n                border-top: 1px solid #dbdbdb;\n                padding: 5px\n            }\n\n            .property-grid-group {\n                background-color: white;\n                font-weight: bold;\n                color: #616161;\n                padding-top: 8px;\n                padding-bottom: 5px;\n            }\n\n            .property-grid-label, .property-grid-control {\n                border: dotted 1px #ccc;\n                padding: 2px 5px;\n            }\n\n            .internal-property-grid {\n                margin-top: 12px;\n            }\n\n            .internal-property-grid .property-grid {\n                border-width: 0;\n            }\n\n            .internal-property-grid .property-grid-header {\n                margin-bottom: 5px;\n                background-color: #f5f5f5;\n                padding-bottom: 5px;\n                padding-top: 5px;\n                padding-left: 5px;\n                box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n                -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n            }\n\n            .internal-property-grid .property-grid-table {\n                border-width: 0;\n                /*border-top: 1px solid #dbdbdb;*/\n            }\n\n            .card {\n                background-color: #fff;\n                box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n                display: flex;\n                flex-flow: row wrap;\n                /*margin: 5px 20px;*/\n                padding: 0;\n            }\n            .internal-property-grid ngx-property-grid .card {\n                background-color: unset;\n                box-shadow: unset;\n                display: unset;\n                flex-flow: unset;\n                /*margin: 5px 20px;*/\n                padding: unset;\n            }\n        `\n    ],\n    animations: [\n        trigger('internalPropertyGrid', [\n            state('hidden', style({\n                height: '0',\n                // overflow: 'hidden'\n            })),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible  hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n        ])\n    ]\n})\nexport class PropertyGridComponent implements AfterContentInit, AfterViewInit {\n    private _options: any;\n    private _meta: any;\n    public readonly isInternal: boolean;\n\n    @Input()\n    public templateMap: any = {};\n\n    @Input()\n    public state = 'visible';\n\n    @Input()\n    width: string | number;\n\n\n    @Input()\n    labelWidth: string | number = '120px';\n\n    @Input()\n    public set meta(v: any) {\n        this._meta = v;\n        this.initMeta();\n    }\n\n    public get meta(): any {\n        return this._meta;\n    }\n\n    @Input()\n    public set options(v: any) {\n        this._options = v;\n        if (v.__meta__) {\n            this.meta = v.__meta__;\n        }\n    }\n\n    public get options(): any {\n        return this._options;\n    }\n\n    @ViewChildren(PropertyItemTemplateDirective) defaultTemplates: QueryList;\n    @ContentChildren(PropertyItemTemplateDirective) templates: QueryList;\n\n    public rows: Array;\n    public subItems: InternalPropertyItemMeta[];\n\n    constructor(el: ElementRef, private cdr: ChangeDetectorRef) {\n        this.isInternal = el.nativeElement.parentElement.classList.contains('internal-property-grid');\n    }\n\n    ngAfterViewInit(): void {\n        if (this.defaultTemplates) {\n            this.defaultTemplates.forEach((item) => {\n                if (!this.templateMap.hasOwnProperty(item.name)) {\n                    this.templateMap[item.name] = item.template;\n                }\n            });\n            this.cdr.detectChanges();\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this.templates.forEach((item) => {\n            this.templateMap[item.name] = item.template;\n        });\n    }\n\n    public getTemplate(type: string): TemplateRef {\n        if (this.templateMap) {\n            return type ? this.templateMap[type] : this.templateMap['default'];\n        } else {\n            return null;\n        }\n    }\n\n    public propertyValue(meta: InternalPropertyItemMeta): PropertyValue {\n        return new PropertyValue(this.options, meta);\n    }\n\n    public toggle(): void {\n        this.state = this.state === 'visible' ? 'hidden' : 'visible';\n    }\n\n    public convertValue(meta: InternalPropertyItemMeta, val: any): void {\n        this.options[meta.key] = meta.valueConvert ? meta.valueConvert(val) : val;\n    }\n\n    private initMeta(): void {\n        const meta: object = this.meta;\n        if (!meta) {\n            this.rows = [];\n            this.subItems = [];\n            return;\n        }\n\n        const groups: InternalGroup[] = [new InternalGroup(undefined)];\n        const subItems: InternalPropertyItemMeta[] = [];\n        for (const i in meta) {\n            if (!meta.hasOwnProperty(i)) {\n                continue;\n            }\n            const v: InternalPropertyItemMeta = meta[i];\n            if (v.hidden) {\n                continue;\n            }\n            if (v.type === 'subItems') {\n                subItems.push(v);\n                continue;\n            }\n\n            let group = groups.find(o => o.name === v.group);\n            if (!group) {\n                group = new InternalGroup(v.group);\n                groups.push(group);\n            }\n            group.items.push(v);\n        }\n        groups.forEach(o => o.items.sort((a, b) => a.order - b.order));\n        const rows: Array = [];\n        for (const g of groups) {\n            if (g.name) {\n                rows.push(g);\n            }\n            g.items.forEach(o => rows.push(o));\n        }\n        this.rows = rows;\n        this.subItems = subItems;\n    }\n\n    optionLabel(v: any): string {\n        if (typeof v === 'string') {\n            return v;\n        }\n        if (v.text) {\n            return v.text;\n        }\n        if (v.label) {\n            return v.label;\n        }\n        return v;\n    }\n\n    optionValue(v: any): any {\n        return v && v.value ? v.value : v;\n    }\n}\n\nexport class PropertyValue {\n    public get value(): any {\n        return this.o[this.meta.key];\n    }\n\n    public set value(val: any) {\n        this.o[this.meta.key] = this.meta.valueConvert ? this.meta.valueConvert(val) : val;\n    }\n\n    constructor(private o: any, public meta: InternalPropertyItemMeta) {\n    }\n}\n\nexport class InternalGroup {\n    public readonly items: InternalPropertyItemMeta[] = [];\n    public type = 'group';\n\n    constructor(public name: string) {\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InternalPropertyItemMeta.html":{"url":"interfaces/InternalPropertyItemMeta.html","title":"interface - InternalPropertyItemMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InternalPropertyItemMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/property-grid/property-item-meta.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PropertyItemMeta\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | \n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Type} from '@angular/core';\nimport {defaultProvider} from './property-grid-control-provider';\nimport {ICustomDynamicComponent} from './custom.component';\nimport {ControlValueAccessor} from '@angular/forms';\n\nexport interface PropertyItemMeta {\n    name: string; // The display name of the property in the grid\n    description?: string; // A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\n    order?: number; // The display order.\n    group?: string; //  The group this property belongs to\n    hidden?: boolean; // Whether this property should be hidden in the grid, default is false (can be omitted).\n    initState?: string; // - hidden/visible. If hidden then subItems should init by hidden state. default is hidden\n    componentType?: Type>; // an custom component should be implement\n    // ControlValueAccessor or ICustomDynamicComponent\n    componentOptions?: any;\n    colSpan2?: boolean; //  - true/false. If true then property input will span both columns and will have no name/label\n    // (useful for textarea custom type)\n    type?: string; // options: boolean number options label color\n    valueConvert?: (value: any) => any; // convert the value, eg. parseInt\n}\n\nexport interface InternalPropertyItemMeta extends PropertyItemMeta {\n    key: string | symbol;\n}\n\nexport const meta = (m: PropertyItemMeta) =>\n    (target: any, key: string | symbol) => {\n        const xMeta = m as InternalPropertyItemMeta;\n        if (!target.__meta__) {\n            target.__meta__ = {};\n        }\n        if (!xMeta.componentType) {\n            if (!xMeta.type) {\n                xMeta.componentType = defaultProvider.getComponentType('text');\n            } else if (xMeta.type === 'boolean') {\n                xMeta.componentType = defaultProvider.getComponentType('checkbox');\n            } else {\n                xMeta.componentType = defaultProvider.getComponentType(m.type);\n            }\n\n            if (xMeta.type === 'number' && !xMeta.valueConvert) {\n                xMeta.valueConvert = parseInt;\n            }\n        }\n        if (!xMeta.initState) {\n            xMeta.initState = 'hidden';\n        }\n        if (!xMeta.order) {\n            xMeta.order = 0;\n        }\n        xMeta.key = key;\n        target.__meta__[key] = xMeta;\n    };\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PropertyGridComponent.html":{"url":"components/PropertyGridComponent.html","title":"component - PropertyGridComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PropertyGridComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/property-grid/property-grid.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterContentInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-property-grid\n            \n\n\n            \n                styles\n                \n            .property-grid {\n                /*border: solid 1px #95B8E7;*/\n            }\n\n            .property-grid-table {\n                border-spacing: 0;\n                border-top: 1px solid #dbdbdb;\n                padding: 5px\n            }\n\n            .property-grid-group {\n                background-color: white;\n                font-weight: bold;\n                color: #616161;\n                padding-top: 8px;\n                padding-bottom: 5px;\n            }\n\n            .property-grid-label, .property-grid-control {\n                border: dotted 1px #ccc;\n                padding: 2px 5px;\n            }\n\n            .internal-property-grid {\n                margin-top: 12px;\n            }\n\n            .internal-property-grid .property-grid {\n                border-width: 0;\n            }\n\n            .internal-property-grid .property-grid-header {\n                margin-bottom: 5px;\n                background-color: #f5f5f5;\n                padding-bottom: 5px;\n                padding-top: 5px;\n                padding-left: 5px;\n                box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n                -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n            }\n\n            .internal-property-grid .property-grid-table {\n                border-width: 0;\n                /*border-top: 1px solid #dbdbdb;*/\n            }\n\n            .card {\n                background-color: #fff;\n                box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n                display: flex;\n                flex-flow: row wrap;\n                /*margin: 5px 20px;*/\n                padding: 0;\n            }\n            .internal-property-grid ngx-property-grid .card {\n                background-color: unset;\n                box-shadow: unset;\n                display: unset;\n                flex-flow: unset;\n                /*margin: 5px 20px;*/\n                padding: unset;\n            }\n        \n            \n\n            \n                template\n                \n    \n        \n            \n            \n\n                -->\n                {{row.name}}\n                \n                    {{row.name}}\n                    [?]\n                \n                \n                    \n                    \n                    \n                    \n                \n            \n            \n        \n    \n\n    \n        {{item.name}}\n        \n        \n    \n\n\n    \n        \n    \n\n    \n        \n    \n\n    \n        \n    \n\n    \n        {{p.value}}\n    \n\n    \n        \n    \n\n    \n        \n            \n                {{optionLabel(option)}}\n            \n        \n    \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _meta\n                            \n                            \n                                    Private\n                                _options\n                            \n                            \n                                defaultTemplates\n                            \n                            \n                                    Public\n                                    Readonly\n                                isInternal\n                            \n                            \n                                    Public\n                                rows\n                            \n                            \n                                    Public\n                                subItems\n                            \n                            \n                                templates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                convertValue\n                            \n                            \n                                    Public\n                                getTemplate\n                            \n                            \n                                    Private\n                                initMeta\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                optionLabel\n                            \n                            \n                                optionValue\n                            \n                            \n                                    Public\n                                propertyValue\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                labelWidth\n                            \n                            \n                                meta\n                            \n                            \n                                options\n                            \n                            \n                                state\n                            \n                            \n                                templateMap\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/property-grid/property-grid.component.ts:212\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        labelWidth\n                    \n                    \n                            \n                            Type:    string | number\n\n                            \n                        \n                            Default value: '120px'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:184\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        meta\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:187\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:197\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                    \n                        \n                            Default value: 'visible'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:177\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        templateMap\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:174\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                    \n                            \n                            Type:    string | number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:180\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            convertValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        convertValue(meta: InternalPropertyItemMeta, val: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:251\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        meta\n                                                        \n                                                                    InternalPropertyItemMeta\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        val\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTemplate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTemplate(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:235\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TemplateRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initMeta\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initMeta()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:255\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterContentInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterContentInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:229\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:218\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \noptionLabel(v: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:297\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        v\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionValue\n                            \n                            \n                        \n                    \n                \n                \n                    \noptionValue(v: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:310\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        v\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            propertyValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        propertyValue(meta: InternalPropertyItemMeta)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:243\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        meta\n                                                        \n                                                                    InternalPropertyItemMeta\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     PropertyValue\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:247\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _meta\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _meta:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:170\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _options:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:169\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultTemplates\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultTemplates:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChildren\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:208\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            isInternal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInternal:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:171\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rows\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rows:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:211\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subItems:     InternalPropertyItemMeta[]\n\n                    \n                \n                    \n                        \n                            Type :     InternalPropertyItemMeta[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:212\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templates\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        templates:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ContentChildren\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:209\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        meta\n                    \n                \n\n                \n                    \n                        getmeta()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:192\n                                \n                            \n\n                \n                    \n                        setmeta(v: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:187\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:204\n                                \n                            \n\n                \n                    \n                        setoptions(v: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:197\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n    AfterContentInit, AfterViewInit, ChangeDetectorRef,\n    Component,\n    ContentChildren, ElementRef,\n    Input,\n    QueryList,\n    TemplateRef, ViewChildren\n} from '@angular/core';\nimport {InternalPropertyItemMeta} from './property-item-meta';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {PropertyItemTemplateDirective} from './property-item-template.directive';\n\n@Component({\n    selector: 'ngx-property-grid',\n    template: `\n        \n            \n                \n                    \n                    \n\n                        -->\n                        {{row.name}}\n                        \n                            {{row.name}}\n                            [?]\n                        \n                        \n                            \n                            \n                            \n                            \n                        \n                    \n                    \n                \n            \n\n            \n                {{item.name}}\n                \n                \n            \n        \n        \n            \n                \n            \n\n            \n                \n            \n\n            \n                \n            \n\n            \n                {{p.value}}\n            \n\n            \n                \n            \n\n            \n                \n                    \n                        {{optionLabel(option)}}\n                    \n                \n            \n        \n    `,\n    styles: [\n            `\n            .property-grid {\n                /*border: solid 1px #95B8E7;*/\n            }\n\n            .property-grid-table {\n                border-spacing: 0;\n                border-top: 1px solid #dbdbdb;\n                padding: 5px\n            }\n\n            .property-grid-group {\n                background-color: white;\n                font-weight: bold;\n                color: #616161;\n                padding-top: 8px;\n                padding-bottom: 5px;\n            }\n\n            .property-grid-label, .property-grid-control {\n                border: dotted 1px #ccc;\n                padding: 2px 5px;\n            }\n\n            .internal-property-grid {\n                margin-top: 12px;\n            }\n\n            .internal-property-grid .property-grid {\n                border-width: 0;\n            }\n\n            .internal-property-grid .property-grid-header {\n                margin-bottom: 5px;\n                background-color: #f5f5f5;\n                padding-bottom: 5px;\n                padding-top: 5px;\n                padding-left: 5px;\n                box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n                -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n            }\n\n            .internal-property-grid .property-grid-table {\n                border-width: 0;\n                /*border-top: 1px solid #dbdbdb;*/\n            }\n\n            .card {\n                background-color: #fff;\n                box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n                display: flex;\n                flex-flow: row wrap;\n                /*margin: 5px 20px;*/\n                padding: 0;\n            }\n            .internal-property-grid ngx-property-grid .card {\n                background-color: unset;\n                box-shadow: unset;\n                display: unset;\n                flex-flow: unset;\n                /*margin: 5px 20px;*/\n                padding: unset;\n            }\n        `\n    ],\n    animations: [\n        trigger('internalPropertyGrid', [\n            state('hidden', style({\n                height: '0',\n                // overflow: 'hidden'\n            })),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible  hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n        ])\n    ]\n})\nexport class PropertyGridComponent implements AfterContentInit, AfterViewInit {\n    private _options: any;\n    private _meta: any;\n    public readonly isInternal: boolean;\n\n    @Input()\n    public templateMap: any = {};\n\n    @Input()\n    public state = 'visible';\n\n    @Input()\n    width: string | number;\n\n\n    @Input()\n    labelWidth: string | number = '120px';\n\n    @Input()\n    public set meta(v: any) {\n        this._meta = v;\n        this.initMeta();\n    }\n\n    public get meta(): any {\n        return this._meta;\n    }\n\n    @Input()\n    public set options(v: any) {\n        this._options = v;\n        if (v.__meta__) {\n            this.meta = v.__meta__;\n        }\n    }\n\n    public get options(): any {\n        return this._options;\n    }\n\n    @ViewChildren(PropertyItemTemplateDirective) defaultTemplates: QueryList;\n    @ContentChildren(PropertyItemTemplateDirective) templates: QueryList;\n\n    public rows: Array;\n    public subItems: InternalPropertyItemMeta[];\n\n    constructor(el: ElementRef, private cdr: ChangeDetectorRef) {\n        this.isInternal = el.nativeElement.parentElement.classList.contains('internal-property-grid');\n    }\n\n    ngAfterViewInit(): void {\n        if (this.defaultTemplates) {\n            this.defaultTemplates.forEach((item) => {\n                if (!this.templateMap.hasOwnProperty(item.name)) {\n                    this.templateMap[item.name] = item.template;\n                }\n            });\n            this.cdr.detectChanges();\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this.templates.forEach((item) => {\n            this.templateMap[item.name] = item.template;\n        });\n    }\n\n    public getTemplate(type: string): TemplateRef {\n        if (this.templateMap) {\n            return type ? this.templateMap[type] : this.templateMap['default'];\n        } else {\n            return null;\n        }\n    }\n\n    public propertyValue(meta: InternalPropertyItemMeta): PropertyValue {\n        return new PropertyValue(this.options, meta);\n    }\n\n    public toggle(): void {\n        this.state = this.state === 'visible' ? 'hidden' : 'visible';\n    }\n\n    public convertValue(meta: InternalPropertyItemMeta, val: any): void {\n        this.options[meta.key] = meta.valueConvert ? meta.valueConvert(val) : val;\n    }\n\n    private initMeta(): void {\n        const meta: object = this.meta;\n        if (!meta) {\n            this.rows = [];\n            this.subItems = [];\n            return;\n        }\n\n        const groups: InternalGroup[] = [new InternalGroup(undefined)];\n        const subItems: InternalPropertyItemMeta[] = [];\n        for (const i in meta) {\n            if (!meta.hasOwnProperty(i)) {\n                continue;\n            }\n            const v: InternalPropertyItemMeta = meta[i];\n            if (v.hidden) {\n                continue;\n            }\n            if (v.type === 'subItems') {\n                subItems.push(v);\n                continue;\n            }\n\n            let group = groups.find(o => o.name === v.group);\n            if (!group) {\n                group = new InternalGroup(v.group);\n                groups.push(group);\n            }\n            group.items.push(v);\n        }\n        groups.forEach(o => o.items.sort((a, b) => a.order - b.order));\n        const rows: Array = [];\n        for (const g of groups) {\n            if (g.name) {\n                rows.push(g);\n            }\n            g.items.forEach(o => rows.push(o));\n        }\n        this.rows = rows;\n        this.subItems = subItems;\n    }\n\n    optionLabel(v: any): string {\n        if (typeof v === 'string') {\n            return v;\n        }\n        if (v.text) {\n            return v.text;\n        }\n        if (v.label) {\n            return v.label;\n        }\n        return v;\n    }\n\n    optionValue(v: any): any {\n        return v && v.value ? v.value : v;\n    }\n}\n\nexport class PropertyValue {\n    public get value(): any {\n        return this.o[this.meta.key];\n    }\n\n    public set value(val: any) {\n        this.o[this.meta.key] = this.meta.valueConvert ? this.meta.valueConvert(val) : val;\n    }\n\n    constructor(private o: any, public meta: InternalPropertyItemMeta) {\n    }\n}\n\nexport class InternalGroup {\n    public readonly items: InternalPropertyItemMeta[] = [];\n    public type = 'group';\n\n    constructor(public name: string) {\n    }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    -->                {{row.name}}                                    {{row.name}}                    [?]                                                                                                                                                                                {{item.name}}                                                                                {{p.value}}                                                            {{optionLabel(option)}}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomComponent', 'selector': 'custom-component'},{'name': 'PropertyGridComponent', 'selector': 'ngx-property-grid'},{'name': 'SimpleTextEditorComponent', 'selector': 'app-text-editor'}];\n    var DIRECTIVES = [{'name': 'PropertyItemTemplateDirective', 'selector': '[propertyType]'}];\n    var ACTUAL_COMPONENT = {'name': 'PropertyGridComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PropertyGridControlProvider.html":{"url":"injectables/PropertyGridControlProvider.html","title":"injectable - PropertyGridControlProvider","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  PropertyGridControlProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/property-grid/property-grid-control-provider.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _map\n                            \n                            \n                                    Public\n                                components\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getComponentType\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getComponentType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getComponentType(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid-control-provider.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        register(type: string, componentType: Type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid-control-provider.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        componentType\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _map:     Map>\n\n                    \n                \n                    \n                        \n                            Type :     Map>\n\n                        \n                    \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid-control-provider.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            components\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        components:     Array>\n\n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid-control-provider.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, Type} from '@angular/core';\n\n\n@Injectable()\nexport class PropertyGridControlProvider {\n    private readonly _map: Map> = new Map>();\n    public components: Array> = [];\n    public register(type: string, componentType: Type) {\n        this._map.set(type, componentType);\n        this.components.push(componentType);\n    }\n    public getComponentType(type: string) {\n        return this._map.get(type);\n    }\n}\n\nexport const defaultProvider = new PropertyGridControlProvider();\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PropertyGridModule.html":{"url":"modules/PropertyGridModule.html","title":"module - PropertyGridModule","body":"\n                   \n\n\n\n\n  Modules\n  PropertyGridModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyGridModule\n\n\n\ncluster_PropertyGridModule_declarations\n\n\n\ncluster_PropertyGridModule_exports\n\n\n\n\nCustomComponent\n\nCustomComponent\n\n\n\nPropertyGridModule\n\nPropertyGridModule\n\nPropertyGridModule -->\n\nCustomComponent->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent\n\nPropertyGridComponent\n\nPropertyGridModule -->\n\nPropertyGridComponent->PropertyGridModule\n\n\n\n\n\nPropertyItemTemplateDirective\n\nPropertyItemTemplateDirective\n\nPropertyGridModule -->\n\nPropertyItemTemplateDirective->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent \n\nPropertyGridComponent \n\nPropertyGridComponent  -->\n\nPropertyGridModule->PropertyGridComponent \n\n\n\n\n\nPropertyItemTemplateDirective \n\nPropertyItemTemplateDirective \n\nPropertyItemTemplateDirective  -->\n\nPropertyGridModule->PropertyItemTemplateDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/property-grid/index.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CustomComponent\n                            \n                            \n                                PropertyGridComponent\n                            \n                            \n                                PropertyItemTemplateDirective\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                defaultProvider.components\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    PropertyGridComponent\n                            \n                            \n                                    PropertyItemTemplateDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {CustomComponent, ICustomDynamicComponent} from './custom.component';\nimport {PropertyGridComponent} from './property-grid.component';\nimport {defaultProvider, PropertyGridControlProvider} from './property-grid-control-provider';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {PropertyItemTemplateDirective} from './property-item-template.directive';\n\nexport {ICustomDynamicComponent} from './custom.component';\nexport {PropertyGridComponent, PropertyValue} from './property-grid.component';\nexport {meta, PropertyItemMeta} from './property-item-meta';\n\n@NgModule({\n    imports: [\n        CommonModule, BrowserAnimationsModule,\n    ],\n    entryComponents: defaultProvider.components,\n    declarations: [\n        PropertyGridComponent,\n        CustomComponent,\n        PropertyItemTemplateDirective,\n    ],\n    providers: [{provide: PropertyGridControlProvider, useValue: defaultProvider}],\n    exports: [\n        PropertyGridComponent, PropertyItemTemplateDirective\n    ]\n})\nexport class PropertyGridModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PropertyItemMeta.html":{"url":"interfaces/PropertyItemMeta.html","title":"interface - PropertyItemMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PropertyItemMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/property-grid/property-item-meta.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        colSpan2\n                                \n                                \n                                            Optional\n                                        componentOptions\n                                \n                                \n                                            Optional\n                                        componentType\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        group\n                                \n                                \n                                            Optional\n                                        hidden\n                                \n                                \n                                            Optional\n                                        initState\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        order\n                                \n                                \n                                            Optional\n                                        type\n                                \n                                \n                                            Optional\n                                        valueConvert\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colSpan2\n                                    \n                                \n                                \n                                    \n                                        colSpan2:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        componentOptions\n                                    \n                                \n                                \n                                    \n                                        componentOptions:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        componentType\n                                    \n                                \n                                \n                                    \n                                        componentType:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initState\n                                    \n                                \n                                \n                                    \n                                        initState:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueConvert\n                                    \n                                \n                                \n                                    \n                                        valueConvert:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Type} from '@angular/core';\nimport {defaultProvider} from './property-grid-control-provider';\nimport {ICustomDynamicComponent} from './custom.component';\nimport {ControlValueAccessor} from '@angular/forms';\n\nexport interface PropertyItemMeta {\n    name: string; // The display name of the property in the grid\n    description?: string; // A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\n    order?: number; // The display order.\n    group?: string; //  The group this property belongs to\n    hidden?: boolean; // Whether this property should be hidden in the grid, default is false (can be omitted).\n    initState?: string; // - hidden/visible. If hidden then subItems should init by hidden state. default is hidden\n    componentType?: Type>; // an custom component should be implement\n    // ControlValueAccessor or ICustomDynamicComponent\n    componentOptions?: any;\n    colSpan2?: boolean; //  - true/false. If true then property input will span both columns and will have no name/label\n    // (useful for textarea custom type)\n    type?: string; // options: boolean number options label color\n    valueConvert?: (value: any) => any; // convert the value, eg. parseInt\n}\n\nexport interface InternalPropertyItemMeta extends PropertyItemMeta {\n    key: string | symbol;\n}\n\nexport const meta = (m: PropertyItemMeta) =>\n    (target: any, key: string | symbol) => {\n        const xMeta = m as InternalPropertyItemMeta;\n        if (!target.__meta__) {\n            target.__meta__ = {};\n        }\n        if (!xMeta.componentType) {\n            if (!xMeta.type) {\n                xMeta.componentType = defaultProvider.getComponentType('text');\n            } else if (xMeta.type === 'boolean') {\n                xMeta.componentType = defaultProvider.getComponentType('checkbox');\n            } else {\n                xMeta.componentType = defaultProvider.getComponentType(m.type);\n            }\n\n            if (xMeta.type === 'number' && !xMeta.valueConvert) {\n                xMeta.valueConvert = parseInt;\n            }\n        }\n        if (!xMeta.initState) {\n            xMeta.initState = 'hidden';\n        }\n        if (!xMeta.order) {\n            xMeta.order = 0;\n        }\n        xMeta.key = key;\n        target.__meta__[key] = xMeta;\n    };\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PropertyItemTemplateDirective.html":{"url":"directives/PropertyItemTemplateDirective.html","title":"directive - PropertyItemTemplateDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  PropertyItemTemplateDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/property-grid/property-item-template.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [propertyType]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                propertyType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/property-grid/property-item-template.directive.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        propertyType\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-item-template.directive.ts:7\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-item-template.directive.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {Directive, Input, TemplateRef} from '@angular/core';\n\n@Directive({\n    selector: '[propertyType]'\n})\nexport class PropertyItemTemplateDirective {\n    @Input('propertyType') name: string;\n\n    constructor(public template: TemplateRef) {\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PropertyValue.html":{"url":"classes/PropertyValue.html","title":"class - PropertyValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  PropertyValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/property-grid/property-grid.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(o: any, meta: InternalPropertyItemMeta)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/property-grid/property-grid.component.ts:322\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        o\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                    InternalPropertyItemMeta\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            meta\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        meta:     InternalPropertyItemMeta\n\n                    \n                \n                    \n                        \n                            Type :     InternalPropertyItemMeta\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:324\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:316\n                                \n                            \n\n                \n                    \n                        setvalue(val: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/property-grid/property-grid.component.ts:320\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {\n    AfterContentInit, AfterViewInit, ChangeDetectorRef,\n    Component,\n    ContentChildren, ElementRef,\n    Input,\n    QueryList,\n    TemplateRef, ViewChildren\n} from '@angular/core';\nimport {InternalPropertyItemMeta} from './property-item-meta';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {PropertyItemTemplateDirective} from './property-item-template.directive';\n\n@Component({\n    selector: 'ngx-property-grid',\n    template: `\n        \n            \n                \n                    \n                    \n\n                        -->\n                        {{row.name}}\n                        \n                            {{row.name}}\n                            [?]\n                        \n                        \n                            \n                            \n                            \n                            \n                        \n                    \n                    \n                \n            \n\n            \n                {{item.name}}\n                \n                \n            \n        \n        \n            \n                \n            \n\n            \n                \n            \n\n            \n                \n            \n\n            \n                {{p.value}}\n            \n\n            \n                \n            \n\n            \n                \n                    \n                        {{optionLabel(option)}}\n                    \n                \n            \n        \n    `,\n    styles: [\n            `\n            .property-grid {\n                /*border: solid 1px #95B8E7;*/\n            }\n\n            .property-grid-table {\n                border-spacing: 0;\n                border-top: 1px solid #dbdbdb;\n                padding: 5px\n            }\n\n            .property-grid-group {\n                background-color: white;\n                font-weight: bold;\n                color: #616161;\n                padding-top: 8px;\n                padding-bottom: 5px;\n            }\n\n            .property-grid-label, .property-grid-control {\n                border: dotted 1px #ccc;\n                padding: 2px 5px;\n            }\n\n            .internal-property-grid {\n                margin-top: 12px;\n            }\n\n            .internal-property-grid .property-grid {\n                border-width: 0;\n            }\n\n            .internal-property-grid .property-grid-header {\n                margin-bottom: 5px;\n                background-color: #f5f5f5;\n                padding-bottom: 5px;\n                padding-top: 5px;\n                padding-left: 5px;\n                box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n                -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n            }\n\n            .internal-property-grid .property-grid-table {\n                border-width: 0;\n                /*border-top: 1px solid #dbdbdb;*/\n            }\n\n            .card {\n                background-color: #fff;\n                box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n                display: flex;\n                flex-flow: row wrap;\n                /*margin: 5px 20px;*/\n                padding: 0;\n            }\n            .internal-property-grid ngx-property-grid .card {\n                background-color: unset;\n                box-shadow: unset;\n                display: unset;\n                flex-flow: unset;\n                /*margin: 5px 20px;*/\n                padding: unset;\n            }\n        `\n    ],\n    animations: [\n        trigger('internalPropertyGrid', [\n            state('hidden', style({\n                height: '0',\n                // overflow: 'hidden'\n            })),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible  hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n        ])\n    ]\n})\nexport class PropertyGridComponent implements AfterContentInit, AfterViewInit {\n    private _options: any;\n    private _meta: any;\n    public readonly isInternal: boolean;\n\n    @Input()\n    public templateMap: any = {};\n\n    @Input()\n    public state = 'visible';\n\n    @Input()\n    width: string | number;\n\n\n    @Input()\n    labelWidth: string | number = '120px';\n\n    @Input()\n    public set meta(v: any) {\n        this._meta = v;\n        this.initMeta();\n    }\n\n    public get meta(): any {\n        return this._meta;\n    }\n\n    @Input()\n    public set options(v: any) {\n        this._options = v;\n        if (v.__meta__) {\n            this.meta = v.__meta__;\n        }\n    }\n\n    public get options(): any {\n        return this._options;\n    }\n\n    @ViewChildren(PropertyItemTemplateDirective) defaultTemplates: QueryList;\n    @ContentChildren(PropertyItemTemplateDirective) templates: QueryList;\n\n    public rows: Array;\n    public subItems: InternalPropertyItemMeta[];\n\n    constructor(el: ElementRef, private cdr: ChangeDetectorRef) {\n        this.isInternal = el.nativeElement.parentElement.classList.contains('internal-property-grid');\n    }\n\n    ngAfterViewInit(): void {\n        if (this.defaultTemplates) {\n            this.defaultTemplates.forEach((item) => {\n                if (!this.templateMap.hasOwnProperty(item.name)) {\n                    this.templateMap[item.name] = item.template;\n                }\n            });\n            this.cdr.detectChanges();\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this.templates.forEach((item) => {\n            this.templateMap[item.name] = item.template;\n        });\n    }\n\n    public getTemplate(type: string): TemplateRef {\n        if (this.templateMap) {\n            return type ? this.templateMap[type] : this.templateMap['default'];\n        } else {\n            return null;\n        }\n    }\n\n    public propertyValue(meta: InternalPropertyItemMeta): PropertyValue {\n        return new PropertyValue(this.options, meta);\n    }\n\n    public toggle(): void {\n        this.state = this.state === 'visible' ? 'hidden' : 'visible';\n    }\n\n    public convertValue(meta: InternalPropertyItemMeta, val: any): void {\n        this.options[meta.key] = meta.valueConvert ? meta.valueConvert(val) : val;\n    }\n\n    private initMeta(): void {\n        const meta: object = this.meta;\n        if (!meta) {\n            this.rows = [];\n            this.subItems = [];\n            return;\n        }\n\n        const groups: InternalGroup[] = [new InternalGroup(undefined)];\n        const subItems: InternalPropertyItemMeta[] = [];\n        for (const i in meta) {\n            if (!meta.hasOwnProperty(i)) {\n                continue;\n            }\n            const v: InternalPropertyItemMeta = meta[i];\n            if (v.hidden) {\n                continue;\n            }\n            if (v.type === 'subItems') {\n                subItems.push(v);\n                continue;\n            }\n\n            let group = groups.find(o => o.name === v.group);\n            if (!group) {\n                group = new InternalGroup(v.group);\n                groups.push(group);\n            }\n            group.items.push(v);\n        }\n        groups.forEach(o => o.items.sort((a, b) => a.order - b.order));\n        const rows: Array = [];\n        for (const g of groups) {\n            if (g.name) {\n                rows.push(g);\n            }\n            g.items.forEach(o => rows.push(o));\n        }\n        this.rows = rows;\n        this.subItems = subItems;\n    }\n\n    optionLabel(v: any): string {\n        if (typeof v === 'string') {\n            return v;\n        }\n        if (v.text) {\n            return v.text;\n        }\n        if (v.label) {\n            return v.label;\n        }\n        return v;\n    }\n\n    optionValue(v: any): any {\n        return v && v.value ? v.value : v;\n    }\n}\n\nexport class PropertyValue {\n    public get value(): any {\n        return this.o[this.meta.key];\n    }\n\n    public set value(val: any) {\n        this.o[this.meta.key] = this.meta.valueConvert ? this.meta.valueConvert(val) : val;\n    }\n\n    constructor(private o: any, public meta: InternalPropertyItemMeta) {\n    }\n}\n\nexport class InternalGroup {\n    public readonly items: InternalPropertyItemMeta[] = [];\n    public type = 'group';\n\n    constructor(public name: string) {\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PropertyValueAccess.html":{"url":"interfaces/PropertyValueAccess.html","title":"interface - PropertyValueAccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PropertyValueAccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/property-grid/custom.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ControlValueAccessor\n            \n\n\n\n\n    \n\n\n    \n        import {\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    Type,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\n\n@Component({\n    selector: 'custom-component',\n    template: '',\n})\nexport class CustomComponent implements OnInit, ICustomDynamicComponent {\n    private readonly _controlValueChangeFn: (value: any) => void;\n    private _value: any;\n\n    @ViewChild('container', { read: ViewContainerRef }) entry;\n    private component: ComponentRef>;\n\n    @Input() componentType: Type;\n\n    @Input()\n    componentOptions: any;\n\n    @Input()\n    set value(v: any) {\n        this._value = v;\n        if (this.component) {\n            this.component.instance.value =  v;\n        }\n    }\n    get value(): any {\n        return this._value;\n    }\n\n    @Output()\n    readonly valueChange: EventEmitter = new EventEmitter();\n\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n        this._controlValueChangeFn = (value: any) => this.onValueChange(value);\n    }\n\n    ngOnInit() {\n        this.buildComponent();\n    }\n\n    private onValueChange(e: any): void {\n        this._value = e;\n        this.valueChange.emit(e);\n    }\n\n    private buildComponent(): void {\n        if (!this.componentType) {\n            return;\n        }\n        try {\n            this.destroyComponent();\n            // this.entry.clear();\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\n            const component = this.entry.createComponent(componentFactory, 0);\n            this.initComponent(component);\n            this.component = component;\n        } catch (e) {\n            console.error('load component error.');\n            console.error(e);\n        }\n    }\n\n    private initComponent(component: ComponentRef) {\n        component.instance.value = this._value;\n        if (component.instance.registerOnChange) {\n            component.instance.registerOnChange(this._controlValueChangeFn);\n        }\n        if (component.instance.valueChange) {\n            component.instance.valueChange.subscribe(this._controlValueChangeFn);\n        }\n\n        if (this.componentOptions) {\n            Object.assign(component.instance, this.componentOptions);\n        }\n    }\n\n    private destroyComponent(): void {\n        if (this.component) {\n            this.component.destroy();\n        }\n    }\n}\n\nexport interface PropertyValueAccess extends ControlValueAccessor, ICustomDynamicComponent {\n}\n\nexport interface ICustomDynamicComponent {\n    value: TValue;\n    valueChange: EventEmitter;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ShowcaseModule.html":{"url":"modules/ShowcaseModule.html","title":"module - ShowcaseModule","body":"\n                   \n\n\n\n\n  Modules\n  ShowcaseModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ShowcaseModule\n\n\n\ncluster_ShowcaseModule_declarations\n\n\n\ncluster_ShowcaseModule_imports\n\n\n\ncluster_ShowcaseModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nShowcaseModule\n\nShowcaseModule\n\nShowcaseModule -->\n\nAppComponent->ShowcaseModule\n\n\n\n\n\nSimpleTextEditorComponent\n\nSimpleTextEditorComponent\n\nShowcaseModule -->\n\nSimpleTextEditorComponent->ShowcaseModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nShowcaseModule->AppComponent \n\n\n\n\n\nPropertyGridModule\n\nPropertyGridModule\n\nShowcaseModule -->\n\nPropertyGridModule->ShowcaseModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/showcase/showcase.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                SimpleTextEditorComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                MatCheckbox\n                            \n                            \n                                MatDatepicker\n                            \n                            \n                                MatSlideToggle\n                            \n                            \n                                MatSlider\n                            \n                            \n                                SimpleTextEditorComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    PropertyGridModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Schemas\n                    \n                            \n                                CUSTOM_ELEMENTS_SCHEMA\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\n\nimport {AppComponent, SimpleTextEditorComponent} from './app.component';\nimport {PropertyGridModule} from '../components/property-grid/index';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {\n    MatCheckboxModule,\n    MatSlider,\n    MatSliderModule,\n    MatDatepickerModule,\n    MatDatepicker,\n    MatSlideToggleModule,\n    MatSlideToggle, MatNativeDateModule, MatRadioModule, MatInputModule\n} from '@angular/material';\nimport {MatCheckbox} from '@angular/material';\nimport {FormsModule} from '@angular/forms';\nimport {NgxJsonViewerModule} from 'ngx-json-viewer';\n\n@NgModule({\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\n    imports: [\n        BrowserModule, FormsModule, NoopAnimationsModule, PropertyGridModule,\n        NgxJsonViewerModule,\n        MatCheckboxModule, MatSliderModule, MatDatepickerModule, MatSlideToggleModule,\n        MatNativeDateModule, MatRadioModule, MatInputModule\n    ],\n    entryComponents: [SimpleTextEditorComponent, MatCheckbox, MatSlider, MatDatepicker, MatSlideToggle],\n    declarations: [\n        AppComponent, SimpleTextEditorComponent\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class ShowcaseModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleTextEditorComponent.html":{"url":"components/SimpleTextEditorComponent.html","title":"component - SimpleTextEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimpleTextEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/showcase/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                ICustomDynamicComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-editor\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueChange:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/showcase/app.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter} from '@angular/core';\nimport {meta, ICustomDynamicComponent} from '../components/property-grid/index';\nimport {MatCheckbox, MatSlider, MatSlideToggle} from '@angular/material';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    public student: ExampleStudentOptions = new ExampleStudentOptions();\n\n    constructor() {\n    }\n\n    public get data(): string {\n        return JSON.parse(JSON.stringify(this.student));\n    }\n\n    text: string;\n}\n\n@Component({\n    selector: 'app-text-editor',\n    template: ``\n})\nexport class SimpleTextEditorComponent implements ICustomDynamicComponent {\n    value: string;\n    valueChange: EventEmitter = new EventEmitter();\n}\n\nexport class ExampleEditorOptions {\n    @meta({\n        name: 'Font', description: 'The font editor to use', colSpan2: false,\n        componentType: SimpleTextEditorComponent, group: 'Editor', hidden: false\n    })\n    font = 'Source Code Pro';\n\n    @meta({name: 'Font size', group: 'Editor', valueConvert: parseInt, type: 'fontSize'})\n    fontSize = 14;\n\n    @meta({name: 'Font color', group: 'Editor', type: 'color'})\n    fontColor = '#51f41c';\n\n    @meta({name: 'jQuery', group: 'Plugins', componentType: MatCheckbox})\n    jQuery = true;\n\n    @meta({\n        name: 'modernizr',\n        description: 'Whether or not to include modernizr on the page',\n        group: 'Plugins',\n        componentType: MatSlideToggle\n    })\n    modernizr = false;\n\n    @meta({\n        name: 'Framework',\n        description: 'Whether to include any additional framework',\n        type: 'options',\n        componentOptions: {options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]}\n    })\n    framework = 'None';\n\n}\n\nexport class ExampleStudentOptions {\n\n    @meta({name: 'Birth', group: 'Basic Information', type: 'date', order: 4})\n    birth = '2018-05-08';\n\n    @meta({name: 'Name', group: 'Basic Information', type: 'text', order: 1})\n    name = 'Lily';\n\n    @meta({name: 'Age', group: 'Basic Information', valueConvert: parseInt, type: 'text', order: 2})\n    age = 19;\n\n    @meta({name: 'Telephone', type: 'telephone', group: 'Basic Information', hidden: true})\n    telephone;\n\n    @meta({name: 'Gender', group: 'Basic Information', type: 'sex', order: 3})\n    gender = 'male';\n\n    @meta({name: 'Editor Preference', type: 'subItems', initState: 'visible'})\n    editor: ExampleEditorOptions = new ExampleEditorOptions();\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CustomComponent', 'selector': 'custom-component'},{'name': 'PropertyGridComponent', 'selector': 'ngx-property-grid'},{'name': 'SimpleTextEditorComponent', 'selector': 'app-text-editor'}];\n    var DIRECTIVES = [{'name': 'PropertyItemTemplateDirective', 'selector': '[propertyType]'}];\n    var ACTUAL_COMPONENT = {'name': 'SimpleTextEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/components/property-grid/custom.component.ts\n            \n            \n                component\n            \n            \n                CustomComponent\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/custom.component.ts\n            \n            \n                interface\n            \n            \n                ICustomDynamicComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/custom.component.ts\n            \n            \n                interface\n            \n            \n                PropertyValueAccess\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-grid-control-provider.ts\n            \n            \n                injectable\n            \n            \n                PropertyGridControlProvider\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-grid-control-provider.ts\n            \n            \n                variable\n            \n            \n                defaultProvider\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-grid.component.ts\n            \n            \n                component\n            \n            \n                PropertyGridComponent\n            \n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-grid.component.ts\n            \n            \n                class\n            \n            \n                InternalGroup\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-grid.component.ts\n            \n            \n                class\n            \n            \n                PropertyValue\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-item-meta.ts\n            \n            \n                interface\n            \n            \n                InternalPropertyItemMeta\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-item-meta.ts\n            \n            \n                interface\n            \n            \n                PropertyItemMeta\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-item-meta.ts\n            \n            \n                variable\n            \n            \n                meta\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/components/property-grid/property-item-template.directive.ts\n            \n            \n                directive\n            \n            \n                PropertyItemTemplateDirective\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/showcase/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/showcase/app.component.ts\n            \n            \n                component\n            \n            \n                SimpleTextEditorComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/showcase/app.component.ts\n            \n            \n                class\n            \n            \n                ExampleEditorOptions\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/showcase/app.component.ts\n            \n            \n                class\n            \n            \n                ExampleStudentOptions\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\nNgxPropertyGrid\nA small and simple property grid in angular to view/edit POJOs, excellent if you have a \"settings\" object you want to give the user to edit (that's why I have created it). Play online.\nDependencies\n\nangular\n\nUsage\n\nThe metadata options\n\nexport interface PropertyItemMeta {\n    name: string; // The display name of the property in the grid\n    description?: string; // A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\n    order?: number; // The display order.\n    group?: string; //  The group this property belongs to\n    hidden?: boolean; // Whether this property should be hidden in the grid, default is false (can be omitted).\n    initState?: string; // - hidden/visible.\n    componentType?: Type>; // an custom component should be implement\n    // ControlValueAccessor or ICustomDynamicComponent\n    componentOptions?: any;\n    colSpan2?: boolean; //  - true/false. If true then property input will span both columns and will have no name/label\n    // (useful for textarea custom type)\n    type?: string; // boolean number options label color\n    valueConvert?: (value: any) => any; // convert the value, eg. parseInt\n}\nThe Example Options\n\nexport class ExampleEditorOptions {\n    @meta({name: 'Font', description: 'The font editor to use', componentType: SimpleTextEditorComponent, group: 'Editor', hidden: false})\n    font = 'Source Code Pro';\n\n    @meta({name: 'Font size', group: 'Editor', type: 'number', valueConvert: parseInt})\n    fontSize = 14;\n\n    @meta({name: 'Font color', group: 'Editor', type: 'color'})\n    fontColor = '#51f41c';\n\n    @meta({name: 'jQuery', group: 'Plugins', type: 'checkbox'})\n    jQuery = true;\n\n    @meta({name: 'modernizr', description: 'Whether or not to include modernizr on the page', group: 'Plugins', type: 'checkbox'})\n    modernizr = false;\n\n    @meta({\n        name: 'Framework',\n        description: 'Whether to include any additional framework',\n        type: 'options',\n        options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]\n    })\n    framework = 'None';\n}\nThe html part:\n\nBasic\n\ntemplate\n\n    \n        \n    \n    \n        \n    \n\n\n\nThe result would be: See here\n\n\nThe metadata object\nAs seen from the example above the metadata object can be used (it's optional) in order to describe the object properties.\nEach proprty in the metadata object could have the following:\n\nname - The display name of the property in the grid\ndescription - A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\nhidden - Whether this property should be hidden in the grid, default is false (can be omitted).\ngroup - The group this property belongs to\ntype - The type of the property, supported are:\nboolean or checkbox - A checkbox would be used\nnumber -  simple textbox\ncolor - simple textbox\noptions - A dropdown list would be used in case the metadata contains the options array property\nlabel - A label will be used, useful for uneditable / read-only properties\n\n\ncomponentType - An angular component\ncolspan2 - true/false. If true then property input will span both columns and will have no name/label (useful for textarea custom type, see example/index.html)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 YISH\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        PropertyGridModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ShowcaseModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyGridModule\n\n\n\ncluster_PropertyGridModule_declarations\n\n\n\ncluster_PropertyGridModule_exports\n\n\n\ncluster_ShowcaseModule\n\n\n\ncluster_ShowcaseModule_declarations\n\n\n\ncluster_ShowcaseModule_bootstrap\n\n\n\n\nCustomComponent\n\nCustomComponent\n\n\n\nPropertyGridModule\n\nPropertyGridModule\n\nPropertyGridModule -->\n\nCustomComponent->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent\n\nPropertyGridComponent\n\nPropertyGridModule -->\n\nPropertyGridComponent->PropertyGridModule\n\n\n\n\n\nPropertyItemTemplateDirective\n\nPropertyItemTemplateDirective\n\nPropertyGridModule -->\n\nPropertyItemTemplateDirective->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent \n\nPropertyGridComponent \n\nPropertyGridComponent  -->\n\nPropertyGridModule->PropertyGridComponent \n\n\n\n\n\nPropertyItemTemplateDirective \n\nPropertyItemTemplateDirective \n\nPropertyItemTemplateDirective  -->\n\nPropertyGridModule->PropertyItemTemplateDirective \n\n\n\n\n\nShowcaseModule\n\nShowcaseModule\n\nShowcaseModule -->\n\nPropertyGridModule->ShowcaseModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nShowcaseModule -->\n\nAppComponent->ShowcaseModule\n\n\n\n\n\nSimpleTextEditorComponent\n\nSimpleTextEditorComponent\n\nShowcaseModule -->\n\nSimpleTextEditorComponent->ShowcaseModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nShowcaseModule->AppComponent \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            2 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        4 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 directive\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 injectable\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            defaultProvider   (src/.../property-grid-control-provider.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            meta   (src/.../property-item-meta.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/components/property-grid/property-grid-control-provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultProvider:     \n\n                    \n                \n                    \n                        \n                            Default value : new PropertyGridControlProvider()\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/property-grid/property-item-meta.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            meta\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        meta:     \n\n                    \n                \n                    \n                        \n                            Default value : (m: PropertyItemMeta) =>\n    (target: any, key: string | symbol) => {\n        const xMeta = m as InternalPropertyItemMeta;\n        if (!target.__meta__) {\n            target.__meta__ = {};\n        }\n        if (!xMeta.componentType) {\n            if (!xMeta.type) {\n                xMeta.componentType = defaultProvider.getComponentType('text');\n            } else if (xMeta.type === 'boolean') {\n                xMeta.componentType = defaultProvider.getComponentType('checkbox');\n            } else {\n                xMeta.componentType = defaultProvider.getComponentType(m.type);\n            }\n\n            if (xMeta.type === 'number' && !xMeta.valueConvert) {\n                xMeta.valueConvert = parseInt;\n            }\n        }\n        if (!xMeta.initState) {\n            xMeta.initState = 'hidden';\n        }\n        if (!xMeta.order) {\n            xMeta.order = 0;\n        }\n        xMeta.key = key;\n        target.__meta__[key] = xMeta;\n    }\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
