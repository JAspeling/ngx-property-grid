var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/directives/DynamicComponentLoadDirective.html",[0,0.946,1,0.796]],["body/directives/DynamicComponentLoadDirective.html",[0,1.143,1,0.962,2,1.656,3,0.564,4,0.465,5,0.465,6,0.839,7,0.666,8,2.526,9,0.869,10,1.356,11,1.61,12,2.743,13,2.743,14,2.743,15,1.356,16,1.61,17,2.447,18,0.564,19,0.962,20,2.609,21,1.578,22,2.743,23,1.339,24,1.929,25,2.988,26,2.988,27,3.004,28,3.004,29,2.988,30,2.988,31,2.356,32,1.331,33,1.929,34,2.743,35,1.131,36,2.111,37,2.988,38,3.376,39,2.508,40,3.004,41,1.874,42,0.068,43,1.12,44,1.012,45,1.331,46,2.356,47,0.622,48,2.111,49,2.111,50,2.243,51,2.073,52,2.111,53,2.356,54,3.282,55,2.111,56,2.356,57,2.988,58,2.111,59,2.111,60,2.111,61,2.111,62,1.656,63,2.111,64,2.111,65,2.111,66,2.111,67,2.111,68,0.887,69,1.143,70,0.564,71,1.61,72,1.131,73,0.564,74,0.662,75,0.839,76,1.143,77,1.131,78,0.465,79,0.376,80,1.355,81,1.656,82,1.656,83,0.952,84,1.356,85,1.656,86,2.356,87,1.656,88,1.656,89,0.952,90,1.656,91,1.131,92,1.656,93,2.356,94,1.656,95,1.656,96,1.656,97,1.143,98,1.656,99,1.656,100,1.656,101,0.952,102,1.656,103,2.356,104,1.656,105,1.656,106,1.656,107,1.656,108,1.656,109,1.656,110,1.656,111,1.656,112,1.656,113,1.656,114,2.356,115,1.656,116,1.656,117,0.465,118,1.131,119,1.656,120,0.028,121,0.04,122,0.028]],["title/interfaces/IDynamicComponent.html",[76,0.946,117,0.548]],["body/interfaces/IDynamicComponent.html",[3,0.974,4,0.802,5,0.802,6,0.648,7,0.508,8,1.953,18,0.974,19,1.372,42,0.065,44,0.944,68,0.802,70,0.974,75,1.036,76,1.632,78,0.802,117,0.802,120,0.049,121,0.058,122,0.049,123,1.953,124,2.857,125,4.703,126,4.556,127,4.703]],["title/classes/InternalGroup.html",[79,0.443,128,1.333]],["body/classes/InternalGroup.html",[3,0.368,4,0.303,5,0.303,6,0.663,7,0.661,9,0.387,11,0.737,16,0.737,18,0.368,19,0.697,20,1.792,21,1.385,23,0.697,24,1.397,32,0.523,35,0.737,39,1.906,41,0.737,42,0.069,43,1.07,44,0.876,45,0.523,47,0.663,50,0.737,51,1.68,68,0.736,69,1.55,70,0.368,73,0.368,74,0.783,75,0.676,78,0.479,79,0.387,80,1.907,83,2.137,89,1.218,91,1.166,97,1.273,101,2.122,120,0.018,121,0.029,122,0.018,128,1.645,129,0.883,130,1.192,131,0.883,132,2.117,133,1.792,134,2.623,135,1.375,136,1.935,137,1.375,138,1.218,139,1.375,140,1.375,141,1.604,142,1.375,143,1.906,144,1.375,145,1.375,146,1.707,147,1.707,148,1.707,149,1.079,150,1.707,151,2.117,152,2.117,153,1.079,154,1.079,155,2.117,156,1.707,157,1.079,158,1.079,159,1.079,160,1.218,161,0.982,162,2.434,163,1.079,164,1.707,165,1.079,166,1.079,167,1.079,168,1.079,169,3.029,170,2.117,171,3.029,172,1.079,173,1.079,174,1.397,175,1.079,176,3.118,177,3.314,178,2.407,179,1.792,180,1.079,181,0.883,182,1.079,183,1.079,184,1.079,185,2.407,186,1.079,187,2.117,188,0.737,189,1.079,190,1.079,191,1.079,192,2.117,193,2.789,194,2.921,195,1.079,196,2.623,197,1.707,198,1.079,199,1.707,200,2.407,201,2.407,202,2.117,203,2.407,204,3.029,205,2.407,206,1.079,207,1.707,208,1.079,209,2.789,210,1.079,211,1.707,212,1.079,213,1.079,214,1.079,215,2.117,216,0.883,217,1.079,218,1.079,219,0.883,220,1.166,221,2.117,222,1.707,223,1.079,224,1.079,225,1.707,226,1.079,227,1.079,228,1.079,229,1.707,230,1.079,231,1.385,232,1.079,233,1.079,234,1.079,235,1.079,236,1.079,237,1.079,238,0.883,239,1.079,240,1.079,241,2.117,242,1.079,243,1.079,244,1.079,245,1.707,246,1.079,247,0.523,248,1.079,249,1.079,250,1.079,251,1.447,252,1.079,253,1.166,254,2.117,255,1.079,256,1.079,257,0.737,258,1.645,259,0.982,260,1.079,261,1.079,262,1.079,263,1.079,264,0.883,265,0.982,266,1.079,267,1.707,268,2.07,269,1.079,270,1.079,271,1.707,272,1.707,273,1.079,274,1.079,275,1.079,276,1.079,277,1.707,278,1.645,279,1.079,280,1.079,281,2.117,282,1.079,283,1.079,284,1.079,285,1.079,286,1.079,287,1.079,288,1.079,289,1.707,290,1.707,291,1.079,292,1.079,293,2.117,294,1.079,295,1.079,296,0.883,297,1.079,298,1.079,299,1.079,300,1.166,301,1.079,302,1.079,303,0.737,304,1.079,305,1.079,306,2.407,307,1.079,308,0.883,309,1.707,310,1.079,311,1.079,312,2.117,313,1.079,314,1.079,315,1.079,316,1.079,317,1.079,318,1.079,319,1.079,320,1.079,321,1.079,322,1.079,323,1.079,324,1.079,325,1.079,326,1.079,327,1.079,328,1.079,329,1.079,330,1.079,331,1.079,332,1.707,333,1.707,334,1.079,335,1.707,336,1.079]],["title/components/PropertyGridComponent.html",[9,0.443,247,0.946]],["body/components/PropertyGridComponent.html",[0,0.31,1,0.261,2,0.639,3,0.218,4,0.18,5,0.18,6,0.797,7,0.686,9,0.331,11,0.756,15,0.524,16,1.189,17,0.524,18,0.218,19,0.451,20,1.973,21,1.001,23,0.802,24,0.905,31,1.106,32,0.954,33,0.905,35,0.437,39,2.389,41,1.668,42,0.069,43,1.15,44,0.95,45,1.184,47,0.58,50,1.873,51,1.661,68,0.552,69,1.288,70,0.218,73,0.218,74,0.77,75,0.685,78,0.311,79,0.251,80,1.621,83,2.011,89,0.84,91,0.756,97,0.954,101,2.186,120,0.011,121,0.019,122,0.011,128,1.189,130,1.433,131,0.524,132,0.639,133,1.343,134,1.966,136,1.758,138,1.328,141,1.328,143,1.577,146,1.461,147,1.461,148,1.74,149,0.639,150,1.74,151,1.966,152,1.74,153,0.639,154,0.639,155,1.461,156,1.106,157,0.639,158,0.639,159,0.639,160,1.328,161,0.84,162,2.542,163,1.461,164,2.152,165,1.461,166,1.461,167,1.461,168,1.461,169,3.335,170,2.555,171,3.335,172,1.461,173,1.461,174,1.762,175,1.461,176,3.405,177,3.552,178,2.819,179,2.053,180,1.461,181,1.196,182,1.461,183,1.461,184,1.461,185,2.819,186,1.461,187,2.555,188,0.998,189,1.461,190,1.461,191,1.461,192,2.555,193,3.143,194,3.25,195,1.461,196,3.005,197,2.152,198,1.461,199,2.152,200,2.819,201,2.819,202,2.555,203,2.819,204,3.335,205,2.819,206,1.461,207,1.74,208,1.461,209,3.143,210,1.461,211,2.152,212,1.461,213,1.461,214,1.461,215,2.555,216,1.196,217,1.461,218,1.461,219,1.196,220,1.471,221,2.555,222,2.152,223,1.461,224,1.461,225,2.152,226,0.639,227,0.639,228,0.639,229,1.106,230,0.639,231,1.131,232,0.639,233,0.639,234,0.639,235,0.639,236,0.639,237,0.639,238,0.524,239,0.639,240,0.639,241,1.461,242,0.639,243,0.639,244,0.639,245,1.106,246,0.639,247,0.844,248,1.461,249,1.461,250,1.461,251,1.471,252,1.461,253,0.998,254,1.461,255,1.461,256,1.461,257,0.437,258,1.471,259,1.001,260,1.461,261,1.106,262,1.461,263,1.461,264,1.196,265,0.636,266,0.639,267,1.106,268,1.926,269,0.639,270,0.639,271,1.106,272,1.106,273,1.106,274,1.461,275,1.106,276,1.461,277,1.74,278,1.471,279,1.106,280,1.461,281,1.461,282,0.639,283,0.639,284,0.639,285,1.74,286,0.639,287,0.639,288,0.639,289,1.106,290,1.106,291,0.639,292,1.74,293,1.461,294,0.639,295,1.106,296,0.905,297,0.639,298,0.639,299,1.106,300,0.756,301,0.639,302,0.639,303,0.437,304,1.106,305,0.639,306,1.74,307,1.74,308,0.524,309,1.106,310,0.639,311,0.639,312,1.461,313,0.639,314,0.639,315,0.639,316,0.639,317,0.639,318,0.639,319,0.639,320,0.639,321,0.639,322,0.639,323,0.639,324,0.639,325,0.639,326,0.639,327,0.639,328,0.639,329,0.639,330,0.639,331,1.106,332,1.106,333,1.106,334,1.106,335,1.106,336,0.639,337,1.41,338,0.815,339,0.815,340,1.41,341,1.41,342,1.41,343,1.41,344,1.41,345,0.815,346,0.815,347,0.815,348,0.815,349,1.41,350,1.41,351,0.815,352,0.815,353,0.815,354,0.815,355,0.815,356,0.815,357,0.815,358,0.815,359,0.815,360,0.815,361,0.815,362,0.815,363,0.815,364,0.815,365,0.815,366,0.815,367,0.815,368,1.41,369,0.815,370,0.815,371,0.815,372,0.815,373,0.815,374,0.815,375,0.815,376,0.815,377,0.815,378,0.815,379,0.815,380,0.815,381,0.524,382,1.106,383,0.905,384,2.219,385,0.815,386,0.815]],["title/modules/PropertyGridModule.html",[387,1.597,388,1.122]],["body/modules/PropertyGridModule.html",[1,1.518,3,0.876,4,0.722,5,0.722,6,0.584,7,0.561,9,0.584,42,0.067,68,1.044,70,0.876,72,1.757,77,1.757,78,0.722,79,0.584,120,0.044,121,0.054,122,0.044,130,1.05,160,1.479,161,1.479,247,1.889,381,2.106,387,2.106,388,2.205,389,2.106,390,1.479,391,3.415,392,2.572,393,2.572,394,3.415,395,2.572,396,2.572,397,2.572,398,3.156,399,2.572,400,2.106,401,3.279,402,4.025,403,2.572,404,4.025,405,3.279,406,3.279,407,3.156,408,4.025,409,3.279]],["title/interfaces/PropertyItemMeta.html",[47,0.443,117,0.548]],["body/interfaces/PropertyItemMeta.html",[3,0.552,4,0.455,5,0.455,6,0.368,7,0.58,9,0.527,18,0.552,19,0.947,21,0.932,32,1.72,42,0.069,43,1.37,44,1.076,45,1.864,47,0.615,62,2.321,68,0.761,69,0.787,70,0.552,71,1.586,72,1.108,73,0.552,74,0.455,75,0.652,76,0.787,77,1.108,78,0.652,97,1.126,117,0.455,120,0.028,121,0.04,122,0.028,123,1.108,130,0.662,133,1.108,136,2.145,138,1.559,141,1.703,143,2.14,162,1.586,179,2.022,188,1.108,220,1.586,231,2.085,251,1.108,253,2.423,257,2.293,258,1.852,259,1.802,264,2.423,265,0.932,268,1.586,278,1.108,296,2.564,300,1.108,303,1.108,383,1.327,410,1.327,411,2.96,412,3.132,413,2.96,414,3.132,415,2.96,416,2.96,417,2.711,418,2.711,419,2.564,420,2.067,421,2.067,422,1.621,423,1.621,424,1.621,425,2.321,426,1.621,427,1.327,428,1.621,429,1.621,430,1.621,431,2.321,432,1.621,433,1.621,434,1.621,435,1.621,436,1.621,437,1.621,438,1.621,439,1.621,440,1.621,441,1.621,442,1.9,443,2.067,444,2.96,445,1.621,446,1.621,447,1.621,448,1.621,449,2.96,450,2.321,451,2.321,452,2.321,453,1.621,454,2.321,455,1.621,456,3.355,457,2.711,458,1.621,459,2.321,460,1.621,461,1.621,462,1.621,463,1.621,464,1.621,465,1.621]],["title/classes/PropertyValue.html",[23,0.796,79,0.443]],["body/classes/PropertyValue.html",[3,0.862,4,0.71,5,0.71,6,0.825,7,0.659,18,0.862,19,1.275,23,1.275,33,2.558,35,1.729,39,2.419,41,2.135,42,0.067,43,1.275,44,0.952,45,1.516,47,0.825,50,1.729,51,1.455,68,0.71,73,0.862,74,1.04,75,0.952,78,0.71,79,0.574,80,1.455,83,2.092,84,2.071,120,0.043,121,0.053,122,0.043,129,2.071,130,1.484,265,1.455,466,2.53,467,3.226,468,3.226,469,3.984,470,3.226,471,3.226,472,3.226,473,3.226,474,3.226,475,3.984,476,3.984,477,3.226,478,3.226,479,3.226]],["title/interfaces/PropertyValueAccess.html",[117,0.548,118,1.333]],["body/interfaces/PropertyValueAccess.html",[0,1.375,1,0.886,3,0.739,4,0.609,5,0.609,6,0.492,7,0.561,8,1.483,9,0.808,10,1.777,11,1.483,12,2.834,13,2.834,14,2.834,16,1.483,17,1.777,20,2.542,21,1.248,22,2.17,23,1.288,25,2.17,26,2.17,29,2.17,30,2.17,32,1.053,34,2.17,37,2.834,38,3.156,42,0.069,44,0.886,46,2.17,47,0.643,51,1.997,53,2.17,54,3.156,56,2.17,57,2.834,68,0.975,69,1.375,70,0.739,71,2.157,72,1.483,73,0.739,74,0.796,75,0.94,76,1.375,77,1.483,78,0.609,79,0.492,80,1.63,81,2.17,82,2.17,83,1.248,84,1.777,85,2.17,86,2.834,87,2.17,88,2.17,89,1.248,90,2.17,91,1.483,92,2.17,93,2.834,94,2.17,95,2.17,96,2.17,97,1.375,98,2.17,99,2.17,100,2.17,101,1.248,102,2.17,103,2.834,104,2.17,105,2.17,106,2.17,107,2.17,108,2.17,109,2.17,110,2.17,111,2.17,112,2.17,113,2.17,114,2.834,115,2.17,116,2.17,117,0.609,118,1.937,119,2.834,120,0.037,121,0.048,122,0.037,123,1.483]],["title/coverage.html",[480,2.64]],["body/coverage.html",[0,1.264,1,1.063,5,0.732,6,0.865,7,0.678,8,2.347,9,0.779,10,2.605,23,1.063,42,0.066,44,0.732,47,0.591,73,1.084,74,0.732,76,1.264,79,0.722,89,1.499,101,2.194,117,0.964,118,1.78,120,0.045,121,0.054,122,0.045,124,2.605,128,1.78,130,1.497,131,2.605,174,2.133,247,1.264,410,2.605,466,2.605,480,2.605,481,2.605,482,3.322,483,3.322,484,3.322,485,4.057,486,4.057,487,3.322,488,3.322,489,3.322,490,3.322,491,3.322]],["title/dependencies.html",[390,1.346,492,2.09]],["body/dependencies.html",[42,0.065,70,1.026,120,0.052,121,0.059,122,0.052,160,1.733,161,1.733,390,1.994,403,3.012,493,3.841,494,3.841,495,4.421]],["title/index.html",[18,0.559,496,1.342,497,1.342]],["body/index.html",[4,0.491,7,0.663,9,0.396,15,2.638,19,0.999,32,1.767,42,0.067,43,1.315,44,1.04,45,0.848,47,0.396,68,0.859,69,1.188,71,1.194,74,0.491,75,0.859,78,0.687,79,0.396,117,0.491,120,0.042,121,0.042,122,0.03,133,1.194,136,1.761,138,1.625,141,1.625,143,2.43,160,1.625,161,1.625,162,2.282,179,2.202,181,2.638,188,1.93,216,1.431,220,1.93,231,2.045,251,2.091,253,2.091,258,1.194,259,1.761,278,1.194,308,2.734,382,1.747,383,2.004,388,1.005,390,1.005,407,1.747,411,2.447,412,3.429,413,1.747,414,2.825,415,2.447,417,1.747,418,3.222,419,2.638,422,3.34,423,2.447,424,2.447,425,3.061,426,2.447,427,2.506,428,2.447,429,1.747,430,1.747,431,2.825,432,1.747,433,1.747,434,2.447,435,2.447,436,2.447,437,2.447,438,2.825,439,2.447,440,1.747,441,1.747,442,2.004,496,1.431,497,1.431,498,2.228,499,2.228,500,3.602,501,3.121,502,2.228,503,2.228,504,2.228,505,2.228,506,2.228,507,2.228,508,2.228,509,2.228,510,2.228,511,2.228,512,2.228,513,2.228,514,2.228,515,2.228,516,2.228,517,2.228,518,2.228,519,2.228,520,2.228,521,2.228,522,4.109,523,3.903,524,1.747,525,2.228,526,2.228,527,2.228,528,2.228,529,2.228,530,2.228,531,2.228,532,3.121,533,3.121,534,3.602,535,3.121,536,2.228,537,3.602,538,2.228,539,3.121,540,2.228,541,2.228,542,2.228,543,2.228,544,2.228,545,2.228,546,2.228,547,2.228,548,1.747,549,2.228,550,2.228,551,2.228,552,2.228,553,1.747,554,2.228,555,3.121,556,2.228,557,2.228,558,2.228,559,2.228,560,2.228,561,2.228,562,2.228]],["title/license.html",[496,1.342,497,1.342,563,1.639]],["body/license.html",[42,0.054,120,0.044,121,0.054,122,0.044,400,2.106,427,2.106,481,2.572,524,3.156,548,2.572,553,2.572,563,2.572,564,3.279,565,4.354,566,3.279,567,3.279,568,3.279,569,4.025,570,3.279,571,3.279,572,3.279,573,3.279,574,3.279,575,3.279,576,4.025,577,4.888,578,3.279,579,3.279,580,3.279,581,4.354,582,3.279,583,4.025,584,3.279,585,3.279,586,3.279,587,3.279,588,3.279,589,3.279,590,3.279,591,3.279,592,3.279,593,4.025,594,3.279,595,3.279,596,3.279,597,3.279,598,3.279,599,4.025,600,4.025,601,3.279,602,3.279,603,3.279,604,3.279,605,3.279,606,3.279,607,3.279,608,3.279,609,3.279,610,3.279,611,3.279,612,3.279,613,3.279,614,3.279,615,3.279,616,3.279,617,3.279,618,3.279,619,3.279,620,3.279,621,3.279,622,3.279,623,3.279,624,3.279,625,3.279,626,3.279,627,3.279,628,3.279,629,3.279]],["title/modules.html",[389,2.161]],["body/modules.html",[42,0.06,120,0.052,121,0.06,122,0.052,388,1.759,389,2.504,630,3.9,631,3.9,632,3.9,633,3.9]],["title/overview.html",[634,2.64]],["body/overview.html",[0,1.367,1,1.45,9,0.639,42,0.064,120,0.048,121,0.057,122,0.048,123,1.925,129,2.306,219,2.306,238,2.908,247,1.862,381,2.306,387,2.73,388,2.207,390,1.62,391,2.817,392,2.817,393,2.817,394,2.817,395,2.817,396,2.817,397,2.817,398,3.334,399,2.817,400,2.306,634,2.817,635,3.592]],["title/miscellaneous/variables.html",[636,1.639,637,2.34]],["body/miscellaneous/variables.html",[6,0.547,7,0.429,18,0.822,42,0.069,43,1.238,47,0.547,73,1.033,74,0.851,75,0.677,97,1.17,120,0.041,121,0.052,122,0.041,130,0.984,136,1.387,138,1.387,141,1.744,231,1.387,257,2.267,259,1.387,265,1.387,268,2.072,300,1.648,303,1.648,410,2.482,416,2.411,419,1.974,442,1.974,444,3.48,445,2.411,446,2.411,447,2.411,448,2.411,449,3.48,450,3.032,451,3.032,452,3.032,453,2.411,454,3.032,455,2.411,456,3.716,457,3.317,458,2.411,459,3.032,460,2.411,461,2.411,462,2.411,463,2.411,464,2.411,465,2.411,636,2.411,637,2.411,638,3.075]]],"invertedIndex":[["",{"_index":42,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":101,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["0.07",{"_index":237,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["0.1",{"_index":205,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["0/1",{"_index":485,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":488,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":238,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"overview.html":{}}}],["1.1.1",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":204,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["100",{"_index":207,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["10px",{"_index":214,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["12",{"_index":218,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["120px",{"_index":261,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["12px",{"_index":195,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["14",{"_index":216,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"index.html":{}}}],["18px",{"_index":217,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["1px",{"_index":171,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["2",{"_index":219,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"overview.html":{}}}],["2020",{"_index":567,"title":{},"body":{"license.html":{}}}],["20px",{"_index":225,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["2px",{"_index":192,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["3",{"_index":635,"title":{},"body":{"overview.html":{}}}],["3px",{"_index":202,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["51f41c",{"_index":531,"title":{},"body":{"index.html":{}}}],["5px",{"_index":177,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["616161",{"_index":184,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["6px",{"_index":213,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["8px",{"_index":186,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["9.1.4",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["95b8e7",{"_index":172,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["__meta__",{"_index":456,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["_blank",{"_index":298,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["_controlvaluechangefn",{"_index":22,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["_meta",{"_index":249,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["_options",{"_index":248,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["_templateloaded",{"_index":250,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["a.order",{"_index":326,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["above",{"_index":548,"title":{},"body":{"index.html":{},"license.html":{}}}],["accessors",{"_index":33,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["action",{"_index":623,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":386,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["additional",{"_index":538,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":447,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["aftercontentinit",{"_index":146,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["afterviewinit",{"_index":147,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["and/or",{"_index":591,"title":{},"body":{"license.html":{}}}],["angular",{"_index":501,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":158,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["angular/common",{"_index":403,"title":{},"body":{"modules/PropertyGridModule.html":{},"dependencies.html":{}}}],["angular/core",{"_index":70,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":72,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{}}}],["angular9",{"_index":514,"title":{},"body":{"index.html":{}}}],["angularjs",{"_index":540,"title":{},"body":{"index.html":{}}}],["animate",{"_index":154,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["animate('400ms",{"_index":234,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["animate(100",{"_index":245,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["animation,you",{"_index":517,"title":{},"body":{"index.html":{}}}],["animations",{"_index":226,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["any).key",{"_index":448,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["app.module.ts",{"_index":519,"title":{},"body":{"index.html":{}}}],["arising",{"_index":627,"title":{},"body":{"license.html":{}}}],["array",{"_index":560,"title":{},"body":{"index.html":{}}}],["associated",{"_index":578,"title":{},"body":{"license.html":{}}}],["authors",{"_index":617,"title":{},"body":{"license.html":{}}}],["auto",{"_index":420,"title":{},"body":{"interfaces/PropertyItemMeta.html":{}}}],["b",{"_index":325,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["b.order",{"_index":327,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["backbone",{"_index":542,"title":{},"body":{"index.html":{}}}],["backbone.js",{"_index":541,"title":{},"body":{"index.html":{}}}],["background",{"_index":178,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["basic",{"_index":520,"title":{},"body":{"index.html":{}}}],["belongs",{"_index":426,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["bezier(0.86",{"_index":236,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["bold",{"_index":183,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["boolean",{"_index":253,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["bootstrap",{"_index":392,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["border",{"_index":169,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["both",{"_index":435,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["bottom",{"_index":187,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["box",{"_index":200,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["browse",{"_index":633,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":630,"title":{},"body":{"modules.html":{}}}],["browseranimationsmodule",{"_index":518,"title":{},"body":{"index.html":{}}}],["buildcomponent",{"_index":25,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["c",{"_index":566,"title":{},"body":{"license.html":{}}}],["card",{"_index":211,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["cardstyle",{"_index":262,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["case",{"_index":558,"title":{},"body":{"index.html":{}}}],["catch",{"_index":104,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ccc",{"_index":191,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["cdr",{"_index":280,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["changedetectorref",{"_index":148,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["changes",{"_index":59,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["changes.options",{"_index":87,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["charge",{"_index":573,"title":{},"body":{"license.html":{}}}],["checkbox",{"_index":418,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["claim",{"_index":620,"title":{},"body":{"license.html":{}}}],["class",{"_index":79,"title":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":129,"title":{},"body":{"classes/InternalGroup.html":{},"classes/PropertyValue.html":{},"overview.html":{}}}],["cluster_propertygridmodule",{"_index":395,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["cluster_propertygridmodule_declarations",{"_index":396,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["cluster_propertygridmodule_exports",{"_index":397,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["code",{"_index":526,"title":{},"body":{"index.html":{}}}],["color",{"_index":179,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["colspan2",{"_index":411,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["columns",{"_index":436,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["commonmodule",{"_index":402,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["component",{"_index":9,"title":{"components/PropertyGridComponent.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component.instance.registeronchange",{"_index":110,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.registeronchange(this._controlvaluechangefn",{"_index":111,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.value",{"_index":109,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.valuechange",{"_index":112,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.instance.valuechange.subscribe(this._controlvaluechangefn",{"_index":113,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["component.ts",{"_index":124,"title":{},"body":{"interfaces/IDynamicComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":385,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["componentfactory",{"_index":98,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["componentfactoryresolver",{"_index":38,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["componentref",{"_index":54,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["components",{"_index":337,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["componenttype",{"_index":34,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["conditions",{"_index":598,"title":{},"body":{"license.html":{}}}],["connection",{"_index":628,"title":{},"body":{"license.html":{}}}],["console.error('load",{"_index":106,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["console.error(e",{"_index":108,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["const",{"_index":97,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":35,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["constructor(el",{"_index":279,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["constructor(entry",{"_index":36,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["constructor(name",{"_index":135,"title":{},"body":{"classes/InternalGroup.html":{}}}],["constructor(o",{"_index":467,"title":{},"body":{"classes/PropertyValue.html":{}}}],["constructor(private",{"_index":84,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["constructor(public",{"_index":336,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["contains",{"_index":559,"title":{},"body":{"index.html":{}}}],["contentchildren",{"_index":149,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["contentchildren(ngxtemplate",{"_index":275,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["continue",{"_index":312,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["contract",{"_index":624,"title":{},"body":{"license.html":{}}}],["control",{"_index":189,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["controlvalueaccessor",{"_index":71,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["convert",{"_index":440,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["copies",{"_index":593,"title":{},"body":{"license.html":{}}}],["copy",{"_index":576,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":565,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":480,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":511,"title":{},"body":{"index.html":{}}}],["cubic",{"_index":235,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["custom",{"_index":431,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["d6d6d678",{"_index":173,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["damages",{"_index":621,"title":{},"body":{"license.html":{}}}],["date",{"_index":417,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["dbdbdb",{"_index":210,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["deal",{"_index":580,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":629,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":391,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["declare",{"_index":543,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":368,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["default",{"_index":138,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaulttemplates",{"_index":274,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["defined",{"_index":39,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["demo",{"_index":545,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":390,"title":{"dependencies.html":{}},"body":{"modules/PropertyGridModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["describe",{"_index":550,"title":{},"body":{"index.html":{}}}],["description",{"_index":412,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["destroycomponent",{"_index":26,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["directive",{"_index":0,"title":{"directives/DynamicComponentLoadDirective.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":2,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"components/PropertyGridComponent.html":{}}}],["display",{"_index":220,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["distribute",{"_index":589,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":481,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":338,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["dotted",{"_index":190,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["dropdown",{"_index":556,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":77,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{}}}],["dynamiccomponentload",{"_index":17,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["dynamiccomponentloaddirective",{"_index":1,"title":{"directives/DynamicComponentLoadDirective.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"overview.html":{}}}],["e",{"_index":105,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["each",{"_index":551,"title":{},"body":{"index.html":{}}}],["edit",{"_index":509,"title":{},"body":{"index.html":{}}}],["editor",{"_index":523,"title":{},"body":{"index.html":{}}}],["eg",{"_index":441,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["el",{"_index":345,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["el.nativeelement.parentelement",{"_index":282,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["el.nativeelement.parentelement.classlist",{"_index":283,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["el.nativeelement.parentelement.classlist.contains('internal",{"_index":284,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["element",{"_index":383,"title":{},"body":{"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["elementref",{"_index":150,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["endregion",{"_index":455,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["entry",{"_index":46,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["enumerable",{"_index":465,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":107,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["event",{"_index":616,"title":{},"body":{"license.html":{}}}],["eventemitter",{"_index":127,"title":{},"body":{"interfaces/IDynamicComponent.html":{}}}],["example",{"_index":547,"title":{},"body":{"index.html":{}}}],["exampleeditoroptions",{"_index":521,"title":{},"body":{"index.html":{}}}],["excellent",{"_index":504,"title":{},"body":{"index.html":{}}}],["export",{"_index":78,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["exports",{"_index":394,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["express",{"_index":607,"title":{},"body":{"license.html":{}}}],["extends",{"_index":119,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["f5f5f5",{"_index":198,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["false",{"_index":251,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["fff",{"_index":212,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["files",{"_index":579,"title":{},"body":{"license.html":{}}}],["fitness",{"_index":612,"title":{},"body":{"license.html":{}}}],["flex",{"_index":221,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["flow",{"_index":222,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["following",{"_index":553,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":181,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"index.html":{}}}],["fontcolor",{"_index":530,"title":{},"body":{"index.html":{}}}],["fontsize",{"_index":529,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":408,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["framework",{"_index":537,"title":{},"body":{"index.html":{}}}],["free",{"_index":572,"title":{},"body":{"license.html":{}}}],["function",{"_index":62,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyItemMeta.html":{}}}],["furnished",{"_index":596,"title":{},"body":{"license.html":{}}}],["generate",{"_index":421,"title":{},"body":{"interfaces/PropertyItemMeta.html":{}}}],["getcomponenttype",{"_index":66,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["getmeta",{"_index":375,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["getoptions",{"_index":378,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["gettemplate",{"_index":340,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["gettemplate(type",{"_index":299,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["gettemplateloaded",{"_index":373,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["getting",{"_index":496,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getvalue",{"_index":471,"title":{},"body":{"classes/PropertyValue.html":{}}}],["give",{"_index":507,"title":{},"body":{"index.html":{}}}],["granted",{"_index":571,"title":{},"body":{"license.html":{}}}],["grid",{"_index":162,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["grid.component",{"_index":406,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["grid.component.ts",{"_index":131,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"coverage.html":{}}}],["grid.component.ts:219",{"_index":366,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:220",{"_index":365,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:221",{"_index":367,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:222",{"_index":374,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:226",{"_index":371,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:229",{"_index":354,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:232",{"_index":352,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:235",{"_index":355,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:239",{"_index":348,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:242",{"_index":346,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:245",{"_index":347,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:248",{"_index":351,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:251",{"_index":349,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:256",{"_index":376,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:261",{"_index":350,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:268",{"_index":379,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:272",{"_index":369,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:273",{"_index":372,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:275",{"_index":370,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:276",{"_index":344,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:283",{"_index":359,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:299",{"_index":358,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:310",{"_index":360,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:316",{"_index":356,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:324",{"_index":363,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:328",{"_index":364,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:332",{"_index":357,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:367",{"_index":361,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:380",{"_index":362,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["grid.component.ts:386",{"_index":139,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:387",{"_index":144,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:389",{"_index":142,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:391",{"_index":145,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:393",{"_index":137,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.component.ts:395",{"_index":140,"title":{},"body":{"classes/InternalGroup.html":{}}}],["grid.module.ts",{"_index":401,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["grid/src/lib/dynamic",{"_index":8,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["grid/src/lib/property",{"_index":130,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":143,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["group.items.push(v",{"_index":322,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["group.name",{"_index":163,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["groupcollapse",{"_index":263,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["groups",{"_index":277,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["groups.filter(o",{"_index":329,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["groups.find(o",{"_index":317,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["groups.foreach(o",{"_index":323,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["groups.push(group",{"_index":321,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["header",{"_index":197,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["height",{"_index":229,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["help",{"_index":443,"title":{},"body":{"interfaces/PropertyItemMeta.html":{}}}],["hereby",{"_index":570,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":231,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["hidden/visible",{"_index":429,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["hint",{"_index":424,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["holders",{"_index":618,"title":{},"body":{"license.html":{}}}],["html",{"_index":382,"title":{},"body":{"components/PropertyGridComponent.html":{},"index.html":{}}}],["icustomdynamiccomponent",{"_index":433,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["identifier",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["idynamiccomponent",{"_index":76,"title":{"interfaces/IDynamicComponent.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["ignored",{"_index":165,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["implement",{"_index":432,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["implements",{"_index":11,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["implied",{"_index":608,"title":{},"body":{"license.html":{}}}],["import",{"_index":68,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["imports",{"_index":409,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["include",{"_index":535,"title":{},"body":{"index.html":{}}}],["included",{"_index":601,"title":{},"body":{"license.html":{}}}],["including",{"_index":583,"title":{},"body":{"license.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["init",{"_index":430,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["initcomponent",{"_index":27,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["initcomponent(component",{"_index":53,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["initmeta",{"_index":307,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["initstate",{"_index":413,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["input",{"_index":69,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["input('dynamiccomponentload",{"_index":82,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["inputs",{"_index":31,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"components/PropertyGridComponent.html":{}}}],["interface",{"_index":117,"title":{"interfaces/IDynamicComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":123,"title":{},"body":{"interfaces/IDynamicComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"overview.html":{}}}],["internal",{"_index":193,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["internalgroup",{"_index":128,"title":{"classes/InternalGroup.html":{}},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"coverage.html":{}}}],["internalgroup(undefined",{"_index":310,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["internalgroup(v.group",{"_index":320,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["isinternal",{"_index":255,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["it's",{"_index":549,"title":{},"body":{"index.html":{}}}],["item",{"_index":73,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["item.name",{"_index":164,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["item.template",{"_index":290,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["itemmeta",{"_index":444,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.initstate",{"_index":451,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.order",{"_index":452,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.showhelp",{"_index":454,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.type",{"_index":449,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["itemmeta.valueconvert",{"_index":450,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["items",{"_index":132,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["jquery",{"_index":532,"title":{},"body":{"index.html":{}}}],["key",{"_index":257,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":606,"title":{},"body":{"license.html":{}}}],["label",{"_index":188,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["labelwidth",{"_index":260,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["left",{"_index":199,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["legend",{"_index":381,"title":{},"body":{"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"overview.html":{}}}],["liability",{"_index":622,"title":{},"body":{"license.html":{}}}],["liable",{"_index":619,"title":{},"body":{"license.html":{}}}],["license",{"_index":563,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":584,"title":{},"body":{"license.html":{}}}],["limited",{"_index":609,"title":{},"body":{"license.html":{}}}],["link",{"_index":296,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{}}}],["list",{"_index":557,"title":{},"body":{"index.html":{}}}],["literal",{"_index":353,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["live",{"_index":544,"title":{},"body":{"index.html":{}}}],["load.directive",{"_index":405,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["load.directive.ts",{"_index":10,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["load.directive.ts:18",{"_index":63,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:19",{"_index":64,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:20",{"_index":65,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:21",{"_index":67,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:25",{"_index":48,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:27",{"_index":40,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:33",{"_index":58,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:39",{"_index":61,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:43",{"_index":60,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:47",{"_index":49,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:64",{"_index":55,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["load.directive.ts:78",{"_index":52,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["margin",{"_index":194,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["matching",{"_index":121,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":611,"title":{},"body":{"license.html":{}}}],["merge",{"_index":587,"title":{},"body":{"license.html":{}}}],["meta",{"_index":74,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["meta(v",{"_index":266,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["meta({name",{"_index":522,"title":{},"body":{"index.html":{}}}],["meta.hasownproperty(i",{"_index":311,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["meta.ts",{"_index":410,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meta[i",{"_index":313,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"components/PropertyGridComponent.html":{},"index.html":{}}}],["methods",{"_index":24,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["miscellaneous",{"_index":636,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":564,"title":{},"body":{"license.html":{}}}],["modernizr",{"_index":534,"title":{},"body":{"index.html":{}}}],["modify",{"_index":586,"title":{},"body":{"license.html":{}}}],["module",{"_index":387,"title":{"modules/PropertyGridModule.html":{}},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["modules",{"_index":389,"title":{"modules.html":{}},"body":{"modules/PropertyGridModule.html":{},"modules.html":{}}}],["name",{"_index":43,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name/label",{"_index":437,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["need",{"_index":516,"title":{},"body":{"index.html":{}}}],["new",{"_index":89,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["ngaftercontentinit",{"_index":292,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["ngafterviewinit",{"_index":285,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["ngmodule",{"_index":404,"title":{},"body":{"modules/PropertyGridModule.html":{}}}],["ngonchanges",{"_index":28,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{}}}],["ngonchanges(changes",{"_index":56,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ngondestroy",{"_index":29,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ngoninit",{"_index":30,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ngx",{"_index":160,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngxpropertygrid",{"_index":498,"title":{},"body":{"index.html":{}}}],["ngxtemplate",{"_index":159,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["ngxtemplatemodule",{"_index":407,"title":{},"body":{"modules/PropertyGridModule.html":{},"index.html":{}}}],["none",{"_index":539,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":615,"title":{},"body":{"license.html":{}}}],["notice",{"_index":599,"title":{},"body":{"license.html":{}}}],["number",{"_index":259,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["number.max_value",{"_index":453,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["o",{"_index":469,"title":{},"body":{"classes/PropertyValue.html":{}}}],["o.items.length",{"_index":330,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["o.items.sort((a",{"_index":324,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["o.name",{"_index":318,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["object",{"_index":308,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"index.html":{}}}],["object.assign(component.instance",{"_index":115,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["object.create(object.getprototypeof(__meta__",{"_index":460,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["object.defineproperty(__meta__",{"_index":464,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["object.defineproperty(submeta",{"_index":462,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["object.getownpropertydescriptor(__meta__",{"_index":463,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["object.getownpropertynames(__meta__).foreach(name",{"_index":461,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":575,"title":{},"body":{"license.html":{}}}],["omitted",{"_index":428,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["onchanges",{"_index":14,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["ondestroy",{"_index":13,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["online",{"_index":513,"title":{},"body":{"index.html":{}}}],["openlink",{"_index":341,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["openlink(link",{"_index":295,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["optional",{"_index":45,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["optionlabel",{"_index":342,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["optionlabel(option",{"_index":167,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["optionlabel(v",{"_index":331,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["options",{"_index":32,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["options(v",{"_index":270,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["optionvalue",{"_index":343,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["optionvalue(v",{"_index":334,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["order",{"_index":414,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["otherwise",{"_index":626,"title":{},"body":{"license.html":{}}}],["out",{"_index":400,"title":{},"body":{"modules/PropertyGridModule.html":{},"license.html":{},"overview.html":{}}}],["overflow",{"_index":230,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["overview",{"_index":634,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.value",{"_index":166,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["package",{"_index":492,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":176,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["page",{"_index":536,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":41,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["parseint",{"_index":442,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["particular",{"_index":613,"title":{},"body":{"license.html":{}}}],["peer",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["permission",{"_index":569,"title":{},"body":{"license.html":{}}}],["permit",{"_index":594,"title":{},"body":{"license.html":{}}}],["person",{"_index":574,"title":{},"body":{"license.html":{}}}],["persons",{"_index":595,"title":{},"body":{"license.html":{}}}],["play",{"_index":512,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":533,"title":{},"body":{"index.html":{}}}],["pojos",{"_index":503,"title":{},"body":{"index.html":{}}}],["portions",{"_index":603,"title":{},"body":{"license.html":{}}}],["private",{"_index":20,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["pro",{"_index":527,"title":{},"body":{"index.html":{}}}],["projects/.../property",{"_index":638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/ngx",{"_index":6,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":19,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"index.html":{}}}],["property",{"_index":7,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propertygridcomponent",{"_index":247,"title":{"components/PropertyGridComponent.html":{}},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"coverage.html":{},"overview.html":{}}}],["propertygridmodule",{"_index":388,"title":{"modules/PropertyGridModule.html":{}},"body":{"modules/PropertyGridModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["propertyitemmeta",{"_index":47,"title":{"interfaces/PropertyItemMeta.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propertykey",{"_index":416,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["propertyvalue",{"_index":23,"title":{"classes/PropertyValue.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["propertyvalue(changes.options.currentvalue",{"_index":90,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["propertyvalue(meta",{"_index":304,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["propertyvalue(this.options",{"_index":305,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["propertyvalueaccess",{"_index":118,"title":{"interfaces/PropertyValueAccess.html":{}},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{}}}],["proprty",{"_index":552,"title":{},"body":{"index.html":{}}}],["provided",{"_index":604,"title":{},"body":{"license.html":{}}}],["providers",{"_index":393,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["public",{"_index":83,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["publish",{"_index":588,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":614,"title":{},"body":{"license.html":{}}}],["querylist",{"_index":151,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["read",{"_index":562,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":21,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"interfaces/PropertyValueAccess.html":{}}}],["region",{"_index":446,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":399,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}],["restriction",{"_index":582,"title":{},"body":{"license.html":{}}}],["result",{"_index":120,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":122,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":80,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["returns",{"_index":50,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{}}}],["rgba(0",{"_index":215,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["rgba(10",{"_index":203,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["right",{"_index":208,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["rights",{"_index":585,"title":{},"body":{"license.html":{}}}],["row",{"_index":223,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["seen",{"_index":546,"title":{},"body":{"index.html":{}}}],["selector",{"_index":16,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["sell",{"_index":592,"title":{},"body":{"license.html":{}}}],["set",{"_index":265,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"miscellaneous/variables.html":{}}}],["setmeta(v",{"_index":377,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["setoptions(v",{"_index":380,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["settings",{"_index":505,"title":{},"body":{"index.html":{}}}],["setvalue(val",{"_index":473,"title":{},"body":{"classes/PropertyValue.html":{}}}],["shadow",{"_index":201,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["shall",{"_index":600,"title":{},"body":{"license.html":{}}}],["showhelp",{"_index":264,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{}}}],["simple",{"_index":500,"title":{},"body":{"index.html":{}}}],["simplechanges",{"_index":57,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["simpletexteditorcomponent",{"_index":525,"title":{},"body":{"index.html":{}}}],["size",{"_index":528,"title":{},"body":{"index.html":{}}}],["small",{"_index":499,"title":{},"body":{"index.html":{}}}],["software",{"_index":577,"title":{},"body":{"license.html":{}}}],["solid",{"_index":170,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{}}}],["spacing",{"_index":175,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["span",{"_index":425,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["started",{"_index":497,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":133,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["state('hidden",{"_index":228,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["state('in",{"_index":240,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["state('visible",{"_index":232,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["statements",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":136,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":155,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["style({transform",{"_index":241,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["styles",{"_index":168,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["subitems",{"_index":278,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["subitems.push(v",{"_index":316,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["subject",{"_index":597,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":590,"title":{},"body":{"license.html":{}}}],["submeta",{"_index":459,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["substantial",{"_index":602,"title":{},"body":{"license.html":{}}}],["support",{"_index":631,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":554,"title":{},"body":{"index.html":{}}}],["svg",{"_index":632,"title":{},"body":{"modules.html":{}}}],["table",{"_index":174,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":491,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":445,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["target.__meta__",{"_index":457,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["target.__proto__.__meta__",{"_index":458,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":161,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"modules/PropertyGridModule.html":{},"dependencies.html":{},"index.html":{}}}],["templateloaded",{"_index":252,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["templatemap",{"_index":256,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["templateref",{"_index":152,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["templates",{"_index":276,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["text",{"_index":419,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["textarea",{"_index":439,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["textbox",{"_index":555,"title":{},"body":{"index.html":{}}}],["that's",{"_index":510,"title":{},"body":{"index.html":{}}}],["this._controlvaluechangefn",{"_index":85,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this._meta",{"_index":267,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["this._options",{"_index":271,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["this._templateloaded",{"_index":254,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["this.buildcomponent",{"_index":92,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.cdr.detectchanges",{"_index":291,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["this.component",{"_index":103,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.component.destroy",{"_index":116,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(this.componenttype",{"_index":99,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.componenttype",{"_index":94,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.defaulttemplates",{"_index":286,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["this.defaulttemplates.foreach((item",{"_index":287,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["this.destroycomponent",{"_index":93,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.entry.clear",{"_index":96,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.entry.createcomponent(componentfactory",{"_index":100,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.groups",{"_index":328,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["this.initcomponent(component",{"_index":102,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.initmeta",{"_index":269,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["this.isinternal",{"_index":281,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["this.meta",{"_index":91,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.meta.options",{"_index":114,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.meta.type",{"_index":81,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.meta.valueconvert",{"_index":478,"title":{},"body":{"classes/PropertyValue.html":{}}}],["this.meta.valueconvert(val",{"_index":479,"title":{},"body":{"classes/PropertyValue.html":{}}}],["this.o[this.meta.key",{"_index":476,"title":{},"body":{"classes/PropertyValue.html":{}}}],["this.propertyvalue",{"_index":88,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.propertyvalue.value",{"_index":86,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["this.state",{"_index":306,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["this.subitems",{"_index":309,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["this.templatemap",{"_index":293,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["this.templatemap.default",{"_index":302,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["this.templatemap.hasownproperty(item.name",{"_index":288,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["this.templatemap[item.name",{"_index":289,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["this.templatemap[type",{"_index":301,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["this.templates.foreach((item",{"_index":294,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["toggle",{"_index":134,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["tooltip",{"_index":423,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["top",{"_index":185,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["tort",{"_index":625,"title":{},"body":{"license.html":{}}}],["transition",{"_index":156,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["transition('visible",{"_index":233,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["transition('void",{"_index":243,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["translatex",{"_index":244,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["translatex(0",{"_index":242,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["translatex(100",{"_index":246,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["tree",{"_index":339,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["trigger",{"_index":157,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["trigger('collapseanimation",{"_index":227,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["trigger('flyinout",{"_index":239,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["true",{"_index":141,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["true/false",{"_index":434,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["try",{"_index":95,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["tvalue",{"_index":126,"title":{},"body":{"interfaces/IDynamicComponent.html":{}}}],["type",{"_index":44,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"coverage.html":{},"index.html":{}}}],["typeof",{"_index":300,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":303,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["uneditable",{"_index":561,"title":{},"body":{"index.html":{}}}],["unset",{"_index":209,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["usage",{"_index":515,"title":{},"body":{"index.html":{}}}],["use",{"_index":524,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":422,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["useful",{"_index":438,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["user",{"_index":508,"title":{},"body":{"index.html":{}}}],["v",{"_index":268,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"miscellaneous/variables.html":{}}}],["v.__meta__",{"_index":272,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["v.group",{"_index":319,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["v.hidden",{"_index":314,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["v.label",{"_index":333,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["v.text",{"_index":332,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["v.type",{"_index":315,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["v.value",{"_index":335,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["val",{"_index":475,"title":{},"body":{"classes/PropertyValue.html":{}}}],["value",{"_index":75,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/IDynamicComponent.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value(val",{"_index":477,"title":{},"body":{"classes/PropertyValue.html":{}}}],["value.ts",{"_index":466,"title":{},"body":{"classes/PropertyValue.html":{},"coverage.html":{}}}],["value.ts:10",{"_index":468,"title":{},"body":{"classes/PropertyValue.html":{}}}],["value.ts:11",{"_index":470,"title":{},"body":{"classes/PropertyValue.html":{}}}],["value.ts:4",{"_index":472,"title":{},"body":{"classes/PropertyValue.html":{}}}],["value.ts:8",{"_index":474,"title":{},"body":{"classes/PropertyValue.html":{}}}],["valuechange",{"_index":125,"title":{},"body":{"interfaces/IDynamicComponent.html":{}}}],["valueconvert",{"_index":415,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["var",{"_index":384,"title":{},"body":{"components/PropertyGridComponent.html":{}}}],["variable",{"_index":490,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":637,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["view/edit",{"_index":502,"title":{},"body":{"index.html":{}}}],["viewchildren",{"_index":153,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["viewchildren(ngxtemplate",{"_index":273,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["viewcontainerref",{"_index":37,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"interfaces/PropertyValueAccess.html":{}}}],["visible",{"_index":258,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"interfaces/PropertyItemMeta.html":{},"index.html":{}}}],["void",{"_index":51,"title":{},"body":{"directives/DynamicComponentLoadDirective.html":{},"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{},"classes/PropertyValue.html":{},"interfaces/PropertyValueAccess.html":{}}}],["want",{"_index":506,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":610,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":605,"title":{},"body":{"license.html":{}}}],["webkit",{"_index":206,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["weight",{"_index":182,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["whether",{"_index":427,"title":{},"body":{"interfaces/PropertyItemMeta.html":{},"index.html":{},"license.html":{}}}],["white",{"_index":180,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["width",{"_index":196,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["window.open(link",{"_index":297,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["without",{"_index":581,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":224,"title":{},"body":{"classes/InternalGroup.html":{},"components/PropertyGridComponent.html":{}}}],["yish",{"_index":568,"title":{},"body":{"license.html":{}}}],["zoom",{"_index":398,"title":{},"body":{"modules/PropertyGridModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"directives/DynamicComponentLoadDirective.html":{"url":"directives/DynamicComponentLoadDirective.html","title":"directive - DynamicComponentLoadDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DynamicComponentLoadDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [dynamicComponentLoad]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _controlValueChangeFn\n                            \n                            \n                                    Private\n                                component\n                            \n                            \n                                    Private\n                                propertyValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildComponent\n                            \n                            \n                                    Private\n                                destroyComponent\n                            \n                            \n                                    Private\n                                initComponent\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dynamicComponentLoad\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    componentType\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entry: ViewContainerRef, componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entry\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dynamicComponentLoad\n                    \n                \n                \n                    \n                        Type :         PropertyItemMeta\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:27\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildComponent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            destroyComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroyComponent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initComponent(component: ComponentRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                ComponentRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _controlValueChangeFn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ComponentRef>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            propertyValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PropertyValue\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        componentType\n                    \n                \n\n                \n                    \n                        getcomponentType()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts:21\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef, Directive,\n  Input, OnChanges, OnDestroy,\n  OnInit, SimpleChanges,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\nimport {PropertyItemMeta} from './property-item-meta';\nimport {PropertyValue} from './property-value';\nimport {IDynamicComponent} from './dynamic-component';\n\n@Directive({\n  selector: '[dynamicComponentLoad]',\n})\nexport class DynamicComponentLoadDirective implements OnInit, OnDestroy, OnChanges {\n  private readonly _controlValueChangeFn: (value: any) => void;\n  private component: ComponentRef>;\n  private propertyValue: PropertyValue;\n  private get componentType(): Type {\n    return this.meta.type as Type;\n  }\n\n  @Input('dynamicComponentLoad') private meta: PropertyItemMeta;\n  @Input()\n  public options: any;\n\n  constructor(private entry: ViewContainerRef, private componentFactoryResolver: ComponentFactoryResolver) {\n    this._controlValueChangeFn = (value: any) => this.propertyValue.value = value;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options) {\n      this.propertyValue = new PropertyValue(changes.options.currentValue, this.meta);\n    }\n  }\n\n  ngOnInit() {\n    this.buildComponent();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyComponent();\n  }\n\n  private buildComponent(): void {\n    if (!this.componentType) {\n      return;\n    }\n    try {\n      this.destroyComponent();\n      // this.entry.clear();\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\n      const component = this.entry.createComponent(componentFactory, 0);\n      this.initComponent(component);\n      this.component = component;\n    } catch (e) {\n      console.error('load component error.');\n      console.error(e);\n    }\n  }\n\n  private initComponent(component: ComponentRef) {\n    component.instance.value = this.propertyValue.value;\n    if (component.instance.registerOnChange) {\n      component.instance.registerOnChange(this._controlValueChangeFn);\n    }\n    if (component.instance.valueChange) {\n      component.instance.valueChange.subscribe(this._controlValueChangeFn);\n    }\n\n    if (this.meta.options) {\n      Object.assign(component.instance, this.meta.options);\n    }\n  }\n\n  private destroyComponent(): void {\n    if (this.component) {\n      this.component.destroy();\n    }\n  }\n}\n\ninterface PropertyValueAccess extends ControlValueAccessor, IDynamicComponent {\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDynamicComponent.html":{"url":"interfaces/IDynamicComponent.html","title":"interface - IDynamicComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDynamicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/dynamic-component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        valueChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     TValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueChange\n                                    \n                                \n                                \n                                    \n                                        valueChange:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {EventEmitter} from '@angular/core';\n\n\nexport interface IDynamicComponent {\n  value: TValue;\n  valueChange: EventEmitter;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InternalGroup.html":{"url":"classes/InternalGroup.html","title":"class - InternalGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InternalGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/property-grid.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                items\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                state\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:393\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PropertyItemMeta[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:386\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:395\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:389\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'group'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:387\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:391\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AfterContentInit, AfterViewInit, ChangeDetectorRef,\n  Component,\n  ContentChildren, ElementRef,\n  Input,\n  QueryList,\n  TemplateRef, ViewChildren\n} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {NgxTemplate} from 'ngx-template';\nimport {PropertyItemMeta} from './property-item-meta';\nimport {PropertyValue} from './property-value';\n\n@Component({\n  selector: 'ngx-property-grid',\n  template: `\n    \n      \n        \n          \n          \n            \n              {{group.name}}\n            \n\n            \n              \n                \n                  {{item.name}}\n                  [?]\n                \n                \n                  \n                  \n                \n              \n              \n                \n              \n            \n          \n          \n        \n      \n\n      \n        \n          {{item.name}}\n        \n        \n        \n      \n    \n\n\n    \n      \n        this is ignored\n        \n          \n          \n        \n        \n          \n          \n        \n      \n    \n\n\n    \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        {{p.value}}\n      \n\n      \n        \n      \n\n      \n        \n          \n            {{optionLabel(option)}}\n          \n        \n      \n    \n  `,\n  styles: [\n      `\n      .property-grid {\n        /*border: solid 1px #95B8E7;*/\n      }\n\n      .property-grid-border {\n        border: 1px solid #d6d6d678\n      }\n\n      .property-grid-table {\n        border-spacing: 0;\n        padding: 5px\n      }\n\n      .property-grid-group {\n        background-color: white;\n        font-weight: bold;\n        color: #616161;\n        padding-top: 8px;\n        padding-bottom: 5px;\n      }\n\n      .property-grid-label, .property-grid-control {\n        border: dotted 1px #ccc;\n        padding: 2px 5px;\n      }\n\n      .internal-property-grid {\n        margin-top: 12px;\n      }\n\n      .internal-property-grid .property-grid {\n        border-width: 0;\n      }\n\n      .internal-property-grid .property-grid-header {\n        margin-bottom: 5px;\n        background-color: #f5f5f5;\n        padding-bottom: 5px;\n        padding-top: 5px;\n        padding-left: 5px;\n        box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n        -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n        width: 100%;\n      }\n\n      .internal-property-grid .property-grid-header-margin {\n        margin-left: 5px;\n        margin-right: 5px;\n        width: unset;\n      }\n\n      .internal-property-grid .property-grid-table {\n        border-width: 0;\n        /*border-top: 1px solid #dbdbdb;*/\n      }\n\n      .card {\n        background-color: #fff;\n        box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n        display: flex;\n        flex-flow: row wrap;\n        /*margin: 5px 20px;*/\n        padding: 0;\n      }\n\n      .internal-property-grid ngx-property-grid .card {\n        background-color: unset;\n        box-shadow: unset;\n        display: unset;\n        flex-flow: unset;\n        /*margin: 5px 20px;*/\n        padding: unset;\n      }\n    `\n  ],\n  animations: [\n    trigger('collapseAnimation', [\n      state('hidden', style({\n        height: '0',\n        // overflow: 'hidden',\n      })),\n      state('visible', style({\n        height: '*'\n      })),\n      transition('visible  hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n    ]),\n    trigger('flyInOut', [\n      state('in', style({transform: 'translateX(0)'})),\n      transition('void => *', [\n        style({transform: 'translateX(-100%)'}),\n        animate(100)\n      ]),\n      transition('* => void', [\n        animate(100, style({transform: 'translateX(100%)'}))\n      ])\n    ])\n  ]\n})\nexport class PropertyGridComponent implements AfterContentInit, AfterViewInit {\n  private _options: any;\n  private _meta: any;\n  private _templateLoaded = false;\n  public get templateLoaded(): boolean {\n    return this._templateLoaded;\n  }\n\n  public readonly isInternal: boolean = false;\n\n  @Input()\n  public templateMap: { [key: string]: TemplateRef };\n\n  @Input()\n  public state: 'hidden' | 'visible' = 'visible';\n\n  @Input()\n  width: string | number;\n\n\n  @Input()\n  labelWidth: string | number = '120px';\n\n  @Input()\n  cardStyle = true;\n\n  @Input()\n  groupCollapse = false;\n\n  @Input()\n  showHelp = true;\n\n  @Input()\n  public set meta(v: any) {\n    this._meta = v;\n    this.initMeta();\n  }\n\n  public get meta(): any {\n    return this._meta;\n  }\n\n  @Input()\n  public set options(v: any) {\n    this._options = v;\n    if (v.__meta__) {\n      this.meta = v.__meta__;\n    }\n  }\n\n  public get options(): any {\n    return this._options;\n  }\n\n  @ViewChildren(NgxTemplate) defaultTemplates: QueryList;\n  @ContentChildren(NgxTemplate) templates: QueryList;\n\n  public groups: InternalGroup[];\n  public subItems: PropertyItemMeta[];\n\n  constructor(el: ElementRef, private cdr: ChangeDetectorRef) {\n    this.isInternal = el.nativeElement.parentElement && el.nativeElement.parentElement.classList &&\n      el.nativeElement.parentElement.classList.contains('internal-property-grid');\n  }\n\n  ngAfterViewInit(): void {\n    if (this.isInternal) {\n      this._templateLoaded = true;\n    } else {\n      if (this.defaultTemplates) {\n        this.defaultTemplates.forEach((item) => {\n          if (!this.templateMap.hasOwnProperty(item.name)) {\n            this.templateMap[item.name] = item.template;\n          }\n        });\n        this._templateLoaded = true;\n        this.cdr.detectChanges();\n      }\n    }\n  }\n\n  ngAfterContentInit(): void {\n    if (!this.isInternal) {\n      if (!this.templateMap) {\n        this.templateMap = {};\n      }\n      this.templates.forEach((item) => {\n        this.templateMap[item.name] = item.template;\n      });\n    }\n  }\n\n  public openLink(link: string) {\n    if (link) {\n      window.open(link, '_blank');\n    }\n  }\n\n  public getTemplate(type: string | any): TemplateRef {\n    if (typeof type === 'string' && this.templateMap) {\n      return type ? this.templateMap[type] : this.templateMap.default;\n    } else {\n      return undefined;\n    }\n  }\n\n  public propertyValue(meta: PropertyItemMeta): PropertyValue {\n    return new PropertyValue(this.options, meta);\n  }\n\n  public toggle(): void {\n    this.state = this.state === 'visible' ? 'hidden' : 'visible';\n  }\n\n  private initMeta(): void {\n    const meta: object = this.meta;\n    if (!meta) {\n      this.subItems = [];\n      return;\n    }\n\n    const groups: InternalGroup[] = [new InternalGroup(undefined)];\n    const subItems: PropertyItemMeta[] = [];\n    for (const i in meta) {\n      if (!meta.hasOwnProperty(i)) {\n        continue;\n      }\n      const v: PropertyItemMeta = meta[i];\n      if (v.hidden) {\n        continue;\n      }\n      if (v.type === 'subItems') {\n        subItems.push(v);\n        continue;\n      }\n\n      let group = groups.find(o => o.name === v.group);\n      if (!group) {\n        group = new InternalGroup(v.group);\n        groups.push(group);\n      }\n      group.items.push(v);\n    }\n    groups.forEach(o => o.items.sort((a, b) => a.order - b.order));\n\n    this.groups = groups.filter(o => o.items.length > 0);\n    this.subItems = subItems;\n  }\n\n  optionLabel(v: any): string {\n    if (typeof v === 'string') {\n      return v;\n    }\n    if (v.text) {\n      return v.text;\n    }\n    if (v.label) {\n      return v.label;\n    }\n    return v;\n  }\n\n  optionValue(v: any): any {\n    return v && v.value ? v.value : v;\n  }\n}\n\nexport class InternalGroup {\n  public readonly items: PropertyItemMeta[] = [];\n  public type = 'group';\n\n  public state = true;\n\n  public toggle(): void {\n    this.state = !this.state;\n  }\n\n  constructor(public name: string) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PropertyGridComponent.html":{"url":"components/PropertyGridComponent.html","title":"component - PropertyGridComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PropertyGridComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-property-grid/src/lib/property-grid.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-property-grid\n            \n\n\n            \n                styles\n                \n      .property-grid {\n        /*border: solid 1px #95B8E7;*/\n      }\n\n      .property-grid-border {\n        border: 1px solid #d6d6d678\n      }\n\n      .property-grid-table {\n        border-spacing: 0;\n        padding: 5px\n      }\n\n      .property-grid-group {\n        background-color: white;\n        font-weight: bold;\n        color: #616161;\n        padding-top: 8px;\n        padding-bottom: 5px;\n      }\n\n      .property-grid-label, .property-grid-control {\n        border: dotted 1px #ccc;\n        padding: 2px 5px;\n      }\n\n      .internal-property-grid {\n        margin-top: 12px;\n      }\n\n      .internal-property-grid .property-grid {\n        border-width: 0;\n      }\n\n      .internal-property-grid .property-grid-header {\n        margin-bottom: 5px;\n        background-color: #f5f5f5;\n        padding-bottom: 5px;\n        padding-top: 5px;\n        padding-left: 5px;\n        box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n        -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n        width: 100%;\n      }\n\n      .internal-property-grid .property-grid-header-margin {\n        margin-left: 5px;\n        margin-right: 5px;\n        width: unset;\n      }\n\n      .internal-property-grid .property-grid-table {\n        border-width: 0;\n        /*border-top: 1px solid #dbdbdb;*/\n      }\n\n      .card {\n        background-color: #fff;\n        box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n        display: flex;\n        flex-flow: row wrap;\n        /*margin: 5px 20px;*/\n        padding: 0;\n      }\n\n      .internal-property-grid ngx-property-grid .card {\n        background-color: unset;\n        box-shadow: unset;\n        display: unset;\n        flex-flow: unset;\n        /*margin: 5px 20px;*/\n        padding: unset;\n      }\n    \n            \n\n            \n                template\n                \n  \n    \n      \n      \n        \n          {{group.name}}\n        \n\n        \n          \n            \n              {{item.name}}\n              [?]\n            \n            \n              \n              \n            \n          \n          \n            \n          \n        \n      \n      \n    \n  \n\n  \n    \n      {{item.name}}\n    \n    \n    \n  \n\n\n\n\n  \n    this is ignored\n    \n      \n      \n    \n    \n      \n      \n    \n  \n\n\n\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    {{p.value}}\n  \n\n  \n    \n  \n\n  \n    \n      \n        {{optionLabel(option)}}\n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _meta\n                            \n                            \n                                    Private\n                                _options\n                            \n                            \n                                    Private\n                                _templateLoaded\n                            \n                            \n                                defaultTemplates\n                            \n                            \n                                    Public\n                                groups\n                            \n                            \n                                    Public\n                                    Readonly\n                                isInternal\n                            \n                            \n                                    Public\n                                subItems\n                            \n                            \n                                templates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getTemplate\n                            \n                            \n                                    Private\n                                initMeta\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                openLink\n                            \n                            \n                                optionLabel\n                            \n                            \n                                optionValue\n                            \n                            \n                                    Public\n                                propertyValue\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cardStyle\n                            \n                            \n                                groupCollapse\n                            \n                            \n                                labelWidth\n                            \n                            \n                                meta\n                            \n                            \n                                options\n                            \n                            \n                                showHelp\n                            \n                            \n                                state\n                            \n                            \n                                templateMap\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    templateLoaded\n                                \n                                \n                                    meta\n                                \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:276\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cardStyle\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:242\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupCollapse\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:245\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelWidth\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '120px'\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:239\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        meta\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:251\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:261\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showHelp\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:248\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n                \n                    \n                        Type :     \"hidden\" | \"visible\"\n\n                    \n                \n                \n                    \n                        Default value : 'visible'\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:232\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        templateMap\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:229\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:235\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTemplate(type: string | any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:316\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            string | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TemplateRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initMeta\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initMeta()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:332\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:299\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:283\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openLink\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openLink(link: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:310\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            optionLabel\n                        \n                        \n                    \n                \n            \n            \n                \noptionLabel(v: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:367\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            optionValue\n                        \n                        \n                    \n                \n            \n            \n                \noptionValue(v: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:380\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            propertyValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    propertyValue(meta: PropertyItemMeta)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:324\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    meta\n                                    \n                                                PropertyItemMeta\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PropertyValue\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:328\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _meta\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:220\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:219\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _templateLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:221\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultTemplates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(NgxTemplate)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:272\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            groups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InternalGroup[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:275\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            isInternal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:226\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PropertyItemMeta[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:276\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(NgxTemplate)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:273\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        templateLoaded\n                    \n                \n\n                \n                    \n                        gettemplateLoaded()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:222\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        meta\n                    \n                \n\n                \n                    \n                        getmeta()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:256\n                                \n                            \n\n                \n                    \n                        setmeta(v: any)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:251\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:268\n                                \n                            \n\n                \n                    \n                        setoptions(v: any)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-property-grid/src/lib/property-grid.component.ts:261\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  AfterContentInit, AfterViewInit, ChangeDetectorRef,\n  Component,\n  ContentChildren, ElementRef,\n  Input,\n  QueryList,\n  TemplateRef, ViewChildren\n} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {NgxTemplate} from 'ngx-template';\nimport {PropertyItemMeta} from './property-item-meta';\nimport {PropertyValue} from './property-value';\n\n@Component({\n  selector: 'ngx-property-grid',\n  template: `\n    \n      \n        \n          \n          \n            \n              {{group.name}}\n            \n\n            \n              \n                \n                  {{item.name}}\n                  [?]\n                \n                \n                  \n                  \n                \n              \n              \n                \n              \n            \n          \n          \n        \n      \n\n      \n        \n          {{item.name}}\n        \n        \n        \n      \n    \n\n\n    \n      \n        this is ignored\n        \n          \n          \n        \n        \n          \n          \n        \n      \n    \n\n\n    \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        {{p.value}}\n      \n\n      \n        \n      \n\n      \n        \n          \n            {{optionLabel(option)}}\n          \n        \n      \n    \n  `,\n  styles: [\n      `\n      .property-grid {\n        /*border: solid 1px #95B8E7;*/\n      }\n\n      .property-grid-border {\n        border: 1px solid #d6d6d678\n      }\n\n      .property-grid-table {\n        border-spacing: 0;\n        padding: 5px\n      }\n\n      .property-grid-group {\n        background-color: white;\n        font-weight: bold;\n        color: #616161;\n        padding-top: 8px;\n        padding-bottom: 5px;\n      }\n\n      .property-grid-label, .property-grid-control {\n        border: dotted 1px #ccc;\n        padding: 2px 5px;\n      }\n\n      .internal-property-grid {\n        margin-top: 12px;\n      }\n\n      .internal-property-grid .property-grid {\n        border-width: 0;\n      }\n\n      .internal-property-grid .property-grid-header {\n        margin-bottom: 5px;\n        background-color: #f5f5f5;\n        padding-bottom: 5px;\n        padding-top: 5px;\n        padding-left: 5px;\n        box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n        -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n        width: 100%;\n      }\n\n      .internal-property-grid .property-grid-header-margin {\n        margin-left: 5px;\n        margin-right: 5px;\n        width: unset;\n      }\n\n      .internal-property-grid .property-grid-table {\n        border-width: 0;\n        /*border-top: 1px solid #dbdbdb;*/\n      }\n\n      .card {\n        background-color: #fff;\n        box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n        display: flex;\n        flex-flow: row wrap;\n        /*margin: 5px 20px;*/\n        padding: 0;\n      }\n\n      .internal-property-grid ngx-property-grid .card {\n        background-color: unset;\n        box-shadow: unset;\n        display: unset;\n        flex-flow: unset;\n        /*margin: 5px 20px;*/\n        padding: unset;\n      }\n    `\n  ],\n  animations: [\n    trigger('collapseAnimation', [\n      state('hidden', style({\n        height: '0',\n        // overflow: 'hidden',\n      })),\n      state('visible', style({\n        height: '*'\n      })),\n      transition('visible  hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n    ]),\n    trigger('flyInOut', [\n      state('in', style({transform: 'translateX(0)'})),\n      transition('void => *', [\n        style({transform: 'translateX(-100%)'}),\n        animate(100)\n      ]),\n      transition('* => void', [\n        animate(100, style({transform: 'translateX(100%)'}))\n      ])\n    ])\n  ]\n})\nexport class PropertyGridComponent implements AfterContentInit, AfterViewInit {\n  private _options: any;\n  private _meta: any;\n  private _templateLoaded = false;\n  public get templateLoaded(): boolean {\n    return this._templateLoaded;\n  }\n\n  public readonly isInternal: boolean = false;\n\n  @Input()\n  public templateMap: { [key: string]: TemplateRef };\n\n  @Input()\n  public state: 'hidden' | 'visible' = 'visible';\n\n  @Input()\n  width: string | number;\n\n\n  @Input()\n  labelWidth: string | number = '120px';\n\n  @Input()\n  cardStyle = true;\n\n  @Input()\n  groupCollapse = false;\n\n  @Input()\n  showHelp = true;\n\n  @Input()\n  public set meta(v: any) {\n    this._meta = v;\n    this.initMeta();\n  }\n\n  public get meta(): any {\n    return this._meta;\n  }\n\n  @Input()\n  public set options(v: any) {\n    this._options = v;\n    if (v.__meta__) {\n      this.meta = v.__meta__;\n    }\n  }\n\n  public get options(): any {\n    return this._options;\n  }\n\n  @ViewChildren(NgxTemplate) defaultTemplates: QueryList;\n  @ContentChildren(NgxTemplate) templates: QueryList;\n\n  public groups: InternalGroup[];\n  public subItems: PropertyItemMeta[];\n\n  constructor(el: ElementRef, private cdr: ChangeDetectorRef) {\n    this.isInternal = el.nativeElement.parentElement && el.nativeElement.parentElement.classList &&\n      el.nativeElement.parentElement.classList.contains('internal-property-grid');\n  }\n\n  ngAfterViewInit(): void {\n    if (this.isInternal) {\n      this._templateLoaded = true;\n    } else {\n      if (this.defaultTemplates) {\n        this.defaultTemplates.forEach((item) => {\n          if (!this.templateMap.hasOwnProperty(item.name)) {\n            this.templateMap[item.name] = item.template;\n          }\n        });\n        this._templateLoaded = true;\n        this.cdr.detectChanges();\n      }\n    }\n  }\n\n  ngAfterContentInit(): void {\n    if (!this.isInternal) {\n      if (!this.templateMap) {\n        this.templateMap = {};\n      }\n      this.templates.forEach((item) => {\n        this.templateMap[item.name] = item.template;\n      });\n    }\n  }\n\n  public openLink(link: string) {\n    if (link) {\n      window.open(link, '_blank');\n    }\n  }\n\n  public getTemplate(type: string | any): TemplateRef {\n    if (typeof type === 'string' && this.templateMap) {\n      return type ? this.templateMap[type] : this.templateMap.default;\n    } else {\n      return undefined;\n    }\n  }\n\n  public propertyValue(meta: PropertyItemMeta): PropertyValue {\n    return new PropertyValue(this.options, meta);\n  }\n\n  public toggle(): void {\n    this.state = this.state === 'visible' ? 'hidden' : 'visible';\n  }\n\n  private initMeta(): void {\n    const meta: object = this.meta;\n    if (!meta) {\n      this.subItems = [];\n      return;\n    }\n\n    const groups: InternalGroup[] = [new InternalGroup(undefined)];\n    const subItems: PropertyItemMeta[] = [];\n    for (const i in meta) {\n      if (!meta.hasOwnProperty(i)) {\n        continue;\n      }\n      const v: PropertyItemMeta = meta[i];\n      if (v.hidden) {\n        continue;\n      }\n      if (v.type === 'subItems') {\n        subItems.push(v);\n        continue;\n      }\n\n      let group = groups.find(o => o.name === v.group);\n      if (!group) {\n        group = new InternalGroup(v.group);\n        groups.push(group);\n      }\n      group.items.push(v);\n    }\n    groups.forEach(o => o.items.sort((a, b) => a.order - b.order));\n\n    this.groups = groups.filter(o => o.items.length > 0);\n    this.subItems = subItems;\n  }\n\n  optionLabel(v: any): string {\n    if (typeof v === 'string') {\n      return v;\n    }\n    if (v.text) {\n      return v.text;\n    }\n    if (v.label) {\n      return v.label;\n    }\n    return v;\n  }\n\n  optionValue(v: any): any {\n    return v && v.value ? v.value : v;\n  }\n}\n\nexport class InternalGroup {\n  public readonly items: PropertyItemMeta[] = [];\n  public type = 'group';\n\n  public state = true;\n\n  public toggle(): void {\n    this.state = !this.state;\n  }\n\n  constructor(public name: string) {\n  }\n}\n\n    \n\n\n    \n            \n      .property-grid {\n        /*border: solid 1px #95B8E7;*/\n      }\n\n      .property-grid-border {\n        border: 1px solid #d6d6d678\n      }\n\n      .property-grid-table {\n        border-spacing: 0;\n        padding: 5px\n      }\n\n      .property-grid-group {\n        background-color: white;\n        font-weight: bold;\n        color: #616161;\n        padding-top: 8px;\n        padding-bottom: 5px;\n      }\n\n      .property-grid-label, .property-grid-control {\n        border: dotted 1px #ccc;\n        padding: 2px 5px;\n      }\n\n      .internal-property-grid {\n        margin-top: 12px;\n      }\n\n      .internal-property-grid .property-grid {\n        border-width: 0;\n      }\n\n      .internal-property-grid .property-grid-header {\n        margin-bottom: 5px;\n        background-color: #f5f5f5;\n        padding-bottom: 5px;\n        padding-top: 5px;\n        padding-left: 5px;\n        box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n        -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n        width: 100%;\n      }\n\n      .internal-property-grid .property-grid-header-margin {\n        margin-left: 5px;\n        margin-right: 5px;\n        width: unset;\n      }\n\n      .internal-property-grid .property-grid-table {\n        border-width: 0;\n        /*border-top: 1px solid #dbdbdb;*/\n      }\n\n      .card {\n        background-color: #fff;\n        box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .2);\n        display: flex;\n        flex-flow: row wrap;\n        /*margin: 5px 20px;*/\n        padding: 0;\n      }\n\n      .internal-property-grid ngx-property-grid .card {\n        background-color: unset;\n        box-shadow: unset;\n        display: unset;\n        flex-flow: unset;\n        /*margin: 5px 20px;*/\n        padding: unset;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{group.name}}                                                    {{item.name}}              [?]                                                                                                                                                {{item.name}}                    this is ignored                                                                        {{p.value}}                              {{optionLabel(option)}}            '\n    var COMPONENTS = [{'name': 'PropertyGridComponent', 'selector': 'ngx-property-grid'}];\n    var DIRECTIVES = [{'name': 'DynamicComponentLoadDirective', 'selector': '[dynamicComponentLoad]'}];\n    var ACTUAL_COMPONENT = {'name': 'PropertyGridComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PropertyGridModule.html":{"url":"modules/PropertyGridModule.html","title":"module - PropertyGridModule","body":"\n                   \n\n\n\n\n    Modules\n    PropertyGridModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyGridModule\n\n\n\ncluster_PropertyGridModule_declarations\n\n\n\ncluster_PropertyGridModule_exports\n\n\n\n\nDynamicComponentLoadDirective\n\nDynamicComponentLoadDirective\n\n\n\nPropertyGridModule\n\nPropertyGridModule\n\nPropertyGridModule -->\n\nDynamicComponentLoadDirective->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent\n\nPropertyGridComponent\n\nPropertyGridModule -->\n\nPropertyGridComponent->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent \n\nPropertyGridComponent \n\nPropertyGridComponent  -->\n\nPropertyGridModule->PropertyGridComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/property-grid.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DynamicComponentLoadDirective\n                        \n                        \n                            PropertyGridComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PropertyGridComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {DynamicComponentLoadDirective} from './dynamic-component-load.directive';\nimport {PropertyGridComponent} from './property-grid.component';\nimport {NgxTemplateModule} from 'ngx-template';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, NgxTemplateModule\n  ],\n  declarations: [\n    PropertyGridComponent,\n    DynamicComponentLoadDirective\n  ],\n  exports: [\n    PropertyGridComponent\n  ]\n})\nexport class PropertyGridModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PropertyItemMeta.html":{"url":"interfaces/PropertyItemMeta.html","title":"interface - PropertyItemMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PropertyItemMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/property-item-meta.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        colSpan2\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        group\n                                \n                                \n                                            Optional\n                                        hidden\n                                \n                                \n                                            Optional\n                                        initState\n                                \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        link\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                            Optional\n                                        order\n                                \n                                \n                                            Optional\n                                        showHelp\n                                \n                                \n                                            Optional\n                                        type\n                                \n                                \n                                            Optional\n                                        valueConvert\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colSpan2\n                                    \n                                \n                                \n                                    \n                                        colSpan2:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initState\n                                    \n                                \n                                \n                                    \n                                        initState:     \"hidden\" | \"visible\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"hidden\" | \"visible\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     PropertyKey\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PropertyKey\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showHelp\n                                    \n                                \n                                \n                                    \n                                        showHelp:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         \"color\" | \"date\" | \"checkbox\" | \"text\" | \"options\" | string | Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         \"color\" | \"date\" | \"checkbox\" | \"text\" | \"options\" | string | Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueConvert\n                                    \n                                \n                                \n                                    \n                                        valueConvert:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Type} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\nimport {IDynamicComponent} from './dynamic-component';\n\nexport interface PropertyItemMeta {\n    readonly key?: PropertyKey; // auto generate.\n    name: string; // The display name of the property in the grid\n    description?: string; // A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\n    order?: number; // The display order.\n    group?: string; //  The group this property belongs to\n    hidden?: boolean; // Whether this property should be hidden in the grid, default is false (can be omitted).\n    initState?: 'hidden' | 'visible'; // - hidden/visible. If hidden then subItems should init by hidden state. default is hidden\n    type?: 'color' | 'date' | 'checkbox' | 'text' | 'options' | string | Type>;\n    // options: boolean number options label color,\n    // or an custom component should be implement ControlValueAccessor or ICustomDynamicComponent\n    options?: any; // options for type\n    colSpan2?: boolean; //  - true/false. If true then property input will span both columns and will have no name/label\n    // (useful for textArea custom type)\n    valueConvert?: (value: any) => any; // convert the value, eg. parseInt\n    showHelp?: boolean; // default True.\n    link?: string; // help link\n}\n\n\nexport const meta = (itemMeta: PropertyItemMeta) =>\n    (target: any, key: PropertyKey) => {\n\n        // region [adjust]\n        (itemMeta as any).key = key;\n        if (typeof itemMeta.type === 'string') {\n\n        } else {\n\n        }\n        if (!itemMeta.type) {\n            itemMeta.type = 'text';\n        }\n\n        if (itemMeta.type === 'number' && !itemMeta.valueConvert) {\n            itemMeta.valueConvert = parseInt;\n        }\n\n        if (!itemMeta.initState) {\n            itemMeta.initState = 'hidden';\n        }\n        if (!itemMeta.order) {\n            itemMeta.order = Number.MAX_VALUE;\n        }\n        if (itemMeta.showHelp === undefined) {\n            itemMeta.showHelp = true;\n        }\n        // endregion\n\n        let __meta__ = target.__meta__;\n        if (!__meta__) {\n            __meta__ = {};\n            target.__meta__ = __meta__;\n        } else if (target.__proto__.__meta__ === __meta__) {\n            const subMeta = Object.create(Object.getPrototypeOf(__meta__));\n            Object.getOwnPropertyNames(__meta__).forEach(name => {\n                Object.defineProperty(subMeta, name, Object.getOwnPropertyDescriptor(__meta__, name));\n            });\n            __meta__ = subMeta;\n            target.__meta__ = __meta__;\n        }\n\n        Object.defineProperty(__meta__, key, {\n            enumerable: true,\n            get: () => itemMeta,\n            set: (v) => itemMeta = v\n        });\n    };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PropertyValue.html":{"url":"classes/PropertyValue.html","title":"class - PropertyValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PropertyValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/property-value.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(o: any, meta: PropertyItemMeta)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-property-grid/src/lib/property-value.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        o\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        PropertyItemMeta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            meta\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PropertyItemMeta\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-property-grid/src/lib/property-value.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-property-grid/src/lib/property-value.ts:4\n                                \n                            \n\n                \n                    \n                        setvalue(val: any)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-property-grid/src/lib/property-value.ts:8\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {PropertyItemMeta} from './property-item-meta';\n\nexport class PropertyValue {\n  public get value(): any {\n    return this.o[this.meta.key];\n  }\n\n  public set value(val: any) {\n    this.o[this.meta.key] = this.meta.valueConvert ? this.meta.valueConvert(val) : val;\n  }\n  constructor(private o: any, public meta: PropertyItemMeta) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PropertyValueAccess.html":{"url":"interfaces/PropertyValueAccess.html","title":"interface - PropertyValueAccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PropertyValueAccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ControlValueAccessor\n            \n\n\n\n\n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef, Directive,\n  Input, OnChanges, OnDestroy,\n  OnInit, SimpleChanges,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\nimport {PropertyItemMeta} from './property-item-meta';\nimport {PropertyValue} from './property-value';\nimport {IDynamicComponent} from './dynamic-component';\n\n@Directive({\n  selector: '[dynamicComponentLoad]',\n})\nexport class DynamicComponentLoadDirective implements OnInit, OnDestroy, OnChanges {\n  private readonly _controlValueChangeFn: (value: any) => void;\n  private component: ComponentRef>;\n  private propertyValue: PropertyValue;\n  private get componentType(): Type {\n    return this.meta.type as Type;\n  }\n\n  @Input('dynamicComponentLoad') private meta: PropertyItemMeta;\n  @Input()\n  public options: any;\n\n  constructor(private entry: ViewContainerRef, private componentFactoryResolver: ComponentFactoryResolver) {\n    this._controlValueChangeFn = (value: any) => this.propertyValue.value = value;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.options) {\n      this.propertyValue = new PropertyValue(changes.options.currentValue, this.meta);\n    }\n  }\n\n  ngOnInit() {\n    this.buildComponent();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyComponent();\n  }\n\n  private buildComponent(): void {\n    if (!this.componentType) {\n      return;\n    }\n    try {\n      this.destroyComponent();\n      // this.entry.clear();\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\n      const component = this.entry.createComponent(componentFactory, 0);\n      this.initComponent(component);\n      this.component = component;\n    } catch (e) {\n      console.error('load component error.');\n      console.error(e);\n    }\n  }\n\n  private initComponent(component: ComponentRef) {\n    component.instance.value = this.propertyValue.value;\n    if (component.instance.registerOnChange) {\n      component.instance.registerOnChange(this._controlValueChangeFn);\n    }\n    if (component.instance.valueChange) {\n      component.instance.valueChange.subscribe(this._controlValueChangeFn);\n    }\n\n    if (this.meta.options) {\n      Object.assign(component.instance, this.meta.options);\n    }\n  }\n\n  private destroyComponent(): void {\n    if (this.component) {\n      this.component.destroy();\n    }\n  }\n}\n\ninterface PropertyValueAccess extends ControlValueAccessor, IDynamicComponent {\n}\n\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts\n            \n            directive\n            DynamicComponentLoadDirective\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/dynamic-component-load.directive.ts\n            \n            interface\n            PropertyValueAccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/dynamic-component.ts\n            \n            interface\n            IDynamicComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-grid.component.ts\n            \n            component\n            PropertyGridComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-grid.component.ts\n            \n            class\n            InternalGroup\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-item-meta.ts\n            \n            interface\n            PropertyItemMeta\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-item-meta.ts\n            \n            variable\n            meta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-property-grid/src/lib/property-value.ts\n            \n            class\n            PropertyValue\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            ngx-template : ^1.1.1\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^9.1.4\n        \n            @angular/core : ^9.1.4\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgxPropertyGrid\n\n\n\nA small and simple property grid in angular to view/edit POJOs, excellent if you have a \"settings\" object you want to give the user to edit (that's why I have created it). Play online.\nDependencies\n\nangular9+\nngx-template\n\nUsage\n\nImport\n import {PropertyGridModule} from 'ngx-property-grid';\n\n import {NgxTemplateModule} from 'ngx-template'; If you need animation,you should import BrowserAnimationsModule in your app.module.ts.\n\nGetting Started\n\nHtml\n\nBasic  \nTemplate  \n      \n          \n      \n      \n          \n      \n  \n\n\nObject options\n  export class ExampleEditorOptions {\n      @meta({name: 'Font', description: 'The font editor to use', type: SimpleTextEditorComponent, group: 'Editor', hidden: false})\n      font = 'Source Code Pro';\n\n      @meta({name: 'Font size', group: 'Editor', type: 'number', valueConvert: parseInt})\n      fontSize = 14;\n\n      @meta({name: 'Font color', group: 'Editor', type: 'color'})\n      fontColor = '#51f41c';\n\n      @meta({name: 'jQuery', group: 'Plugins', type: 'checkbox'})\n      jQuery = true;\n\n      @meta({name: 'modernizr', description: 'Whether or not to include modernizr on the page', group: 'Plugins', type: 'checkbox'})\n      modernizr = false;\n\n      @meta({\n          name: 'Framework',\n          description: 'Whether to include any additional framework',\n          type: 'options',\n          options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]\n      })\n      framework = 'None';\n  }\n\n\nThe metadata options declare\n\n\n export interface PropertyItemMeta {\n    name: string; // The display name of the property in the grid\n    description?: string; // A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\n    order?: number; // The display order.\n    group?: string; //  The group this property belongs to\n    hidden?: boolean; // Whether this property should be hidden in the grid, default is false (can be omitted).\n    initState?: 'hidden' | 'visible'; // - hidden/visible. If hidden then subItems should init by hidden state. default is hidden\n    type?: 'color' | 'date' | 'checkbox' | 'text' | 'options' | string | Type>;\n    // options: boolean number options label color,\n    // or an custom component should be implement ControlValueAccessor or ICustomDynamicComponent\n    options?: any; // options for type\n    colSpan2?: boolean; //  - true/false. If true then property input will span both columns and will have no name/label\n    // (useful for textarea custom type)\n    valueConvert?: (value: any) => any; // convert the value, eg. parseInt\n}\nThe result would be (live demo):\n\n\nThe metadata object\nAs seen from the example above the metadata object can be used (it's optional) in order to describe the object properties.\nEach proprty in the metadata object could have the following:\n\nname - The display name of the property in the grid \ndescription - A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\nhidden - Whether this property should be hidden in the grid, default is false (can be omitted).\ngroup - The group this property belongs to\ntype - The type of the property, supported are:\nboolean or checkbox - A checkbox would be used\nnumber -  simple textbox\ncolor - simple textbox\noptions - A dropdown list would be used in case the metadata contains the options array property\nlabel - A label will be used, useful for uneditable / read-only properties\n\n\ncolspan2 - true/false. If true then property input will span both columns and will have no name/label (useful for textarea custom type)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 YISH\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        PropertyGridModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PropertyGridModule\n\n\n\ncluster_PropertyGridModule_declarations\n\n\n\ncluster_PropertyGridModule_exports\n\n\n\n\nDynamicComponentLoadDirective\n\nDynamicComponentLoadDirective\n\n\n\nPropertyGridModule\n\nPropertyGridModule\n\nPropertyGridModule -->\n\nDynamicComponentLoadDirective->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent\n\nPropertyGridComponent\n\nPropertyGridModule -->\n\nPropertyGridComponent->PropertyGridModule\n\n\n\n\n\nPropertyGridComponent \n\nPropertyGridComponent \n\nPropertyGridComponent  -->\n\nPropertyGridModule->PropertyGridComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            meta   (projects/.../property-item-meta.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-property-grid/src/lib/property-item-meta.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            meta\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (itemMeta: PropertyItemMeta) =>\n    (target: any, key: PropertyKey) => {\n\n        // region [adjust]\n        (itemMeta as any).key = key;\n        if (typeof itemMeta.type === 'string') {\n\n        } else {\n\n        }\n        if (!itemMeta.type) {\n            itemMeta.type = 'text';\n        }\n\n        if (itemMeta.type === 'number' && !itemMeta.valueConvert) {\n            itemMeta.valueConvert = parseInt;\n        }\n\n        if (!itemMeta.initState) {\n            itemMeta.initState = 'hidden';\n        }\n        if (!itemMeta.order) {\n            itemMeta.order = Number.MAX_VALUE;\n        }\n        if (itemMeta.showHelp === undefined) {\n            itemMeta.showHelp = true;\n        }\n        // endregion\n\n        let __meta__ = target.__meta__;\n        if (!__meta__) {\n            __meta__ = {};\n            target.__meta__ = __meta__;\n        } else if (target.__proto__.__meta__ === __meta__) {\n            const subMeta = Object.create(Object.getPrototypeOf(__meta__));\n            Object.getOwnPropertyNames(__meta__).forEach(name => {\n                Object.defineProperty(subMeta, name, Object.getOwnPropertyDescriptor(__meta__, name));\n            });\n            __meta__ = subMeta;\n            target.__meta__ = __meta__;\n        }\n\n        Object.defineProperty(__meta__, key, {\n            enumerable: true,\n            get: () => itemMeta,\n            set: (v) => itemMeta = v\n        });\n    }\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
