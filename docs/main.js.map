{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/property-grid/controls/simple-checkbox.component.ts","webpack:///./src/app/components/property-grid/controls/simple-color-picker.omponent.ts","webpack:///./src/app/components/property-grid/controls/simple-date-picker.component.ts","webpack:///./src/app/components/property-grid/controls/simple-label.component.ts","webpack:///./src/app/components/property-grid/controls/simple-select.component.ts","webpack:///./src/app/components/property-grid/controls/simple-text.component.ts","webpack:///./src/app/components/property-grid/custom.component.ts","webpack:///./src/app/components/property-grid/index.ts","webpack:///./src/app/components/property-grid/property-grid-control-provider.ts","webpack:///./src/app/components/property-grid/property-grid.component.ts","webpack:///./src/app/components/property-grid/property-item-meta.ts","webpack:///./src/app/components/property-grid/property-item-template.directive.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\nThe Object:<code>{{data}}</code>\\n<br>\\n<ngx-property-grid [width]=\\\"'350px'\\\" [options]=\\\"student\\\">\\n    <ng-template propertyType=\\\"text\\\" let-p>\\n       <input type=\\\"text\\\" [value]=\\\"p.value\\\" (change)=\\\"p.value = $event.target.value\\\">\\n    </ng-template>\\n</ngx-property-grid>\\n\"","module.exports = \"\"","import {Component, EventEmitter} from '@angular/core';\nimport {meta, ICustomDynamicComponent} from './components/property-grid';\nimport {MatCheckbox, MatSlider, MatSlideToggle} from '@angular/material';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    public student: ExampleStudentOptions = new ExampleStudentOptions();\n\n    constructor() {\n    }\n\n    public get data(): string {\n        return JSON.stringify(this.student);\n    }\n\n    text: string;\n}\n\n@Component({\n    selector: 'app-text-editor',\n    template: `<input type=\"text\" [value]=\"value\" (change)=\"valueChange.emit($event.target.value)\"/>`\n})\nexport class SimpleTextEditorComponent implements ICustomDynamicComponent<string> {\n    value: string;\n    valueChange: EventEmitter<string> = new EventEmitter<string>();\n}\n\nexport class ExampleEditorOptions {\n    @meta({\n        name: 'Font', description: 'The font editor to use', colSpan2: false,\n        componentType: SimpleTextEditorComponent, group: 'Editor', hidden: false\n    })\n    font = 'Source Code Pro';\n\n    @meta({name: 'Font size', group: 'Editor', valueConvert: parseInt, componentType: MatSlider})\n    fontSize = 14;\n\n    @meta({name: 'Font color', group: 'Editor', type: 'color'})\n    fontColor = '#51f41c';\n\n    @meta({name: 'jQuery', group: 'Plugins', componentType: MatCheckbox})\n    jQuery = true;\n\n    @meta({\n        name: 'modernizr',\n        description: 'Whether or not to include modernizr on the page',\n        group: 'Plugins',\n        componentType: MatSlideToggle\n    })\n    modernizr = false;\n\n    @meta({\n        name: 'Framework',\n        description: 'Whether to include any additional framework',\n        type: 'options',\n        componentOptions: {options: ['None', {text: 'AngularJS', value: 'angular'}, {text: 'Backbone.js', value: 'backbone'}]}\n    })\n    framework = 'None';\n\n    @meta({name: 'Update Time', type: 'date'})\n    time = '2018-05-08';\n}\n\nexport class ExampleStudentOptions {\n    @meta({name: 'Name', group: 'Basic', type: 'text', order: 4})\n    name = 'Lily';\n\n    @meta({name: 'Age', group: 'Basic', valueConvert: parseInt, type: 'text', order: 2})\n    age = 19;\n\n    @meta({name: 'Editor', type: 'subItems', initState: 'visible'})\n    editor: ExampleEditorOptions = new ExampleEditorOptions();\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\n\nimport {AppComponent, SimpleTextEditorComponent} from './app.component';\nimport {PropertyGridModule} from './components/property-grid';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {\n    MatCheckboxModule,\n    MatSlider,\n    MatSliderModule,\n    MatDatepickerModule,\n    MatDatepicker,\n    MatSlideToggleModule,\n    MatSlideToggle\n} from '@angular/material';\nimport {MatCheckbox} from '@angular/material';\n\n@NgModule({\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\n    imports: [\n        BrowserModule, NoopAnimationsModule, PropertyGridModule,\n        MatCheckboxModule, MatSliderModule, MatDatepickerModule, MatSlideToggleModule,\n    ],\n    entryComponents: [SimpleTextEditorComponent, MatCheckbox, MatSlider, MatDatepicker, MatSlideToggle],\n    declarations: [\n        AppComponent, SimpleTextEditorComponent\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, EventEmitter} from '@angular/core';\nimport {ICustomDynamicComponent} from '../custom.component';\n\n@Component({\n    selector: 'simple-checkbox-component',\n    template: '<input type=\"checkbox\" [checked]=\"value\" (change)=\"valueChange.emit($event.target.checked)\"/>',\n})\nexport class SimpleCheckboxComponent implements ICustomDynamicComponent<boolean> {\n    value: boolean;\n    valueChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n}\n","import {Component, EventEmitter} from '@angular/core';\nimport {ICustomDynamicComponent} from '../custom.component';\n\n@Component({\n    selector: 'simple-color-component',\n    template: '<input type=\"color\" [value]=\"value\" (change)=\"valueChange.emit($event.target.value)\"/>',\n})\nexport class SimpleColorComponent implements ICustomDynamicComponent<string> {\n    value: string;\n    valueChange: EventEmitter<string> = new EventEmitter<string>();\n}\n","import {Component, EventEmitter} from '@angular/core';\nimport {ICustomDynamicComponent} from '../custom.component';\n\n@Component({\n    selector: 'simple-date-component',\n    template: '<input type=\"date\" [value]=\"value\" (change)=\"valueChange.emit($event.target.value)\"/>',\n})\nexport class SimpleDateComponent implements ICustomDynamicComponent<string> {\n    value: string;\n    valueChange: EventEmitter<string> = new EventEmitter<string>();\n}\n","import {Component, EventEmitter} from '@angular/core';\nimport {ICustomDynamicComponent} from '../custom.component';\n\n@Component({\n    selector: 'simple-label-component',\n    template: '<label>{{value}}</label>',\n})\nexport class SimpleLabelComponent implements ICustomDynamicComponent<string> {\n    value: string;\n    valueChange: EventEmitter<string> = new EventEmitter<string>();\n}\n","import {Component, EventEmitter} from '@angular/core';\nimport {ICustomDynamicComponent} from '../custom.component';\n\n@Component({\n    selector: 'simple-select-component',\n    template: `\n        <select (change)=\"valueChange.emit($event.target.value)\">\n            <option [value]=\"optionValue(option)\" *ngFor=\"let option of options\">{{optionLabel(option)}}</option>\n        </select>\n    `,\n})\nexport class SimpleSelectComponent implements ICustomDynamicComponent<any> {\n    value: any;\n    valueChange: EventEmitter<any> = new EventEmitter<any>();\n    options: any[];\n\n    optionLabel(v: any): string {\n        if (typeof v === 'string') {\n            return v;\n        }\n        if (v.text) {\n            return v.text;\n        }\n        if (v.label) {\n            return v.label;\n        }\n        return v;\n    }\n\n    optionValue(v: any): any {\n        return v && v.value ? v.value : v;\n    }\n}\n","import {Component, EventEmitter} from '@angular/core';\nimport {ICustomDynamicComponent} from '../custom.component';\n\n@Component({\n    selector: 'simple-text-component',\n    template: '<input type=\"text\" [value]=\"value\" (change)=\"valueChange.emit($event.target.value)\"/>',\n})\nexport class SimpleTextComponent implements ICustomDynamicComponent<string> {\n    value: string;\n    valueChange: EventEmitter<string> = new EventEmitter<string>();\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    Type,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\n\n@Component({\n    selector: 'custom-component',\n    template: '<ng-container #container></ng-container>',\n})\nexport class CustomComponent implements OnInit, ICustomDynamicComponent<any> {\n    private readonly _controlValueChangeFn: (value: any) => void;\n    private _value: any;\n\n    @ViewChild('container', { read: ViewContainerRef }) entry;\n    private component: ComponentRef<ICustomDynamicComponent<any>>;\n\n    @Input() componentType: Type<PropertyValueAccess>;\n\n    @Input()\n    componentOptions: any;\n\n    @Input()\n    set value(v: any) {\n        this._value = v;\n        if (this.component) {\n            this.component.instance.value =  v;\n        }\n    }\n    get value(): any {\n        return this._value;\n    }\n\n    @Output()\n    readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n        this._controlValueChangeFn = (value: any) => this.onValueChange(value);\n    }\n\n    ngOnInit() {\n        this.buildComponent();\n    }\n\n    private onValueChange(e: any): void {\n        this._value = e;\n        this.valueChange.emit(e);\n    }\n\n    private buildComponent(): void {\n        if (!this.componentType) {\n            return;\n        }\n        try {\n            this.destroyComponent();\n            // this.entry.clear();\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory<PropertyValueAccess>(this.componentType);\n            const component = this.entry.createComponent(componentFactory, 0);\n            this.initComponent(component);\n            this.component = component;\n        } catch (e) {\n            console.error('load component error.');\n            console.error(e);\n        }\n    }\n\n    private initComponent(component: ComponentRef<PropertyValueAccess>) {\n        component.instance.value = this._value;\n        if (component.instance.registerOnChange) {\n            component.instance.registerOnChange(this._controlValueChangeFn);\n        }\n        if (component.instance.valueChange) {\n            component.instance.valueChange.subscribe(this._controlValueChangeFn);\n        }\n\n        if (this.componentOptions) {\n            Object.assign(component.instance, this.componentOptions);\n        }\n    }\n\n    private destroyComponent(): void {\n        if (this.component) {\n            this.component.destroy();\n        }\n    }\n}\n\nexport interface PropertyValueAccess extends ControlValueAccessor, ICustomDynamicComponent<any> {\n}\n\nexport interface ICustomDynamicComponent<TValue> {\n    value: TValue;\n    valueChange: EventEmitter<TValue>;\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {CustomComponent, ICustomDynamicComponent} from './custom.component';\nimport {PropertyGridComponent} from './property-grid.component';\nimport {SimpleCheckboxComponent} from './controls/simple-checkbox.component';\nimport {defaultProvider, PropertyGridControlProvider} from './property-grid-control-provider';\nimport {SimpleColorComponent} from './controls/simple-color-picker.omponent';\nimport {SimpleLabelComponent} from './controls/simple-label.component';\nimport {SimpleTextComponent} from './controls/simple-text.component';\nimport {SimpleSelectComponent} from './controls/simple-select.component';\nimport {SimpleDateComponent} from './controls/simple-date-picker.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {PropertyItemTemplateDirective} from './property-item-template.directive';\n\nexport {ICustomDynamicComponent} from './custom.component';\nexport {PropertyGridComponent, PropertyValue} from './property-grid.component';\nexport {meta, PropertyItemMeta} from './property-item-meta';\n\ndefaultProvider.register('checkbox', SimpleCheckboxComponent);\ndefaultProvider.register('color', SimpleColorComponent);\ndefaultProvider.register('label', SimpleLabelComponent);\ndefaultProvider.register('text', SimpleTextComponent);\ndefaultProvider.register('number', SimpleTextComponent);\ndefaultProvider.register('options', SimpleSelectComponent);\ndefaultProvider.register('date', SimpleDateComponent);\n\n@NgModule({\n    imports: [\n        CommonModule, BrowserAnimationsModule,\n    ],\n    entryComponents: defaultProvider.components,\n    declarations: [\n        PropertyGridComponent,\n        CustomComponent,\n        PropertyItemTemplateDirective,\n        SimpleCheckboxComponent,\n        SimpleColorComponent,\n        SimpleLabelComponent,\n        SimpleTextComponent,\n        SimpleSelectComponent,\n        SimpleDateComponent\n    ],\n    providers: [{provide: PropertyGridControlProvider, useValue: defaultProvider}],\n    exports: [\n        PropertyGridComponent, PropertyItemTemplateDirective\n    ]\n})\nexport class PropertyGridModule {\n}\n","import {Injectable, Type} from '@angular/core';\n\n\n@Injectable()\nexport class PropertyGridControlProvider {\n    private readonly _map: Map<string, Type<any>> = new Map<string, Type<any>>();\n    public components: Array<Type<any>> = [];\n    public register(type: string, componentType: Type<any>) {\n        this._map.set(type, componentType);\n        this.components.push(componentType);\n    }\n    public getComponentType(type: string) {\n        return this._map.get(type);\n    }\n}\n\nexport const defaultProvider = new PropertyGridControlProvider();\n","import {AfterContentInit, Component, ContentChildren, Input, OnInit, QueryList, TemplateRef} from '@angular/core';\nimport {InternalPropertyItemMeta} from './property-item-meta';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {PropertyItemTemplateDirective} from './property-item-template.directive';\n\n@Component({\n    selector: 'ngx-property-grid',\n    template: `\n        <div class=\"property-grid\" [ngStyle]=\"{width: width}\">\n            <table class=\"property-grid-table\" [ngStyle]=\"{width: width}\">\n                <tbody>\n                <tr *ngFor=\"let row of rows\" [ngClass]=\"row.type == 'group'? 'property-grid-group-row':'property-grid-row'\">\n\n                    <!--<td [attr.colspan]=\"row.colspan\"></td>-->\n                    <td *ngIf=\"row.type == 'group'\" colspan=\"2\" class=\"property-grid-group\">{{row.name}}</td>\n                    <td *ngIf=\"row.type != 'group' && row.colSpan2 != true\" [width]=\"labelWidth\" colspan=\"1\" class=\"property-grid-label\">\n                        {{row.name}}\n                        <span *ngIf=\"row.description\" [title]=\"row.description\">[?]</span>\n                    </td>\n                    <td *ngIf=\"row.type != 'group'\" [attr.colspan]=\"row.colSpan2 == true ? 2 : 1\" class=\"property-grid-control\">\n                        <custom-component\n                            *ngIf=\"!getTemplate(row.type)\"\n                            [componentType]=\"row.componentType\"\n                            [componentOptions]=\"row.componentOptions\"\n                            [value]=\"options[row.key]\"\n                            (valueChange)=\"convertValue(row, $event)\">\n                        </custom-component>\n                        <ng-container *ngTemplateOutlet=\"getTemplate(row.type); context: {$implicit: propertyValue(row)}\">\n                        </ng-container>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n\n            <div *ngFor=\"let item of subItems\" class=\"internal-property-grid\">\n                <div (click)=\"pg.toggle()\" class=\"property-grid-header\"><b>{{item.name}}</b></div>\n                <ngx-property-grid\n                    [state]=\"item.initState\"\n                    [@internalPropertyGrid]=\"pg.state\"\n                    [options]=\"options[item.key]\"\n                    [width]=\"width\"\n                    [labelWidth]=\"labelWidth\"\n                    style=\"display: block;overflow: hidden\"\n                    #pg>\n                </ngx-property-grid>\n            </div>\n        </div>\n    `,\n    styles: [\n            `\n            .property-grid {\n                /*border: solid 1px #95B8E7;*/\n            }\n\n            .property-grid-table {\n                border: solid 1px #ddd;\n                border-spacing: 0;\n                border-top: 1px solid #dbdbdb;\n            }\n\n            .property-grid-group {\n                background-color: #368bffeb;\n                font-weight: bold;\n                color: white;\n            }\n\n            .property-grid-label, .property-grid-control {\n                border: dotted 1px #ccc;\n                padding: 2px 5px;\n            }\n\n            .internal-property-grid {\n                margin-top: 12px;\n                -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n                box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n                border: solid 1px #ddd;\n            }\n\n            .internal-property-grid .property-grid {\n                border-width: 0;\n            }\n\n            .internal-property-grid .property-grid-header {\n                margin-bottom: 5px;\n                background-color: #f5f5f5;\n                padding-bottom: 5px;\n                padding-top: 5px;\n                padding-left: 5px;\n                box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n                -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n            }\n\n            .internal-property-grid .property-grid-table {\n                border-width: 0;\n                /*border-top: 1px solid #dbdbdb;*/\n            }\n        `\n    ],\n    animations: [\n        trigger('internalPropertyGrid', [\n            state('hidden', style({\n                height: '0',\n                // overflow: 'hidden'\n            })),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible <=> hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n        ])\n    ]\n})\nexport class PropertyGridComponent implements OnInit, AfterContentInit {\n    private _options: any;\n    private _meta: any;\n    private _templateMap: any;\n\n    @Input()\n    public state = 'visible';\n\n    @Input()\n    width: string | number;\n\n\n    @Input()\n    labelWidth: string | number = '120px';\n\n    @Input()\n    public set meta(v: any) {\n        this._meta = v;\n        this.initMeta();\n    }\n\n    public get meta(): any {\n        return this._meta;\n    }\n\n    @Input()\n    public set options(v: any) {\n        this._options = v;\n        if (v.__meta__) {\n            this.meta = v.__meta__;\n        }\n    }\n\n    public get options(): any {\n        return this._options;\n    }\n\n    @ContentChildren(PropertyItemTemplateDirective) templates: QueryList<any>;\n\n\n    public rows: Array<InternalGroup | InternalPropertyItemMeta | any>;\n    public subItems: InternalPropertyItemMeta[];\n\n    constructor() {\n    }\n\n    ngOnInit() {\n        console.log(this);\n    }\n\n    ngAfterContentInit(): void {\n        if (this.templates.length) {\n            this._templateMap = {};\n        }\n\n        this.templates.forEach((item) => {\n            this._templateMap[item.name] = item.template;\n        });\n    }\n    public getTemplate(type: string): TemplateRef<any> {\n        if (this._templateMap) {\n            return type ? this._templateMap[type] : this._templateMap['default'];\n        } else {\n            return null;\n        }\n    }\n\n    public propertyValue(meta: InternalPropertyItemMeta): PropertyValue {\n        return new PropertyValue(this.options, meta);\n    }\n\n    public toggle(): void {\n        this.state = this.state === 'visible' ? 'hidden' : 'visible';\n    }\n\n    public convertValue(meta: InternalPropertyItemMeta, val: any): void {\n        this.options[meta.key] = meta.valueConvert ? meta.valueConvert(val) : val;\n    }\n\n    private initMeta(): void {\n        const meta: object = this.meta;\n        if (!meta) {\n            this.rows = [];\n            this.subItems = [];\n            return;\n        }\n\n        const groups: InternalGroup[] = [new InternalGroup(undefined)];\n        const subItems: InternalPropertyItemMeta[] = [];\n        for (const i in meta) {\n            if (!meta.hasOwnProperty(i)) {\n                continue;\n            }\n            const v: InternalPropertyItemMeta = meta[i];\n            if (v.hidden) {\n                continue;\n            }\n            if (v.type === 'subItems') {\n                subItems.push(v);\n                continue;\n            }\n\n            let group = groups.find(o => o.name === v.group);\n            if (!group) {\n                group = new InternalGroup(v.group);\n                groups.push(group);\n            }\n            group.items.push(v);\n        }\n        groups.forEach(o => o.items.sort((a, b) => a.order - b.order));\n        const rows: Array<InternalGroup | InternalPropertyItemMeta> = [];\n        for (const g of groups) {\n            if (g.name) {\n                rows.push(g);\n            }\n            g.items.forEach(o => rows.push(o));\n        }\n        this.rows = rows;\n        this.subItems = subItems;\n    }\n}\n\nexport class PropertyValue {\n    public get value(): any {\n        return this.o[this.meta.key];\n    }\n    public set value(val: any) {\n        this.o[this.meta.key] = this.meta.valueConvert ? this.meta.valueConvert(val) : val;\n    }\n    constructor(private o: any, public meta: InternalPropertyItemMeta) {\n    }\n}\n\nexport class InternalGroup {\n    public readonly items: InternalPropertyItemMeta[] = [];\n    public type = 'group';\n\n    constructor(public name: string) {\n    }\n}\n","import {Type} from '@angular/core';\nimport {defaultProvider} from './property-grid-control-provider';\nimport {ICustomDynamicComponent} from './custom.component';\nimport {ControlValueAccessor} from '@angular/forms';\n\nexport interface PropertyItemMeta {\n    name: string; // The display name of the property in the grid\n    description?: string; // A description of the property, will be used as tooltip on an hint element (a span with text \"[?]\")\n    order?: number; // The display order.\n    group?: string; //  The group this property belongs to\n    hidden?: boolean; // Whether this property should be hidden in the grid, default is false (can be omitted).\n    initState?: string; // - hidden/visible. If hidden then subItems should init by hidden state. default is hidden\n    componentType?: Type<ControlValueAccessor | ICustomDynamicComponent<any>>; // an custom component should be implement\n    // ControlValueAccessor or ICustomDynamicComponent<any>\n    componentOptions?: any;\n    colSpan2?: boolean; //  - true/false. If true then property input will span both columns and will have no name/label\n    // (useful for textarea custom type)\n    type?: string; // options: boolean number options label color\n    valueConvert?: (value: any) => any; // convert the value, eg. parseInt\n}\n\nexport interface InternalPropertyItemMeta extends PropertyItemMeta {\n    key: string | symbol;\n}\n\nexport const meta = (m: PropertyItemMeta) =>\n    (target: any, key: string | symbol) => {\n        const xMeta = m as InternalPropertyItemMeta;\n        if (!target.__meta__) {\n            target.__meta__ = {};\n        }\n        if (!xMeta.componentType) {\n            if (!xMeta.type) {\n                xMeta.componentType = defaultProvider.getComponentType('text');\n            } else if (xMeta.type === 'boolean') {\n                xMeta.componentType = defaultProvider.getComponentType('checkbox');\n            } else {\n                xMeta.componentType = defaultProvider.getComponentType(m.type);\n            }\n\n            if (xMeta.type === 'number' && !xMeta.valueConvert) {\n                xMeta.valueConvert = parseInt;\n            }\n        }\n        if (!xMeta.initState) {\n            xMeta.initState = 'hidden';\n        }\n        if (!xMeta.order) {\n            xMeta.order = 0;\n        }\n        xMeta.key = key;\n        target.__meta__[key] = xMeta;\n    };\n","import {Directive, Input, TemplateRef} from '@angular/core';\n\n@Directive({\n    selector: '[propertyType]'\n})\nexport class PropertyItemTemplateDirective {\n    @Input('propertyType') name: string;\n\n    constructor(public template: TemplateRef<any>) {\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.log(err));\n"],"sourceRoot":""}